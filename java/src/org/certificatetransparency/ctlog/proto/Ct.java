// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ct.proto

package org.certificatetransparency.ctlog.proto;

public final class Ct {
  private Ct() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ct.LogEntryType}
   */
  public enum LogEntryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>X509_ENTRY = 0;</code>
     */
    X509_ENTRY(0, 0),
    /**
     * <code>PRECERT_ENTRY = 1;</code>
     */
    PRECERT_ENTRY(1, 1),
    /**
     * <code>PRECERT_ENTRY_V2 = 2;</code>
     */
    PRECERT_ENTRY_V2(2, 2),
    /**
     * <code>X_JSON_ENTRY = 32768;</code>
     *
     * <pre>
     * Not part of the I-D, and outside the valid range.
     * </pre>
     */
    X_JSON_ENTRY(3, 32768),
    /**
     * <code>UNKNOWN_ENTRY_TYPE = 65536;</code>
     */
    UNKNOWN_ENTRY_TYPE(4, 65536),
    ;

    /**
     * <code>X509_ENTRY = 0;</code>
     */
    public static final int X509_ENTRY_VALUE = 0;
    /**
     * <code>PRECERT_ENTRY = 1;</code>
     */
    public static final int PRECERT_ENTRY_VALUE = 1;
    /**
     * <code>PRECERT_ENTRY_V2 = 2;</code>
     */
    public static final int PRECERT_ENTRY_V2_VALUE = 2;
    /**
     * <code>X_JSON_ENTRY = 32768;</code>
     *
     * <pre>
     * Not part of the I-D, and outside the valid range.
     * </pre>
     */
    public static final int X_JSON_ENTRY_VALUE = 32768;
    /**
     * <code>UNKNOWN_ENTRY_TYPE = 65536;</code>
     */
    public static final int UNKNOWN_ENTRY_TYPE_VALUE = 65536;


    public final int getNumber() { return value; }

    public static LogEntryType valueOf(int value) {
      switch (value) {
        case 0: return X509_ENTRY;
        case 1: return PRECERT_ENTRY;
        case 2: return PRECERT_ENTRY_V2;
        case 32768: return X_JSON_ENTRY;
        case 65536: return UNKNOWN_ENTRY_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogEntryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LogEntryType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LogEntryType>() {
            public LogEntryType findValueByNumber(int number) {
              return LogEntryType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.getDescriptor().getEnumTypes().get(0);
    }

    private static final LogEntryType[] VALUES = values();

    public static LogEntryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LogEntryType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ct.LogEntryType)
  }

  /**
   * Protobuf enum {@code ct.SignatureType}
   */
  public enum SignatureType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CERTIFICATE_TIMESTAMP = 0;</code>
     */
    CERTIFICATE_TIMESTAMP(0, 0),
    /**
     * <code>TREE_HEAD = 1;</code>
     *
     * <pre>
     * TODO(ekasper): called tree_hash in I-D.
     * </pre>
     */
    TREE_HEAD(1, 1),
    ;

    /**
     * <code>CERTIFICATE_TIMESTAMP = 0;</code>
     */
    public static final int CERTIFICATE_TIMESTAMP_VALUE = 0;
    /**
     * <code>TREE_HEAD = 1;</code>
     *
     * <pre>
     * TODO(ekasper): called tree_hash in I-D.
     * </pre>
     */
    public static final int TREE_HEAD_VALUE = 1;


    public final int getNumber() { return value; }

    public static SignatureType valueOf(int value) {
      switch (value) {
        case 0: return CERTIFICATE_TIMESTAMP;
        case 1: return TREE_HEAD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SignatureType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SignatureType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SignatureType>() {
            public SignatureType findValueByNumber(int number) {
              return SignatureType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.getDescriptor().getEnumTypes().get(1);
    }

    private static final SignatureType[] VALUES = values();

    public static SignatureType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SignatureType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ct.SignatureType)
  }

  /**
   * Protobuf enum {@code ct.Version}
   */
  public enum Version
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>V1 = 0;</code>
     */
    V1(0, 0),
    /**
     * <code>V2 = 1;</code>
     */
    V2(1, 1),
    /**
     * <code>UNKNOWN_VERSION = 256;</code>
     *
     * <pre>
     * Not part of the I-D, and outside the valid range.
     * </pre>
     */
    UNKNOWN_VERSION(2, 256),
    ;

    /**
     * <code>V1 = 0;</code>
     */
    public static final int V1_VALUE = 0;
    /**
     * <code>V2 = 1;</code>
     */
    public static final int V2_VALUE = 1;
    /**
     * <code>UNKNOWN_VERSION = 256;</code>
     *
     * <pre>
     * Not part of the I-D, and outside the valid range.
     * </pre>
     */
    public static final int UNKNOWN_VERSION_VALUE = 256;


    public final int getNumber() { return value; }

    public static Version valueOf(int value) {
      switch (value) {
        case 0: return V1;
        case 1: return V2;
        case 256: return UNKNOWN_VERSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Version>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Version>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Version>() {
            public Version findValueByNumber(int number) {
              return Version.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.getDescriptor().getEnumTypes().get(2);
    }

    private static final Version[] VALUES = values();

    public static Version valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Version(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ct.Version)
  }

  /**
   * Protobuf enum {@code ct.MerkleLeafType}
   */
  public enum MerkleLeafType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TIMESTAMPED_ENTRY = 0;</code>
     */
    TIMESTAMPED_ENTRY(0, 0),
    /**
     * <code>UNKNOWN_LEAF_TYPE = 256;</code>
     */
    UNKNOWN_LEAF_TYPE(1, 256),
    ;

    /**
     * <code>TIMESTAMPED_ENTRY = 0;</code>
     */
    public static final int TIMESTAMPED_ENTRY_VALUE = 0;
    /**
     * <code>UNKNOWN_LEAF_TYPE = 256;</code>
     */
    public static final int UNKNOWN_LEAF_TYPE_VALUE = 256;


    public final int getNumber() { return value; }

    public static MerkleLeafType valueOf(int value) {
      switch (value) {
        case 0: return TIMESTAMPED_ENTRY;
        case 256: return UNKNOWN_LEAF_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MerkleLeafType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MerkleLeafType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MerkleLeafType>() {
            public MerkleLeafType findValueByNumber(int number) {
              return MerkleLeafType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.getDescriptor().getEnumTypes().get(3);
    }

    private static final MerkleLeafType[] VALUES = values();

    public static MerkleLeafType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MerkleLeafType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ct.MerkleLeafType)
  }

  public interface DigitallySignedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.DigitallySigned)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    boolean hasHashAlgorithm();
    /**
     * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm getHashAlgorithm();

    /**
     * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    boolean hasSigAlgorithm();
    /**
     * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm getSigAlgorithm();

    /**
     * <code>optional bytes signature = 3;</code>
     *
     * <pre>
     * 0..2^16-1 bytes
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>optional bytes signature = 3;</code>
     *
     * <pre>
     * 0..2^16-1 bytes
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code ct.DigitallySigned}
   *
   * <pre>
   * RFC 5246
   * </pre>
   */
  public static final class DigitallySigned extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.DigitallySigned)
      DigitallySignedOrBuilder {
    // Use DigitallySigned.newBuilder() to construct.
    private DigitallySigned(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DigitallySigned(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DigitallySigned defaultInstance;
    public static DigitallySigned getDefaultInstance() {
      return defaultInstance;
    }

    public DigitallySigned getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DigitallySigned(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm value = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                hashAlgorithm_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm value = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                sigAlgorithm_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_DigitallySigned_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_DigitallySigned_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.class, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder.class);
    }

    public static com.google.protobuf.Parser<DigitallySigned> PARSER =
        new com.google.protobuf.AbstractParser<DigitallySigned>() {
      public DigitallySigned parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DigitallySigned(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DigitallySigned> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code ct.DigitallySigned.HashAlgorithm}
     */
    public enum HashAlgorithm
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0, 0),
      /**
       * <code>MD5 = 1;</code>
       */
      MD5(1, 1),
      /**
       * <code>SHA1 = 2;</code>
       */
      SHA1(2, 2),
      /**
       * <code>SHA224 = 3;</code>
       */
      SHA224(3, 3),
      /**
       * <code>SHA256 = 4;</code>
       */
      SHA256(4, 4),
      /**
       * <code>SHA384 = 5;</code>
       */
      SHA384(5, 5),
      /**
       * <code>SHA512 = 6;</code>
       */
      SHA512(6, 6),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>MD5 = 1;</code>
       */
      public static final int MD5_VALUE = 1;
      /**
       * <code>SHA1 = 2;</code>
       */
      public static final int SHA1_VALUE = 2;
      /**
       * <code>SHA224 = 3;</code>
       */
      public static final int SHA224_VALUE = 3;
      /**
       * <code>SHA256 = 4;</code>
       */
      public static final int SHA256_VALUE = 4;
      /**
       * <code>SHA384 = 5;</code>
       */
      public static final int SHA384_VALUE = 5;
      /**
       * <code>SHA512 = 6;</code>
       */
      public static final int SHA512_VALUE = 6;


      public final int getNumber() { return value; }

      public static HashAlgorithm valueOf(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return MD5;
          case 2: return SHA1;
          case 3: return SHA224;
          case 4: return SHA256;
          case 5: return SHA384;
          case 6: return SHA512;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>() {
              public HashAlgorithm findValueByNumber(int number) {
                return HashAlgorithm.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDescriptor().getEnumTypes().get(0);
      }

      private static final HashAlgorithm[] VALUES = values();

      public static HashAlgorithm valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private HashAlgorithm(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ct.DigitallySigned.HashAlgorithm)
    }

    /**
     * Protobuf enum {@code ct.DigitallySigned.SignatureAlgorithm}
     */
    public enum SignatureAlgorithm
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ANONYMOUS = 0;</code>
       */
      ANONYMOUS(0, 0),
      /**
       * <code>RSA = 1;</code>
       */
      RSA(1, 1),
      /**
       * <code>DSA = 2;</code>
       */
      DSA(2, 2),
      /**
       * <code>ECDSA = 3;</code>
       */
      ECDSA(3, 3),
      ;

      /**
       * <code>ANONYMOUS = 0;</code>
       */
      public static final int ANONYMOUS_VALUE = 0;
      /**
       * <code>RSA = 1;</code>
       */
      public static final int RSA_VALUE = 1;
      /**
       * <code>DSA = 2;</code>
       */
      public static final int DSA_VALUE = 2;
      /**
       * <code>ECDSA = 3;</code>
       */
      public static final int ECDSA_VALUE = 3;


      public final int getNumber() { return value; }

      public static SignatureAlgorithm valueOf(int value) {
        switch (value) {
          case 0: return ANONYMOUS;
          case 1: return RSA;
          case 2: return DSA;
          case 3: return ECDSA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>() {
              public SignatureAlgorithm findValueByNumber(int number) {
                return SignatureAlgorithm.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDescriptor().getEnumTypes().get(1);
      }

      private static final SignatureAlgorithm[] VALUES = values();

      public static SignatureAlgorithm valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private SignatureAlgorithm(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ct.DigitallySigned.SignatureAlgorithm)
    }

    private int bitField0_;
    public static final int HASH_ALGORITHM_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm hashAlgorithm_;
    /**
     * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    public boolean hasHashAlgorithm() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm getHashAlgorithm() {
      return hashAlgorithm_;
    }

    public static final int SIG_ALGORITHM_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm sigAlgorithm_;
    /**
     * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    public boolean hasSigAlgorithm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
     *
     * <pre>
     * 1 byte
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm getSigAlgorithm() {
      return sigAlgorithm_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>optional bytes signature = 3;</code>
     *
     * <pre>
     * 0..2^16-1 bytes
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes signature = 3;</code>
     *
     * <pre>
     * 0..2^16-1 bytes
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      hashAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm.NONE;
      sigAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm.ANONYMOUS;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, hashAlgorithm_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, sigAlgorithm_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, hashAlgorithm_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, sigAlgorithm_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.DigitallySigned}
     *
     * <pre>
     * RFC 5246
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.DigitallySigned)
        org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_DigitallySigned_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_DigitallySigned_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.class, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hashAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm.NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        sigAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm.ANONYMOUS;
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_DigitallySigned_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned build() {
        org.certificatetransparency.ctlog.proto.Ct.DigitallySigned result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.DigitallySigned result = new org.certificatetransparency.ctlog.proto.Ct.DigitallySigned(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hashAlgorithm_ = hashAlgorithm_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sigAlgorithm_ = sigAlgorithm_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.DigitallySigned) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.DigitallySigned)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance()) return this;
        if (other.hasHashAlgorithm()) {
          setHashAlgorithm(other.getHashAlgorithm());
        }
        if (other.hasSigAlgorithm()) {
          setSigAlgorithm(other.getSigAlgorithm());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.DigitallySigned parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.DigitallySigned) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm hashAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm.NONE;
      /**
       * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public boolean hasHashAlgorithm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm getHashAlgorithm() {
        return hashAlgorithm_;
      }
      /**
       * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public Builder setHashAlgorithm(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        hashAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned.HashAlgorithm hash_algorithm = 1 [default = NONE];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public Builder clearHashAlgorithm() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hashAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.HashAlgorithm.NONE;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm sigAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm.ANONYMOUS;
      /**
       * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public boolean hasSigAlgorithm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm getSigAlgorithm() {
        return sigAlgorithm_;
      }
      /**
       * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public Builder setSigAlgorithm(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sigAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned.SignatureAlgorithm sig_algorithm = 2 [default = ANONYMOUS];</code>
       *
       * <pre>
       * 1 byte
       * </pre>
       */
      public Builder clearSigAlgorithm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sigAlgorithm_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.SignatureAlgorithm.ANONYMOUS;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes signature = 3;</code>
       *
       * <pre>
       * 0..2^16-1 bytes
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes signature = 3;</code>
       *
       * <pre>
       * 0..2^16-1 bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>optional bytes signature = 3;</code>
       *
       * <pre>
       * 0..2^16-1 bytes
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes signature = 3;</code>
       *
       * <pre>
       * 0..2^16-1 bytes
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.DigitallySigned)
    }

    static {
      defaultInstance = new DigitallySigned(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.DigitallySigned)
  }

  public interface X509ChainEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.X509ChainEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes leaf_certificate = 1;</code>
     *
     * <pre>
     * For V1 this entry just includes the certificate in the leaf_certificate
     * field
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    boolean hasLeafCertificate();
    /**
     * <code>optional bytes leaf_certificate = 1;</code>
     *
     * <pre>
     * For V1 this entry just includes the certificate in the leaf_certificate
     * field
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    com.google.protobuf.ByteString getLeafCertificate();

    /**
     * <code>optional .ct.CertInfo cert_info = 3;</code>
     *
     * <pre>
     * For V2 it includes the cert and key hash using CertInfo. The
     * leaf_certificate field is not used
     * </pre>
     */
    boolean hasCertInfo();
    /**
     * <code>optional .ct.CertInfo cert_info = 3;</code>
     *
     * <pre>
     * For V2 it includes the cert and key hash using CertInfo. The
     * leaf_certificate field is not used
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo();
    /**
     * <code>optional .ct.CertInfo cert_info = 3;</code>
     *
     * <pre>
     * For V2 it includes the cert and key hash using CertInfo. The
     * leaf_certificate field is not used
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder();

    /**
     * <code>repeated bytes certificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * A chain from the leaf to a trusted root
     * (excluding leaf and possibly root).
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getCertificateChainList();
    /**
     * <code>repeated bytes certificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * A chain from the leaf to a trusted root
     * (excluding leaf and possibly root).
     * </pre>
     */
    int getCertificateChainCount();
    /**
     * <code>repeated bytes certificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * A chain from the leaf to a trusted root
     * (excluding leaf and possibly root).
     * </pre>
     */
    com.google.protobuf.ByteString getCertificateChain(int index);
  }
  /**
   * Protobuf type {@code ct.X509ChainEntry}
   */
  public static final class X509ChainEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.X509ChainEntry)
      X509ChainEntryOrBuilder {
    // Use X509ChainEntry.newBuilder() to construct.
    private X509ChainEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private X509ChainEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final X509ChainEntry defaultInstance;
    public static X509ChainEntry getDefaultInstance() {
      return defaultInstance;
    }

    public X509ChainEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private X509ChainEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              leafCertificate_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                certificateChain_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000004;
              }
              certificateChain_.add(input.readBytes());
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = certInfo_.toBuilder();
              }
              certInfo_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.CertInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(certInfo_);
                certInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          certificateChain_ = java.util.Collections.unmodifiableList(certificateChain_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_X509ChainEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_X509ChainEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.class, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<X509ChainEntry> PARSER =
        new com.google.protobuf.AbstractParser<X509ChainEntry>() {
      public X509ChainEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new X509ChainEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<X509ChainEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LEAF_CERTIFICATE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString leafCertificate_;
    /**
     * <code>optional bytes leaf_certificate = 1;</code>
     *
     * <pre>
     * For V1 this entry just includes the certificate in the leaf_certificate
     * field
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    public boolean hasLeafCertificate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes leaf_certificate = 1;</code>
     *
     * <pre>
     * For V1 this entry just includes the certificate in the leaf_certificate
     * field
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    public com.google.protobuf.ByteString getLeafCertificate() {
      return leafCertificate_;
    }

    public static final int CERT_INFO_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.CertInfo certInfo_;
    /**
     * <code>optional .ct.CertInfo cert_info = 3;</code>
     *
     * <pre>
     * For V2 it includes the cert and key hash using CertInfo. The
     * leaf_certificate field is not used
     * </pre>
     */
    public boolean hasCertInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.CertInfo cert_info = 3;</code>
     *
     * <pre>
     * For V2 it includes the cert and key hash using CertInfo. The
     * leaf_certificate field is not used
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo() {
      return certInfo_;
    }
    /**
     * <code>optional .ct.CertInfo cert_info = 3;</code>
     *
     * <pre>
     * For V2 it includes the cert and key hash using CertInfo. The
     * leaf_certificate field is not used
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder() {
      return certInfo_;
    }

    public static final int CERTIFICATE_CHAIN_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> certificateChain_;
    /**
     * <code>repeated bytes certificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * A chain from the leaf to a trusted root
     * (excluding leaf and possibly root).
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getCertificateChainList() {
      return certificateChain_;
    }
    /**
     * <code>repeated bytes certificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * A chain from the leaf to a trusted root
     * (excluding leaf and possibly root).
     * </pre>
     */
    public int getCertificateChainCount() {
      return certificateChain_.size();
    }
    /**
     * <code>repeated bytes certificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * A chain from the leaf to a trusted root
     * (excluding leaf and possibly root).
     * </pre>
     */
    public com.google.protobuf.ByteString getCertificateChain(int index) {
      return certificateChain_.get(index);
    }

    private void initFields() {
      leafCertificate_ = com.google.protobuf.ByteString.EMPTY;
      certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
      certificateChain_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, leafCertificate_);
      }
      for (int i = 0; i < certificateChain_.size(); i++) {
        output.writeBytes(2, certificateChain_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, certInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, leafCertificate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < certificateChain_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(certificateChain_.get(i));
        }
        size += dataSize;
        size += 1 * getCertificateChainList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, certInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.X509ChainEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.X509ChainEntry)
        org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_X509ChainEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_X509ChainEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.class, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCertInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        leafCertificate_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (certInfoBuilder_ == null) {
          certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
        } else {
          certInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        certificateChain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_X509ChainEntry_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry build() {
        org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry result = new org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leafCertificate_ = leafCertificate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (certInfoBuilder_ == null) {
          result.certInfo_ = certInfo_;
        } else {
          result.certInfo_ = certInfoBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          certificateChain_ = java.util.Collections.unmodifiableList(certificateChain_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.certificateChain_ = certificateChain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance()) return this;
        if (other.hasLeafCertificate()) {
          setLeafCertificate(other.getLeafCertificate());
        }
        if (other.hasCertInfo()) {
          mergeCertInfo(other.getCertInfo());
        }
        if (!other.certificateChain_.isEmpty()) {
          if (certificateChain_.isEmpty()) {
            certificateChain_ = other.certificateChain_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCertificateChainIsMutable();
            certificateChain_.addAll(other.certificateChain_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString leafCertificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes leaf_certificate = 1;</code>
       *
       * <pre>
       * For V1 this entry just includes the certificate in the leaf_certificate
       * field
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public boolean hasLeafCertificate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes leaf_certificate = 1;</code>
       *
       * <pre>
       * For V1 this entry just includes the certificate in the leaf_certificate
       * field
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public com.google.protobuf.ByteString getLeafCertificate() {
        return leafCertificate_;
      }
      /**
       * <code>optional bytes leaf_certificate = 1;</code>
       *
       * <pre>
       * For V1 this entry just includes the certificate in the leaf_certificate
       * field
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public Builder setLeafCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leafCertificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes leaf_certificate = 1;</code>
       *
       * <pre>
       * For V1 this entry just includes the certificate in the leaf_certificate
       * field
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public Builder clearLeafCertificate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leafCertificate_ = getDefaultInstance().getLeafCertificate();
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.CertInfo certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder> certInfoBuilder_;
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public boolean hasCertInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo() {
        if (certInfoBuilder_ == null) {
          return certInfo_;
        } else {
          return certInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public Builder setCertInfo(org.certificatetransparency.ctlog.proto.Ct.CertInfo value) {
        if (certInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          certInfo_ = value;
          onChanged();
        } else {
          certInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public Builder setCertInfo(
          org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder builderForValue) {
        if (certInfoBuilder_ == null) {
          certInfo_ = builderForValue.build();
          onChanged();
        } else {
          certInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public Builder mergeCertInfo(org.certificatetransparency.ctlog.proto.Ct.CertInfo value) {
        if (certInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              certInfo_ != org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance()) {
            certInfo_ =
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.newBuilder(certInfo_).mergeFrom(value).buildPartial();
          } else {
            certInfo_ = value;
          }
          onChanged();
        } else {
          certInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public Builder clearCertInfo() {
        if (certInfoBuilder_ == null) {
          certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
          onChanged();
        } else {
          certInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder getCertInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCertInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder() {
        if (certInfoBuilder_ != null) {
          return certInfoBuilder_.getMessageOrBuilder();
        } else {
          return certInfo_;
        }
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 3;</code>
       *
       * <pre>
       * For V2 it includes the cert and key hash using CertInfo. The
       * leaf_certificate field is not used
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder> 
          getCertInfoFieldBuilder() {
        if (certInfoBuilder_ == null) {
          certInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder>(
                  getCertInfo(),
                  getParentForChildren(),
                  isClean());
          certInfo_ = null;
        }
        return certInfoBuilder_;
      }

      private java.util.List<com.google.protobuf.ByteString> certificateChain_ = java.util.Collections.emptyList();
      private void ensureCertificateChainIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          certificateChain_ = new java.util.ArrayList<com.google.protobuf.ByteString>(certificateChain_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getCertificateChainList() {
        return java.util.Collections.unmodifiableList(certificateChain_);
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public int getCertificateChainCount() {
        return certificateChain_.size();
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public com.google.protobuf.ByteString getCertificateChain(int index) {
        return certificateChain_.get(index);
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public Builder setCertificateChain(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCertificateChainIsMutable();
        certificateChain_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public Builder addCertificateChain(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCertificateChainIsMutable();
        certificateChain_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public Builder addAllCertificateChain(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureCertificateChainIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, certificateChain_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes certificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * A chain from the leaf to a trusted root
       * (excluding leaf and possibly root).
       * </pre>
       */
      public Builder clearCertificateChain() {
        certificateChain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.X509ChainEntry)
    }

    static {
      defaultInstance = new X509ChainEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.X509ChainEntry)
  }

  public interface PreCertOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.PreCert)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    boolean hasIssuerKeyHash();
    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    com.google.protobuf.ByteString getIssuerKeyHash();

    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    boolean hasTbsCertificate();
    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    com.google.protobuf.ByteString getTbsCertificate();
  }
  /**
   * Protobuf type {@code ct.PreCert}
   *
   * <pre>
   * opaque TBSCertificate&lt;1..2^16-1&gt;;
   * struct {
   *   opaque issuer_key_hash[32];
   *   TBSCertificate tbs_certificate;
   * } PreCert;
   * Retained for V1 API compatibility. May be removed in a future release.
   * </pre>
   */
  public static final class PreCert extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.PreCert)
      PreCertOrBuilder {
    // Use PreCert.newBuilder() to construct.
    private PreCert(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PreCert(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PreCert defaultInstance;
    public static PreCert getDefaultInstance() {
      return defaultInstance;
    }

    public PreCert getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PreCert(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              issuerKeyHash_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tbsCertificate_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PreCert_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PreCert_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.PreCert.class, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder.class);
    }

    public static com.google.protobuf.Parser<PreCert> PARSER =
        new com.google.protobuf.AbstractParser<PreCert>() {
      public PreCert parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PreCert(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PreCert> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ISSUER_KEY_HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString issuerKeyHash_;
    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    public boolean hasIssuerKeyHash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    public com.google.protobuf.ByteString getIssuerKeyHash() {
      return issuerKeyHash_;
    }

    public static final int TBS_CERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString tbsCertificate_;
    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    public boolean hasTbsCertificate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    public com.google.protobuf.ByteString getTbsCertificate() {
      return tbsCertificate_;
    }

    private void initFields() {
      issuerKeyHash_ = com.google.protobuf.ByteString.EMPTY;
      tbsCertificate_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, issuerKeyHash_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, tbsCertificate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, issuerKeyHash_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, tbsCertificate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PreCert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.PreCert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.PreCert}
     *
     * <pre>
     * opaque TBSCertificate&lt;1..2^16-1&gt;;
     * struct {
     *   opaque issuer_key_hash[32];
     *   TBSCertificate tbs_certificate;
     * } PreCert;
     * Retained for V1 API compatibility. May be removed in a future release.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.PreCert)
        org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PreCert_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PreCert_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.PreCert.class, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.PreCert.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        issuerKeyHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        tbsCertificate_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PreCert_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.PreCert getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.PreCert build() {
        org.certificatetransparency.ctlog.proto.Ct.PreCert result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.PreCert buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.PreCert result = new org.certificatetransparency.ctlog.proto.Ct.PreCert(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.issuerKeyHash_ = issuerKeyHash_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tbsCertificate_ = tbsCertificate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.PreCert) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.PreCert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.PreCert other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance()) return this;
        if (other.hasIssuerKeyHash()) {
          setIssuerKeyHash(other.getIssuerKeyHash());
        }
        if (other.hasTbsCertificate()) {
          setTbsCertificate(other.getTbsCertificate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.PreCert parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.PreCert) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString issuerKeyHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public boolean hasIssuerKeyHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public com.google.protobuf.ByteString getIssuerKeyHash() {
        return issuerKeyHash_;
      }
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public Builder setIssuerKeyHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        issuerKeyHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public Builder clearIssuerKeyHash() {
        bitField0_ = (bitField0_ & ~0x00000001);
        issuerKeyHash_ = getDefaultInstance().getIssuerKeyHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString tbsCertificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public boolean hasTbsCertificate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public com.google.protobuf.ByteString getTbsCertificate() {
        return tbsCertificate_;
      }
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public Builder setTbsCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tbsCertificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public Builder clearTbsCertificate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tbsCertificate_ = getDefaultInstance().getTbsCertificate();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.PreCert)
    }

    static {
      defaultInstance = new PreCert(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.PreCert)
  }

  public interface CertInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.CertInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    boolean hasIssuerKeyHash();
    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    com.google.protobuf.ByteString getIssuerKeyHash();

    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    boolean hasTbsCertificate();
    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    com.google.protobuf.ByteString getTbsCertificate();
  }
  /**
   * Protobuf type {@code ct.CertInfo}
   *
   * <pre>
   * In V2 this is used for both certificates and precertificates in SCTs. It
   * replaces PreCert and has the same structure. The older message remains for
   * compatibility with existing code that depends on this proto.
   * </pre>
   */
  public static final class CertInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.CertInfo)
      CertInfoOrBuilder {
    // Use CertInfo.newBuilder() to construct.
    private CertInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CertInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CertInfo defaultInstance;
    public static CertInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CertInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CertInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              issuerKeyHash_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tbsCertificate_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_CertInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_CertInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.class, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CertInfo> PARSER =
        new com.google.protobuf.AbstractParser<CertInfo>() {
      public CertInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CertInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CertInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ISSUER_KEY_HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString issuerKeyHash_;
    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    public boolean hasIssuerKeyHash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes issuer_key_hash = 1;</code>
     */
    public com.google.protobuf.ByteString getIssuerKeyHash() {
      return issuerKeyHash_;
    }

    public static final int TBS_CERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString tbsCertificate_;
    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    public boolean hasTbsCertificate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes tbs_certificate = 2;</code>
     */
    public com.google.protobuf.ByteString getTbsCertificate() {
      return tbsCertificate_;
    }

    private void initFields() {
      issuerKeyHash_ = com.google.protobuf.ByteString.EMPTY;
      tbsCertificate_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, issuerKeyHash_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, tbsCertificate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, issuerKeyHash_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, tbsCertificate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.CertInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.CertInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.CertInfo}
     *
     * <pre>
     * In V2 this is used for both certificates and precertificates in SCTs. It
     * replaces PreCert and has the same structure. The older message remains for
     * compatibility with existing code that depends on this proto.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.CertInfo)
        org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_CertInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_CertInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.CertInfo.class, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.CertInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        issuerKeyHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        tbsCertificate_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_CertInfo_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.CertInfo getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.CertInfo build() {
        org.certificatetransparency.ctlog.proto.Ct.CertInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.CertInfo buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.CertInfo result = new org.certificatetransparency.ctlog.proto.Ct.CertInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.issuerKeyHash_ = issuerKeyHash_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tbsCertificate_ = tbsCertificate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.CertInfo) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.CertInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.CertInfo other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance()) return this;
        if (other.hasIssuerKeyHash()) {
          setIssuerKeyHash(other.getIssuerKeyHash());
        }
        if (other.hasTbsCertificate()) {
          setTbsCertificate(other.getTbsCertificate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.CertInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.CertInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString issuerKeyHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public boolean hasIssuerKeyHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public com.google.protobuf.ByteString getIssuerKeyHash() {
        return issuerKeyHash_;
      }
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public Builder setIssuerKeyHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        issuerKeyHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes issuer_key_hash = 1;</code>
       */
      public Builder clearIssuerKeyHash() {
        bitField0_ = (bitField0_ & ~0x00000001);
        issuerKeyHash_ = getDefaultInstance().getIssuerKeyHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString tbsCertificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public boolean hasTbsCertificate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public com.google.protobuf.ByteString getTbsCertificate() {
        return tbsCertificate_;
      }
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public Builder setTbsCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tbsCertificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes tbs_certificate = 2;</code>
       */
      public Builder clearTbsCertificate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tbsCertificate_ = getDefaultInstance().getTbsCertificate();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.CertInfo)
    }

    static {
      defaultInstance = new CertInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.CertInfo)
  }

  public interface PrecertChainEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.PrecertChainEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes pre_certificate = 1;</code>
     *
     * <pre>
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    boolean hasPreCertificate();
    /**
     * <code>optional bytes pre_certificate = 1;</code>
     *
     * <pre>
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    com.google.protobuf.ByteString getPreCertificate();

    /**
     * <code>repeated bytes precertificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * The chain certifying the precertificate, as submitted by the CA.
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getPrecertificateChainList();
    /**
     * <code>repeated bytes precertificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * The chain certifying the precertificate, as submitted by the CA.
     * </pre>
     */
    int getPrecertificateChainCount();
    /**
     * <code>repeated bytes precertificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * The chain certifying the precertificate, as submitted by the CA.
     * </pre>
     */
    com.google.protobuf.ByteString getPrecertificateChain(int index);

    /**
     * <code>optional .ct.PreCert pre_cert = 3;</code>
     *
     * <pre>
     * PreCert input to the SCT. Can be computed from the above.
     * Store it alongside the entry data so that the signers don't have to
     * parse certificates to recompute it.
     * </pre>
     */
    boolean hasPreCert();
    /**
     * <code>optional .ct.PreCert pre_cert = 3;</code>
     *
     * <pre>
     * PreCert input to the SCT. Can be computed from the above.
     * Store it alongside the entry data so that the signers don't have to
     * parse certificates to recompute it.
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.PreCert getPreCert();
    /**
     * <code>optional .ct.PreCert pre_cert = 3;</code>
     *
     * <pre>
     * PreCert input to the SCT. Can be computed from the above.
     * Store it alongside the entry data so that the signers don't have to
     * parse certificates to recompute it.
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder getPreCertOrBuilder();

    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * As above for V2 messages. Only one of these fields will be set in a
     * valid message
     * </pre>
     */
    boolean hasCertInfo();
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * As above for V2 messages. Only one of these fields will be set in a
     * valid message
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo();
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * As above for V2 messages. Only one of these fields will be set in a
     * valid message
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder();
  }
  /**
   * Protobuf type {@code ct.PrecertChainEntry}
   */
  public static final class PrecertChainEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.PrecertChainEntry)
      PrecertChainEntryOrBuilder {
    // Use PrecertChainEntry.newBuilder() to construct.
    private PrecertChainEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PrecertChainEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PrecertChainEntry defaultInstance;
    public static PrecertChainEntry getDefaultInstance() {
      return defaultInstance;
    }

    public PrecertChainEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PrecertChainEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              preCertificate_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                precertificateChain_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              precertificateChain_.add(input.readBytes());
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = preCert_.toBuilder();
              }
              preCert_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.PreCert.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preCert_);
                preCert_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = certInfo_.toBuilder();
              }
              certInfo_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.CertInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(certInfo_);
                certInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          precertificateChain_ = java.util.Collections.unmodifiableList(precertificateChain_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PrecertChainEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PrecertChainEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.class, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<PrecertChainEntry> PARSER =
        new com.google.protobuf.AbstractParser<PrecertChainEntry>() {
      public PrecertChainEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrecertChainEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PrecertChainEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PRE_CERTIFICATE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString preCertificate_;
    /**
     * <code>optional bytes pre_certificate = 1;</code>
     *
     * <pre>
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    public boolean hasPreCertificate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes pre_certificate = 1;</code>
     *
     * <pre>
     * &lt;1..2^24-1&gt;
     * </pre>
     */
    public com.google.protobuf.ByteString getPreCertificate() {
      return preCertificate_;
    }

    public static final int PRECERTIFICATE_CHAIN_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> precertificateChain_;
    /**
     * <code>repeated bytes precertificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * The chain certifying the precertificate, as submitted by the CA.
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPrecertificateChainList() {
      return precertificateChain_;
    }
    /**
     * <code>repeated bytes precertificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * The chain certifying the precertificate, as submitted by the CA.
     * </pre>
     */
    public int getPrecertificateChainCount() {
      return precertificateChain_.size();
    }
    /**
     * <code>repeated bytes precertificate_chain = 2;</code>
     *
     * <pre>
     * &lt;0..2^24-1&gt;
     * The chain certifying the precertificate, as submitted by the CA.
     * </pre>
     */
    public com.google.protobuf.ByteString getPrecertificateChain(int index) {
      return precertificateChain_.get(index);
    }

    public static final int PRE_CERT_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.PreCert preCert_;
    /**
     * <code>optional .ct.PreCert pre_cert = 3;</code>
     *
     * <pre>
     * PreCert input to the SCT. Can be computed from the above.
     * Store it alongside the entry data so that the signers don't have to
     * parse certificates to recompute it.
     * </pre>
     */
    public boolean hasPreCert() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.PreCert pre_cert = 3;</code>
     *
     * <pre>
     * PreCert input to the SCT. Can be computed from the above.
     * Store it alongside the entry data so that the signers don't have to
     * parse certificates to recompute it.
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.PreCert getPreCert() {
      return preCert_;
    }
    /**
     * <code>optional .ct.PreCert pre_cert = 3;</code>
     *
     * <pre>
     * PreCert input to the SCT. Can be computed from the above.
     * Store it alongside the entry data so that the signers don't have to
     * parse certificates to recompute it.
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder getPreCertOrBuilder() {
      return preCert_;
    }

    public static final int CERT_INFO_FIELD_NUMBER = 4;
    private org.certificatetransparency.ctlog.proto.Ct.CertInfo certInfo_;
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * As above for V2 messages. Only one of these fields will be set in a
     * valid message
     * </pre>
     */
    public boolean hasCertInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * As above for V2 messages. Only one of these fields will be set in a
     * valid message
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo() {
      return certInfo_;
    }
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * As above for V2 messages. Only one of these fields will be set in a
     * valid message
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder() {
      return certInfo_;
    }

    private void initFields() {
      preCertificate_ = com.google.protobuf.ByteString.EMPTY;
      precertificateChain_ = java.util.Collections.emptyList();
      preCert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
      certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, preCertificate_);
      }
      for (int i = 0; i < precertificateChain_.size(); i++) {
        output.writeBytes(2, precertificateChain_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, preCert_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, certInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, preCertificate_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < precertificateChain_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(precertificateChain_.get(i));
        }
        size += dataSize;
        size += 1 * getPrecertificateChainList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, preCert_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, certInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.PrecertChainEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.PrecertChainEntry)
        org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PrecertChainEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PrecertChainEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.class, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPreCertFieldBuilder();
          getCertInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        preCertificate_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        precertificateChain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (preCertBuilder_ == null) {
          preCert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
        } else {
          preCertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (certInfoBuilder_ == null) {
          certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
        } else {
          certInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_PrecertChainEntry_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry build() {
        org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry result = new org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.preCertificate_ = preCertificate_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          precertificateChain_ = java.util.Collections.unmodifiableList(precertificateChain_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.precertificateChain_ = precertificateChain_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (preCertBuilder_ == null) {
          result.preCert_ = preCert_;
        } else {
          result.preCert_ = preCertBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (certInfoBuilder_ == null) {
          result.certInfo_ = certInfo_;
        } else {
          result.certInfo_ = certInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance()) return this;
        if (other.hasPreCertificate()) {
          setPreCertificate(other.getPreCertificate());
        }
        if (!other.precertificateChain_.isEmpty()) {
          if (precertificateChain_.isEmpty()) {
            precertificateChain_ = other.precertificateChain_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePrecertificateChainIsMutable();
            precertificateChain_.addAll(other.precertificateChain_);
          }
          onChanged();
        }
        if (other.hasPreCert()) {
          mergePreCert(other.getPreCert());
        }
        if (other.hasCertInfo()) {
          mergeCertInfo(other.getCertInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString preCertificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes pre_certificate = 1;</code>
       *
       * <pre>
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public boolean hasPreCertificate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes pre_certificate = 1;</code>
       *
       * <pre>
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public com.google.protobuf.ByteString getPreCertificate() {
        return preCertificate_;
      }
      /**
       * <code>optional bytes pre_certificate = 1;</code>
       *
       * <pre>
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public Builder setPreCertificate(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        preCertificate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes pre_certificate = 1;</code>
       *
       * <pre>
       * &lt;1..2^24-1&gt;
       * </pre>
       */
      public Builder clearPreCertificate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        preCertificate_ = getDefaultInstance().getPreCertificate();
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> precertificateChain_ = java.util.Collections.emptyList();
      private void ensurePrecertificateChainIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          precertificateChain_ = new java.util.ArrayList<com.google.protobuf.ByteString>(precertificateChain_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPrecertificateChainList() {
        return java.util.Collections.unmodifiableList(precertificateChain_);
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public int getPrecertificateChainCount() {
        return precertificateChain_.size();
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public com.google.protobuf.ByteString getPrecertificateChain(int index) {
        return precertificateChain_.get(index);
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public Builder setPrecertificateChain(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePrecertificateChainIsMutable();
        precertificateChain_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public Builder addPrecertificateChain(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePrecertificateChainIsMutable();
        precertificateChain_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public Builder addAllPrecertificateChain(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensurePrecertificateChainIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, precertificateChain_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes precertificate_chain = 2;</code>
       *
       * <pre>
       * &lt;0..2^24-1&gt;
       * The chain certifying the precertificate, as submitted by the CA.
       * </pre>
       */
      public Builder clearPrecertificateChain() {
        precertificateChain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.PreCert preCert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.PreCert, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder, org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder> preCertBuilder_;
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public boolean hasPreCert() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PreCert getPreCert() {
        if (preCertBuilder_ == null) {
          return preCert_;
        } else {
          return preCertBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public Builder setPreCert(org.certificatetransparency.ctlog.proto.Ct.PreCert value) {
        if (preCertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preCert_ = value;
          onChanged();
        } else {
          preCertBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public Builder setPreCert(
          org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder builderForValue) {
        if (preCertBuilder_ == null) {
          preCert_ = builderForValue.build();
          onChanged();
        } else {
          preCertBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public Builder mergePreCert(org.certificatetransparency.ctlog.proto.Ct.PreCert value) {
        if (preCertBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              preCert_ != org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance()) {
            preCert_ =
              org.certificatetransparency.ctlog.proto.Ct.PreCert.newBuilder(preCert_).mergeFrom(value).buildPartial();
          } else {
            preCert_ = value;
          }
          onChanged();
        } else {
          preCertBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public Builder clearPreCert() {
        if (preCertBuilder_ == null) {
          preCert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
          onChanged();
        } else {
          preCertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder getPreCertBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPreCertFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder getPreCertOrBuilder() {
        if (preCertBuilder_ != null) {
          return preCertBuilder_.getMessageOrBuilder();
        } else {
          return preCert_;
        }
      }
      /**
       * <code>optional .ct.PreCert pre_cert = 3;</code>
       *
       * <pre>
       * PreCert input to the SCT. Can be computed from the above.
       * Store it alongside the entry data so that the signers don't have to
       * parse certificates to recompute it.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.PreCert, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder, org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder> 
          getPreCertFieldBuilder() {
        if (preCertBuilder_ == null) {
          preCertBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.PreCert, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder, org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder>(
                  getPreCert(),
                  getParentForChildren(),
                  isClean());
          preCert_ = null;
        }
        return preCertBuilder_;
      }

      private org.certificatetransparency.ctlog.proto.Ct.CertInfo certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder> certInfoBuilder_;
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public boolean hasCertInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo() {
        if (certInfoBuilder_ == null) {
          return certInfo_;
        } else {
          return certInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public Builder setCertInfo(org.certificatetransparency.ctlog.proto.Ct.CertInfo value) {
        if (certInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          certInfo_ = value;
          onChanged();
        } else {
          certInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public Builder setCertInfo(
          org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder builderForValue) {
        if (certInfoBuilder_ == null) {
          certInfo_ = builderForValue.build();
          onChanged();
        } else {
          certInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public Builder mergeCertInfo(org.certificatetransparency.ctlog.proto.Ct.CertInfo value) {
        if (certInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              certInfo_ != org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance()) {
            certInfo_ =
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.newBuilder(certInfo_).mergeFrom(value).buildPartial();
          } else {
            certInfo_ = value;
          }
          onChanged();
        } else {
          certInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public Builder clearCertInfo() {
        if (certInfoBuilder_ == null) {
          certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
          onChanged();
        } else {
          certInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder getCertInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCertInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder() {
        if (certInfoBuilder_ != null) {
          return certInfoBuilder_.getMessageOrBuilder();
        } else {
          return certInfo_;
        }
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * As above for V2 messages. Only one of these fields will be set in a
       * valid message
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder> 
          getCertInfoFieldBuilder() {
        if (certInfoBuilder_ == null) {
          certInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder>(
                  getCertInfo(),
                  getParentForChildren(),
                  isClean());
          certInfo_ = null;
        }
        return certInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.PrecertChainEntry)
    }

    static {
      defaultInstance = new PrecertChainEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.PrecertChainEntry)
  }

  public interface XJSONEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.XJSONEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string json = 1;</code>
     */
    boolean hasJson();
    /**
     * <code>optional string json = 1;</code>
     */
    java.lang.String getJson();
    /**
     * <code>optional string json = 1;</code>
     */
    com.google.protobuf.ByteString
        getJsonBytes();
  }
  /**
   * Protobuf type {@code ct.XJSONEntry}
   */
  public static final class XJSONEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.XJSONEntry)
      XJSONEntryOrBuilder {
    // Use XJSONEntry.newBuilder() to construct.
    private XJSONEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private XJSONEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final XJSONEntry defaultInstance;
    public static XJSONEntry getDefaultInstance() {
      return defaultInstance;
    }

    public XJSONEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private XJSONEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              json_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_XJSONEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_XJSONEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.class, org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<XJSONEntry> PARSER =
        new com.google.protobuf.AbstractParser<XJSONEntry>() {
      public XJSONEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new XJSONEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<XJSONEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int JSON_FIELD_NUMBER = 1;
    private java.lang.Object json_;
    /**
     * <code>optional string json = 1;</code>
     */
    public boolean hasJson() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string json = 1;</code>
     */
    public java.lang.String getJson() {
      java.lang.Object ref = json_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          json_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string json = 1;</code>
     */
    public com.google.protobuf.ByteString
        getJsonBytes() {
      java.lang.Object ref = json_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        json_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      json_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getJsonBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getJsonBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.XJSONEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.XJSONEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.XJSONEntry)
        org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_XJSONEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_XJSONEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.class, org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        json_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_XJSONEntry_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.XJSONEntry getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.XJSONEntry build() {
        org.certificatetransparency.ctlog.proto.Ct.XJSONEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.XJSONEntry buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.XJSONEntry result = new org.certificatetransparency.ctlog.proto.Ct.XJSONEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.json_ = json_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.XJSONEntry) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.XJSONEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.XJSONEntry other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance()) return this;
        if (other.hasJson()) {
          bitField0_ |= 0x00000001;
          json_ = other.json_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.XJSONEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.XJSONEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object json_ = "";
      /**
       * <code>optional string json = 1;</code>
       */
      public boolean hasJson() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string json = 1;</code>
       */
      public java.lang.String getJson() {
        java.lang.Object ref = json_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            json_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string json = 1;</code>
       */
      public com.google.protobuf.ByteString
          getJsonBytes() {
        java.lang.Object ref = json_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          json_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string json = 1;</code>
       */
      public Builder setJson(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        json_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string json = 1;</code>
       */
      public Builder clearJson() {
        bitField0_ = (bitField0_ & ~0x00000001);
        json_ = getDefaultInstance().getJson();
        onChanged();
        return this;
      }
      /**
       * <code>optional string json = 1;</code>
       */
      public Builder setJsonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        json_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.XJSONEntry)
    }

    static {
      defaultInstance = new XJSONEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.XJSONEntry)
  }

  public interface LogEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.LogEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
     */
    boolean hasType();
    /**
     * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogEntryType getType();

    /**
     * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
     */
    boolean hasX509Entry();
    /**
     * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry getX509Entry();
    /**
     * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder getX509EntryOrBuilder();

    /**
     * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
     */
    boolean hasPrecertEntry();
    /**
     * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry getPrecertEntry();
    /**
     * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder getPrecertEntryOrBuilder();

    /**
     * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
     */
    boolean hasXJsonEntry();
    /**
     * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.XJSONEntry getXJsonEntry();
    /**
     * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder getXJsonEntryOrBuilder();
  }
  /**
   * Protobuf type {@code ct.LogEntry}
   *
   * <pre>
   * TODO(alcutter): Consider using extensions here instead.
   * </pre>
   */
  public static final class LogEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.LogEntry)
      LogEntryOrBuilder {
    // Use LogEntry.newBuilder() to construct.
    private LogEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogEntry defaultInstance;
    public static LogEntry getDefaultInstance() {
      return defaultInstance;
    }

    public LogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.LogEntryType value = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = x509Entry_.toBuilder();
              }
              x509Entry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(x509Entry_);
                x509Entry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = precertEntry_.toBuilder();
              }
              precertEntry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(precertEntry_);
                precertEntry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = xJsonEntry_.toBuilder();
              }
              xJsonEntry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(xJsonEntry_);
                xJsonEntry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.LogEntry.class, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<LogEntry> PARSER =
        new com.google.protobuf.AbstractParser<LogEntry>() {
      public LogEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.LogEntryType type_;
    /**
     * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogEntryType getType() {
      return type_;
    }

    public static final int X509_ENTRY_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry x509Entry_;
    /**
     * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
     */
    public boolean hasX509Entry() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry getX509Entry() {
      return x509Entry_;
    }
    /**
     * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder getX509EntryOrBuilder() {
      return x509Entry_;
    }

    public static final int PRECERT_ENTRY_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry precertEntry_;
    /**
     * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
     */
    public boolean hasPrecertEntry() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry getPrecertEntry() {
      return precertEntry_;
    }
    /**
     * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder getPrecertEntryOrBuilder() {
      return precertEntry_;
    }

    public static final int X_JSON_ENTRY_FIELD_NUMBER = 4;
    private org.certificatetransparency.ctlog.proto.Ct.XJSONEntry xJsonEntry_;
    /**
     * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
     */
    public boolean hasXJsonEntry() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.XJSONEntry getXJsonEntry() {
      return xJsonEntry_;
    }
    /**
     * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder getXJsonEntryOrBuilder() {
      return xJsonEntry_;
    }

    private void initFields() {
      type_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.UNKNOWN_ENTRY_TYPE;
      x509Entry_ = org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance();
      precertEntry_ = org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance();
      xJsonEntry_ = org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, x509Entry_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, precertEntry_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, xJsonEntry_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, x509Entry_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, precertEntry_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, xJsonEntry_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.LogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.LogEntry}
     *
     * <pre>
     * TODO(alcutter): Consider using extensions here instead.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.LogEntry)
        org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.LogEntry.class, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.LogEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getX509EntryFieldBuilder();
          getPrecertEntryFieldBuilder();
          getXJsonEntryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.UNKNOWN_ENTRY_TYPE;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (x509EntryBuilder_ == null) {
          x509Entry_ = org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance();
        } else {
          x509EntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (precertEntryBuilder_ == null) {
          precertEntry_ = org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance();
        } else {
          precertEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (xJsonEntryBuilder_ == null) {
          xJsonEntry_ = org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance();
        } else {
          xJsonEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogEntry_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.LogEntry getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.LogEntry build() {
        org.certificatetransparency.ctlog.proto.Ct.LogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.LogEntry buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.LogEntry result = new org.certificatetransparency.ctlog.proto.Ct.LogEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (x509EntryBuilder_ == null) {
          result.x509Entry_ = x509Entry_;
        } else {
          result.x509Entry_ = x509EntryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (precertEntryBuilder_ == null) {
          result.precertEntry_ = precertEntry_;
        } else {
          result.precertEntry_ = precertEntryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (xJsonEntryBuilder_ == null) {
          result.xJsonEntry_ = xJsonEntry_;
        } else {
          result.xJsonEntry_ = xJsonEntryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.LogEntry) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.LogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.LogEntry other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasX509Entry()) {
          mergeX509Entry(other.getX509Entry());
        }
        if (other.hasPrecertEntry()) {
          mergePrecertEntry(other.getPrecertEntry());
        }
        if (other.hasXJsonEntry()) {
          mergeXJsonEntry(other.getXJsonEntry());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.LogEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.LogEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.LogEntryType type_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.UNKNOWN_ENTRY_TYPE;
      /**
       * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntryType getType() {
        return type_;
      }
      /**
       * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
       */
      public Builder setType(org.certificatetransparency.ctlog.proto.Ct.LogEntryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.LogEntryType type = 1 [default = UNKNOWN_ENTRY_TYPE];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.UNKNOWN_ENTRY_TYPE;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry x509Entry_ = org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder> x509EntryBuilder_;
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public boolean hasX509Entry() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry getX509Entry() {
        if (x509EntryBuilder_ == null) {
          return x509Entry_;
        } else {
          return x509EntryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public Builder setX509Entry(org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry value) {
        if (x509EntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          x509Entry_ = value;
          onChanged();
        } else {
          x509EntryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public Builder setX509Entry(
          org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder builderForValue) {
        if (x509EntryBuilder_ == null) {
          x509Entry_ = builderForValue.build();
          onChanged();
        } else {
          x509EntryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public Builder mergeX509Entry(org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry value) {
        if (x509EntryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              x509Entry_ != org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance()) {
            x509Entry_ =
              org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.newBuilder(x509Entry_).mergeFrom(value).buildPartial();
          } else {
            x509Entry_ = value;
          }
          onChanged();
        } else {
          x509EntryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public Builder clearX509Entry() {
        if (x509EntryBuilder_ == null) {
          x509Entry_ = org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.getDefaultInstance();
          onChanged();
        } else {
          x509EntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder getX509EntryBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getX509EntryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder getX509EntryOrBuilder() {
        if (x509EntryBuilder_ != null) {
          return x509EntryBuilder_.getMessageOrBuilder();
        } else {
          return x509Entry_;
        }
      }
      /**
       * <code>optional .ct.X509ChainEntry x509_entry = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder> 
          getX509EntryFieldBuilder() {
        if (x509EntryBuilder_ == null) {
          x509EntryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.X509ChainEntryOrBuilder>(
                  getX509Entry(),
                  getParentForChildren(),
                  isClean());
          x509Entry_ = null;
        }
        return x509EntryBuilder_;
      }

      private org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry precertEntry_ = org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder> precertEntryBuilder_;
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public boolean hasPrecertEntry() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry getPrecertEntry() {
        if (precertEntryBuilder_ == null) {
          return precertEntry_;
        } else {
          return precertEntryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public Builder setPrecertEntry(org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry value) {
        if (precertEntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          precertEntry_ = value;
          onChanged();
        } else {
          precertEntryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public Builder setPrecertEntry(
          org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder builderForValue) {
        if (precertEntryBuilder_ == null) {
          precertEntry_ = builderForValue.build();
          onChanged();
        } else {
          precertEntryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public Builder mergePrecertEntry(org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry value) {
        if (precertEntryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              precertEntry_ != org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance()) {
            precertEntry_ =
              org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.newBuilder(precertEntry_).mergeFrom(value).buildPartial();
          } else {
            precertEntry_ = value;
          }
          onChanged();
        } else {
          precertEntryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public Builder clearPrecertEntry() {
        if (precertEntryBuilder_ == null) {
          precertEntry_ = org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.getDefaultInstance();
          onChanged();
        } else {
          precertEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder getPrecertEntryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPrecertEntryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder getPrecertEntryOrBuilder() {
        if (precertEntryBuilder_ != null) {
          return precertEntryBuilder_.getMessageOrBuilder();
        } else {
          return precertEntry_;
        }
      }
      /**
       * <code>optional .ct.PrecertChainEntry precert_entry = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder> 
          getPrecertEntryFieldBuilder() {
        if (precertEntryBuilder_ == null) {
          precertEntryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.PrecertChainEntryOrBuilder>(
                  getPrecertEntry(),
                  getParentForChildren(),
                  isClean());
          precertEntry_ = null;
        }
        return precertEntryBuilder_;
      }

      private org.certificatetransparency.ctlog.proto.Ct.XJSONEntry xJsonEntry_ = org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.XJSONEntry, org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder> xJsonEntryBuilder_;
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public boolean hasXJsonEntry() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.XJSONEntry getXJsonEntry() {
        if (xJsonEntryBuilder_ == null) {
          return xJsonEntry_;
        } else {
          return xJsonEntryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public Builder setXJsonEntry(org.certificatetransparency.ctlog.proto.Ct.XJSONEntry value) {
        if (xJsonEntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          xJsonEntry_ = value;
          onChanged();
        } else {
          xJsonEntryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public Builder setXJsonEntry(
          org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder builderForValue) {
        if (xJsonEntryBuilder_ == null) {
          xJsonEntry_ = builderForValue.build();
          onChanged();
        } else {
          xJsonEntryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public Builder mergeXJsonEntry(org.certificatetransparency.ctlog.proto.Ct.XJSONEntry value) {
        if (xJsonEntryBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              xJsonEntry_ != org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance()) {
            xJsonEntry_ =
              org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.newBuilder(xJsonEntry_).mergeFrom(value).buildPartial();
          } else {
            xJsonEntry_ = value;
          }
          onChanged();
        } else {
          xJsonEntryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public Builder clearXJsonEntry() {
        if (xJsonEntryBuilder_ == null) {
          xJsonEntry_ = org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.getDefaultInstance();
          onChanged();
        } else {
          xJsonEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder getXJsonEntryBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getXJsonEntryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder getXJsonEntryOrBuilder() {
        if (xJsonEntryBuilder_ != null) {
          return xJsonEntryBuilder_.getMessageOrBuilder();
        } else {
          return xJsonEntry_;
        }
      }
      /**
       * <code>optional .ct.XJSONEntry x_json_entry = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.XJSONEntry, org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder> 
          getXJsonEntryFieldBuilder() {
        if (xJsonEntryBuilder_ == null) {
          xJsonEntryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.XJSONEntry, org.certificatetransparency.ctlog.proto.Ct.XJSONEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.XJSONEntryOrBuilder>(
                  getXJsonEntry(),
                  getParentForChildren(),
                  isClean());
          xJsonEntry_ = null;
        }
        return xJsonEntryBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.LogEntry)
    }

    static {
      defaultInstance = new LogEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.LogEntry)
  }

  public interface LogIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.LogID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes key_id = 1;</code>
     *
     * <pre>
     * 32 bytes
     * </pre>
     */
    boolean hasKeyId();
    /**
     * <code>optional bytes key_id = 1;</code>
     *
     * <pre>
     * 32 bytes
     * </pre>
     */
    com.google.protobuf.ByteString getKeyId();
  }
  /**
   * Protobuf type {@code ct.LogID}
   */
  public static final class LogID extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.LogID)
      LogIDOrBuilder {
    // Use LogID.newBuilder() to construct.
    private LogID(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogID(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogID defaultInstance;
    public static LogID getDefaultInstance() {
      return defaultInstance;
    }

    public LogID getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              keyId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogID_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.LogID.class, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder.class);
    }

    public static com.google.protobuf.Parser<LogID> PARSER =
        new com.google.protobuf.AbstractParser<LogID>() {
      public LogID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogID(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogID> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString keyId_;
    /**
     * <code>optional bytes key_id = 1;</code>
     *
     * <pre>
     * 32 bytes
     * </pre>
     */
    public boolean hasKeyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes key_id = 1;</code>
     *
     * <pre>
     * 32 bytes
     * </pre>
     */
    public com.google.protobuf.ByteString getKeyId() {
      return keyId_;
    }

    private void initFields() {
      keyId_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, keyId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, keyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LogID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.LogID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.LogID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.LogID)
        org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogID_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.LogID.class, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.LogID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LogID_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.LogID getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.LogID build() {
        org.certificatetransparency.ctlog.proto.Ct.LogID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.LogID buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.LogID result = new org.certificatetransparency.ctlog.proto.Ct.LogID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyId_ = keyId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.LogID) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.LogID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.LogID other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance()) return this;
        if (other.hasKeyId()) {
          setKeyId(other.getKeyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.LogID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.LogID) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString keyId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes key_id = 1;</code>
       *
       * <pre>
       * 32 bytes
       * </pre>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes key_id = 1;</code>
       *
       * <pre>
       * 32 bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getKeyId() {
        return keyId_;
      }
      /**
       * <code>optional bytes key_id = 1;</code>
       *
       * <pre>
       * 32 bytes
       * </pre>
       */
      public Builder setKeyId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes key_id = 1;</code>
       *
       * <pre>
       * 32 bytes
       * </pre>
       */
      public Builder clearKeyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyId_ = getDefaultInstance().getKeyId();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.LogID)
    }

    static {
      defaultInstance = new LogID(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.LogID)
  }

  public interface SctExtensionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SctExtension)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 sct_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    boolean hasSctExtensionType();
    /**
     * <code>optional uint32 sct_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    int getSctExtensionType();

    /**
     * <code>optional bytes sct_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    boolean hasSctExtensionData();
    /**
     * <code>optional bytes sct_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    com.google.protobuf.ByteString getSctExtensionData();
  }
  /**
   * Protobuf type {@code ct.SctExtension}
   */
  public static final class SctExtension extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SctExtension)
      SctExtensionOrBuilder {
    // Use SctExtension.newBuilder() to construct.
    private SctExtension(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SctExtension(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SctExtension defaultInstance;
    public static SctExtension getDefaultInstance() {
      return defaultInstance;
    }

    public SctExtension getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SctExtension(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sctExtensionType_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              sctExtensionData_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SctExtension_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SctExtension_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SctExtension.class, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder.class);
    }

    public static com.google.protobuf.Parser<SctExtension> PARSER =
        new com.google.protobuf.AbstractParser<SctExtension>() {
      public SctExtension parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SctExtension(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SctExtension> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SCT_EXTENSION_TYPE_FIELD_NUMBER = 1;
    private int sctExtensionType_;
    /**
     * <code>optional uint32 sct_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    public boolean hasSctExtensionType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 sct_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    public int getSctExtensionType() {
      return sctExtensionType_;
    }

    public static final int SCT_EXTENSION_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString sctExtensionData_;
    /**
     * <code>optional bytes sct_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    public boolean hasSctExtensionData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes sct_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    public com.google.protobuf.ByteString getSctExtensionData() {
      return sctExtensionData_;
    }

    private void initFields() {
      sctExtensionType_ = 0;
      sctExtensionData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sctExtensionType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, sctExtensionData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sctExtensionType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, sctExtensionData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SctExtension parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SctExtension prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SctExtension}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SctExtension)
        org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SctExtension_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SctExtension_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SctExtension.class, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SctExtension.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sctExtensionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sctExtensionData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SctExtension_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SctExtension getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SctExtension.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SctExtension build() {
        org.certificatetransparency.ctlog.proto.Ct.SctExtension result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SctExtension buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SctExtension result = new org.certificatetransparency.ctlog.proto.Ct.SctExtension(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sctExtensionType_ = sctExtensionType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sctExtensionData_ = sctExtensionData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SctExtension) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SctExtension)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SctExtension other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SctExtension.getDefaultInstance()) return this;
        if (other.hasSctExtensionType()) {
          setSctExtensionType(other.getSctExtensionType());
        }
        if (other.hasSctExtensionData()) {
          setSctExtensionData(other.getSctExtensionData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SctExtension parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SctExtension) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sctExtensionType_ ;
      /**
       * <code>optional uint32 sct_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public boolean hasSctExtensionType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 sct_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public int getSctExtensionType() {
        return sctExtensionType_;
      }
      /**
       * <code>optional uint32 sct_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public Builder setSctExtensionType(int value) {
        bitField0_ |= 0x00000001;
        sctExtensionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sct_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public Builder clearSctExtensionType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sctExtensionType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sctExtensionData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes sct_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public boolean hasSctExtensionData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes sct_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getSctExtensionData() {
        return sctExtensionData_;
      }
      /**
       * <code>optional bytes sct_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public Builder setSctExtensionData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sctExtensionData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes sct_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific. &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public Builder clearSctExtensionData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sctExtensionData_ = getDefaultInstance().getSctExtensionData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.SctExtension)
    }

    static {
      defaultInstance = new SctExtension(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SctExtension)
  }

  public interface SignedCertificateTimestampOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SignedCertificateTimestamp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.Version getVersion();

    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogID getId();
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder();

    /**
     * <code>optional uint64 timestamp = 3;</code>
     *
     * <pre>
     * UTC time in milliseconds, since January 1, 1970, 00:00.
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 3;</code>
     *
     * <pre>
     * UTC time in milliseconds, since January 1, 1970, 00:00.
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional .ct.DigitallySigned signature = 4;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional .ct.DigitallySigned signature = 4;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getSignature();
    /**
     * <code>optional .ct.DigitallySigned signature = 4;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getSignatureOrBuilder();

    /**
     * <code>optional bytes extensions = 5;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    boolean hasExtensions();
    /**
     * <code>optional bytes extensions = 5;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    com.google.protobuf.ByteString getExtensions();

    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> 
        getSctExtensionList();
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.SctExtension getSctExtension(int index);
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    int getSctExtensionCount();
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
        getSctExtensionOrBuilderList();
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder getSctExtensionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ct.SignedCertificateTimestamp}
   *
   * <pre>
   * TODO(ekasper): implement support for id.
   * </pre>
   */
  public static final class SignedCertificateTimestamp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SignedCertificateTimestamp)
      SignedCertificateTimestampOrBuilder {
    // Use SignedCertificateTimestamp.newBuilder() to construct.
    private SignedCertificateTimestamp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignedCertificateTimestamp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignedCertificateTimestamp defaultInstance;
    public static SignedCertificateTimestamp getDefaultInstance() {
      return defaultInstance;
    }

    public SignedCertificateTimestamp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignedCertificateTimestamp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.Version value = org.certificatetransparency.ctlog.proto.Ct.Version.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                version_ = value;
              }
              break;
            }
            case 18: {
              org.certificatetransparency.ctlog.proto.Ct.LogID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.LogID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readUInt64();
              break;
            }
            case 34: {
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              extensions_ = input.readBytes();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                sctExtension_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SctExtension>();
                mutable_bitField0_ |= 0x00000020;
              }
              sctExtension_.add(input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SctExtension.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          sctExtension_ = java.util.Collections.unmodifiableList(sctExtension_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestamp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestamp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.class, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder.class);
    }

    public static com.google.protobuf.Parser<SignedCertificateTimestamp> PARSER =
        new com.google.protobuf.AbstractParser<SignedCertificateTimestamp>() {
      public SignedCertificateTimestamp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedCertificateTimestamp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignedCertificateTimestamp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.Version version_;
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
      return version_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.LogID id_;
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogID getId() {
      return id_;
    }
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder() {
      return id_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 3;</code>
     *
     * <pre>
     * UTC time in milliseconds, since January 1, 1970, 00:00.
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 timestamp = 3;</code>
     *
     * <pre>
     * UTC time in milliseconds, since January 1, 1970, 00:00.
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned signature_;
    /**
     * <code>optional .ct.DigitallySigned signature = 4;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ct.DigitallySigned signature = 4;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getSignature() {
      return signature_;
    }
    /**
     * <code>optional .ct.DigitallySigned signature = 4;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getSignatureOrBuilder() {
      return signature_;
    }

    public static final int EXTENSIONS_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString extensions_;
    /**
     * <code>optional bytes extensions = 5;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    public boolean hasExtensions() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes extensions = 5;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    public com.google.protobuf.ByteString getExtensions() {
      return extensions_;
    }

    public static final int SCT_EXTENSION_FIELD_NUMBER = 6;
    private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> sctExtension_;
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> getSctExtensionList() {
      return sctExtension_;
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
        getSctExtensionOrBuilderList() {
      return sctExtension_;
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public int getSctExtensionCount() {
      return sctExtension_.size();
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SctExtension getSctExtension(int index) {
      return sctExtension_.get(index);
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 6;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder getSctExtensionOrBuilder(
        int index) {
      return sctExtension_.get(index);
    }

    private void initFields() {
      version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      timestamp_ = 0L;
      signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
      extensions_ = com.google.protobuf.ByteString.EMPTY;
      sctExtension_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, signature_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, extensions_);
      }
      for (int i = 0; i < sctExtension_.size(); i++) {
        output.writeMessage(6, sctExtension_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, signature_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, extensions_);
      }
      for (int i = 0; i < sctExtension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, sctExtension_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SignedCertificateTimestamp}
     *
     * <pre>
     * TODO(ekasper): implement support for id.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SignedCertificateTimestamp)
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestamp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestamp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.class, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdFieldBuilder();
          getSignatureFieldBuilder();
          getSctExtensionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (idBuilder_ == null) {
          id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (signatureBuilder_ == null) {
          signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        extensions_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (sctExtensionBuilder_ == null) {
          sctExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          sctExtensionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestamp_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp build() {
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp result = new org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (signatureBuilder_ == null) {
          result.signature_ = signature_;
        } else {
          result.signature_ = signatureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.extensions_ = extensions_;
        if (sctExtensionBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            sctExtension_ = java.util.Collections.unmodifiableList(sctExtension_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.sctExtension_ = sctExtension_;
        } else {
          result.sctExtension_ = sctExtensionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        if (other.hasExtensions()) {
          setExtensions(other.getExtensions());
        }
        if (sctExtensionBuilder_ == null) {
          if (!other.sctExtension_.isEmpty()) {
            if (sctExtension_.isEmpty()) {
              sctExtension_ = other.sctExtension_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSctExtensionIsMutable();
              sctExtension_.addAll(other.sctExtension_);
            }
            onChanged();
          }
        } else {
          if (!other.sctExtension_.isEmpty()) {
            if (sctExtensionBuilder_.isEmpty()) {
              sctExtensionBuilder_.dispose();
              sctExtensionBuilder_ = null;
              sctExtension_ = other.sctExtension_;
              bitField0_ = (bitField0_ & ~0x00000020);
              sctExtensionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSctExtensionFieldBuilder() : null;
            } else {
              sctExtensionBuilder_.addAllMessages(other.sctExtension_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.Version version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
        return version_;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public Builder setVersion(org.certificatetransparency.ctlog.proto.Ct.Version value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.LogID id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder> idBuilder_;
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogID getId() {
        if (idBuilder_ == null) {
          return id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder setId(org.certificatetransparency.ctlog.proto.Ct.LogID value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder setId(
          org.certificatetransparency.ctlog.proto.Ct.LogID.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder mergeId(org.certificatetransparency.ctlog.proto.Ct.LogID value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              id_ != org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance()) {
            id_ =
              org.certificatetransparency.ctlog.proto.Ct.LogID.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
          onChanged();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogID.Builder getIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_;
        }
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * UTC time in milliseconds, since January 1, 1970, 00:00.
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * UTC time in milliseconds, since January 1, 1970, 00:00.
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * UTC time in milliseconds, since January 1, 1970, 00:00.
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       *
       * <pre>
       * UTC time in milliseconds, since January 1, 1970, 00:00.
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder> signatureBuilder_;
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getSignature() {
        if (signatureBuilder_ == null) {
          return signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public Builder setSignature(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public Builder setSignature(
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public Builder mergeSignature(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              signature_ != org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance()) {
            signature_ =
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
          onChanged();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_;
        }
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      private com.google.protobuf.ByteString extensions_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes extensions = 5;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public boolean hasExtensions() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes extensions = 5;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public com.google.protobuf.ByteString getExtensions() {
        return extensions_;
      }
      /**
       * <code>optional bytes extensions = 5;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public Builder setExtensions(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        extensions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes extensions = 5;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public Builder clearExtensions() {
        bitField0_ = (bitField0_ & ~0x00000010);
        extensions_ = getDefaultInstance().getExtensions();
        onChanged();
        return this;
      }

      private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> sctExtension_ =
        java.util.Collections.emptyList();
      private void ensureSctExtensionIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          sctExtension_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SctExtension>(sctExtension_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SctExtension, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> sctExtensionBuilder_;

      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> getSctExtensionList() {
        if (sctExtensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sctExtension_);
        } else {
          return sctExtensionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public int getSctExtensionCount() {
        if (sctExtensionBuilder_ == null) {
          return sctExtension_.size();
        } else {
          return sctExtensionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension getSctExtension(int index) {
        if (sctExtensionBuilder_ == null) {
          return sctExtension_.get(index);
        } else {
          return sctExtensionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder setSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension value) {
        if (sctExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSctExtensionIsMutable();
          sctExtension_.set(index, value);
          onChanged();
        } else {
          sctExtensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder setSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder builderForValue) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.set(index, builderForValue.build());
          onChanged();
        } else {
          sctExtensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(org.certificatetransparency.ctlog.proto.Ct.SctExtension value) {
        if (sctExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSctExtensionIsMutable();
          sctExtension_.add(value);
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension value) {
        if (sctExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSctExtensionIsMutable();
          sctExtension_.add(index, value);
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(
          org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder builderForValue) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.add(builderForValue.build());
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder builderForValue) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.add(index, builderForValue.build());
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addAllSctExtension(
          java.lang.Iterable<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtension> values) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sctExtension_);
          onChanged();
        } else {
          sctExtensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder clearSctExtension() {
        if (sctExtensionBuilder_ == null) {
          sctExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          sctExtensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder removeSctExtension(int index) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.remove(index);
          onChanged();
        } else {
          sctExtensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder getSctExtensionBuilder(
          int index) {
        return getSctExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder getSctExtensionOrBuilder(
          int index) {
        if (sctExtensionBuilder_ == null) {
          return sctExtension_.get(index);  } else {
          return sctExtensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
           getSctExtensionOrBuilderList() {
        if (sctExtensionBuilder_ != null) {
          return sctExtensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sctExtension_);
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder addSctExtensionBuilder() {
        return getSctExtensionFieldBuilder().addBuilder(
            org.certificatetransparency.ctlog.proto.Ct.SctExtension.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder addSctExtensionBuilder(
          int index) {
        return getSctExtensionFieldBuilder().addBuilder(
            index, org.certificatetransparency.ctlog.proto.Ct.SctExtension.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 6;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder> 
           getSctExtensionBuilderList() {
        return getSctExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SctExtension, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
          getSctExtensionFieldBuilder() {
        if (sctExtensionBuilder_ == null) {
          sctExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SctExtension, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder>(
                  sctExtension_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          sctExtension_ = null;
        }
        return sctExtensionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.SignedCertificateTimestamp)
    }

    static {
      defaultInstance = new SignedCertificateTimestamp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SignedCertificateTimestamp)
  }

  public interface SignedCertificateTimestampListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SignedCertificateTimestampList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bytes sct_list = 1;</code>
     *
     * <pre>
     * One or more SCTs, &lt;1..2^16-1&gt; bytes each
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getSctListList();
    /**
     * <code>repeated bytes sct_list = 1;</code>
     *
     * <pre>
     * One or more SCTs, &lt;1..2^16-1&gt; bytes each
     * </pre>
     */
    int getSctListCount();
    /**
     * <code>repeated bytes sct_list = 1;</code>
     *
     * <pre>
     * One or more SCTs, &lt;1..2^16-1&gt; bytes each
     * </pre>
     */
    com.google.protobuf.ByteString getSctList(int index);
  }
  /**
   * Protobuf type {@code ct.SignedCertificateTimestampList}
   */
  public static final class SignedCertificateTimestampList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SignedCertificateTimestampList)
      SignedCertificateTimestampListOrBuilder {
    // Use SignedCertificateTimestampList.newBuilder() to construct.
    private SignedCertificateTimestampList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignedCertificateTimestampList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignedCertificateTimestampList defaultInstance;
    public static SignedCertificateTimestampList getDefaultInstance() {
      return defaultInstance;
    }

    public SignedCertificateTimestampList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignedCertificateTimestampList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                sctList_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              sctList_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          sctList_ = java.util.Collections.unmodifiableList(sctList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestampList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestampList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.class, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.Builder.class);
    }

    public static com.google.protobuf.Parser<SignedCertificateTimestampList> PARSER =
        new com.google.protobuf.AbstractParser<SignedCertificateTimestampList>() {
      public SignedCertificateTimestampList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedCertificateTimestampList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignedCertificateTimestampList> getParserForType() {
      return PARSER;
    }

    public static final int SCT_LIST_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> sctList_;
    /**
     * <code>repeated bytes sct_list = 1;</code>
     *
     * <pre>
     * One or more SCTs, &lt;1..2^16-1&gt; bytes each
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getSctListList() {
      return sctList_;
    }
    /**
     * <code>repeated bytes sct_list = 1;</code>
     *
     * <pre>
     * One or more SCTs, &lt;1..2^16-1&gt; bytes each
     * </pre>
     */
    public int getSctListCount() {
      return sctList_.size();
    }
    /**
     * <code>repeated bytes sct_list = 1;</code>
     *
     * <pre>
     * One or more SCTs, &lt;1..2^16-1&gt; bytes each
     * </pre>
     */
    public com.google.protobuf.ByteString getSctList(int index) {
      return sctList_.get(index);
    }

    private void initFields() {
      sctList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < sctList_.size(); i++) {
        output.writeBytes(1, sctList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < sctList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(sctList_.get(i));
        }
        size += dataSize;
        size += 1 * getSctListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SignedCertificateTimestampList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SignedCertificateTimestampList)
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestampList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestampList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.class, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sctList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedCertificateTimestampList_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList build() {
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList result = new org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          sctList_ = java.util.Collections.unmodifiableList(sctList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sctList_ = sctList_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList.getDefaultInstance()) return this;
        if (!other.sctList_.isEmpty()) {
          if (sctList_.isEmpty()) {
            sctList_ = other.sctList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSctListIsMutable();
            sctList_.addAll(other.sctList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> sctList_ = java.util.Collections.emptyList();
      private void ensureSctListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          sctList_ = new java.util.ArrayList<com.google.protobuf.ByteString>(sctList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getSctListList() {
        return java.util.Collections.unmodifiableList(sctList_);
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public int getSctListCount() {
        return sctList_.size();
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public com.google.protobuf.ByteString getSctList(int index) {
        return sctList_.get(index);
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public Builder setSctList(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSctListIsMutable();
        sctList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public Builder addSctList(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSctListIsMutable();
        sctList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public Builder addAllSctList(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureSctListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sctList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes sct_list = 1;</code>
       *
       * <pre>
       * One or more SCTs, &lt;1..2^16-1&gt; bytes each
       * </pre>
       */
      public Builder clearSctList() {
        sctList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.SignedCertificateTimestampList)
    }

    static {
      defaultInstance = new SignedCertificateTimestampList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SignedCertificateTimestampList)
  }

  public interface SignedEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SignedEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes x509 = 1;</code>
     *
     * <pre>
     * For V1 signed entries either the x509 or precert field will be set
     * </pre>
     */
    boolean hasX509();
    /**
     * <code>optional bytes x509 = 1;</code>
     *
     * <pre>
     * For V1 signed entries either the x509 or precert field will be set
     * </pre>
     */
    com.google.protobuf.ByteString getX509();

    /**
     * <code>optional .ct.PreCert precert = 2;</code>
     */
    boolean hasPrecert();
    /**
     * <code>optional .ct.PreCert precert = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.PreCert getPrecert();
    /**
     * <code>optional .ct.PreCert precert = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder getPrecertOrBuilder();

    /**
     * <code>optional bytes json = 3;</code>
     */
    boolean hasJson();
    /**
     * <code>optional bytes json = 3;</code>
     */
    com.google.protobuf.ByteString getJson();

    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * For V2 all entries use the CertInfo field and the above fields are
     * not set
     * </pre>
     */
    boolean hasCertInfo();
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * For V2 all entries use the CertInfo field and the above fields are
     * not set
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo();
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * For V2 all entries use the CertInfo field and the above fields are
     * not set
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder();
  }
  /**
   * Protobuf type {@code ct.SignedEntry}
   */
  public static final class SignedEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SignedEntry)
      SignedEntryOrBuilder {
    // Use SignedEntry.newBuilder() to construct.
    private SignedEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignedEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignedEntry defaultInstance;
    public static SignedEntry getDefaultInstance() {
      return defaultInstance;
    }

    public SignedEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignedEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              x509_ = input.readBytes();
              break;
            }
            case 18: {
              org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = precert_.toBuilder();
              }
              precert_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.PreCert.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(precert_);
                precert_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              json_ = input.readBytes();
              break;
            }
            case 34: {
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = certInfo_.toBuilder();
              }
              certInfo_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.CertInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(certInfo_);
                certInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SignedEntry.class, org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<SignedEntry> PARSER =
        new com.google.protobuf.AbstractParser<SignedEntry>() {
      public SignedEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignedEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int X509_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString x509_;
    /**
     * <code>optional bytes x509 = 1;</code>
     *
     * <pre>
     * For V1 signed entries either the x509 or precert field will be set
     * </pre>
     */
    public boolean hasX509() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes x509 = 1;</code>
     *
     * <pre>
     * For V1 signed entries either the x509 or precert field will be set
     * </pre>
     */
    public com.google.protobuf.ByteString getX509() {
      return x509_;
    }

    public static final int PRECERT_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.PreCert precert_;
    /**
     * <code>optional .ct.PreCert precert = 2;</code>
     */
    public boolean hasPrecert() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.PreCert precert = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.PreCert getPrecert() {
      return precert_;
    }
    /**
     * <code>optional .ct.PreCert precert = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder getPrecertOrBuilder() {
      return precert_;
    }

    public static final int JSON_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString json_;
    /**
     * <code>optional bytes json = 3;</code>
     */
    public boolean hasJson() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes json = 3;</code>
     */
    public com.google.protobuf.ByteString getJson() {
      return json_;
    }

    public static final int CERT_INFO_FIELD_NUMBER = 4;
    private org.certificatetransparency.ctlog.proto.Ct.CertInfo certInfo_;
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * For V2 all entries use the CertInfo field and the above fields are
     * not set
     * </pre>
     */
    public boolean hasCertInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * For V2 all entries use the CertInfo field and the above fields are
     * not set
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo() {
      return certInfo_;
    }
    /**
     * <code>optional .ct.CertInfo cert_info = 4;</code>
     *
     * <pre>
     * For V2 all entries use the CertInfo field and the above fields are
     * not set
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder() {
      return certInfo_;
    }

    private void initFields() {
      x509_ = com.google.protobuf.ByteString.EMPTY;
      precert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
      json_ = com.google.protobuf.ByteString.EMPTY;
      certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, x509_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, precert_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, json_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, certInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, x509_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, precert_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, json_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, certInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SignedEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SignedEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SignedEntry)
        org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SignedEntry.class, org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SignedEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrecertFieldBuilder();
          getCertInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x509_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (precertBuilder_ == null) {
          precert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
        } else {
          precertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        json_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (certInfoBuilder_ == null) {
          certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
        } else {
          certInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedEntry_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedEntry getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedEntry build() {
        org.certificatetransparency.ctlog.proto.Ct.SignedEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedEntry buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SignedEntry result = new org.certificatetransparency.ctlog.proto.Ct.SignedEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x509_ = x509_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (precertBuilder_ == null) {
          result.precert_ = precert_;
        } else {
          result.precert_ = precertBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.json_ = json_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (certInfoBuilder_ == null) {
          result.certInfo_ = certInfo_;
        } else {
          result.certInfo_ = certInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SignedEntry) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SignedEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SignedEntry other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance()) return this;
        if (other.hasX509()) {
          setX509(other.getX509());
        }
        if (other.hasPrecert()) {
          mergePrecert(other.getPrecert());
        }
        if (other.hasJson()) {
          setJson(other.getJson());
        }
        if (other.hasCertInfo()) {
          mergeCertInfo(other.getCertInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SignedEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SignedEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString x509_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes x509 = 1;</code>
       *
       * <pre>
       * For V1 signed entries either the x509 or precert field will be set
       * </pre>
       */
      public boolean hasX509() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes x509 = 1;</code>
       *
       * <pre>
       * For V1 signed entries either the x509 or precert field will be set
       * </pre>
       */
      public com.google.protobuf.ByteString getX509() {
        return x509_;
      }
      /**
       * <code>optional bytes x509 = 1;</code>
       *
       * <pre>
       * For V1 signed entries either the x509 or precert field will be set
       * </pre>
       */
      public Builder setX509(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        x509_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes x509 = 1;</code>
       *
       * <pre>
       * For V1 signed entries either the x509 or precert field will be set
       * </pre>
       */
      public Builder clearX509() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x509_ = getDefaultInstance().getX509();
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.PreCert precert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.PreCert, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder, org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder> precertBuilder_;
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public boolean hasPrecert() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PreCert getPrecert() {
        if (precertBuilder_ == null) {
          return precert_;
        } else {
          return precertBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public Builder setPrecert(org.certificatetransparency.ctlog.proto.Ct.PreCert value) {
        if (precertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          precert_ = value;
          onChanged();
        } else {
          precertBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public Builder setPrecert(
          org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder builderForValue) {
        if (precertBuilder_ == null) {
          precert_ = builderForValue.build();
          onChanged();
        } else {
          precertBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public Builder mergePrecert(org.certificatetransparency.ctlog.proto.Ct.PreCert value) {
        if (precertBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              precert_ != org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance()) {
            precert_ =
              org.certificatetransparency.ctlog.proto.Ct.PreCert.newBuilder(precert_).mergeFrom(value).buildPartial();
          } else {
            precert_ = value;
          }
          onChanged();
        } else {
          precertBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public Builder clearPrecert() {
        if (precertBuilder_ == null) {
          precert_ = org.certificatetransparency.ctlog.proto.Ct.PreCert.getDefaultInstance();
          onChanged();
        } else {
          precertBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder getPrecertBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPrecertFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder getPrecertOrBuilder() {
        if (precertBuilder_ != null) {
          return precertBuilder_.getMessageOrBuilder();
        } else {
          return precert_;
        }
      }
      /**
       * <code>optional .ct.PreCert precert = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.PreCert, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder, org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder> 
          getPrecertFieldBuilder() {
        if (precertBuilder_ == null) {
          precertBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.PreCert, org.certificatetransparency.ctlog.proto.Ct.PreCert.Builder, org.certificatetransparency.ctlog.proto.Ct.PreCertOrBuilder>(
                  getPrecert(),
                  getParentForChildren(),
                  isClean());
          precert_ = null;
        }
        return precertBuilder_;
      }

      private com.google.protobuf.ByteString json_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes json = 3;</code>
       */
      public boolean hasJson() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes json = 3;</code>
       */
      public com.google.protobuf.ByteString getJson() {
        return json_;
      }
      /**
       * <code>optional bytes json = 3;</code>
       */
      public Builder setJson(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        json_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes json = 3;</code>
       */
      public Builder clearJson() {
        bitField0_ = (bitField0_ & ~0x00000004);
        json_ = getDefaultInstance().getJson();
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.CertInfo certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder> certInfoBuilder_;
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public boolean hasCertInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfo getCertInfo() {
        if (certInfoBuilder_ == null) {
          return certInfo_;
        } else {
          return certInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public Builder setCertInfo(org.certificatetransparency.ctlog.proto.Ct.CertInfo value) {
        if (certInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          certInfo_ = value;
          onChanged();
        } else {
          certInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public Builder setCertInfo(
          org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder builderForValue) {
        if (certInfoBuilder_ == null) {
          certInfo_ = builderForValue.build();
          onChanged();
        } else {
          certInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public Builder mergeCertInfo(org.certificatetransparency.ctlog.proto.Ct.CertInfo value) {
        if (certInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              certInfo_ != org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance()) {
            certInfo_ =
              org.certificatetransparency.ctlog.proto.Ct.CertInfo.newBuilder(certInfo_).mergeFrom(value).buildPartial();
          } else {
            certInfo_ = value;
          }
          onChanged();
        } else {
          certInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public Builder clearCertInfo() {
        if (certInfoBuilder_ == null) {
          certInfo_ = org.certificatetransparency.ctlog.proto.Ct.CertInfo.getDefaultInstance();
          onChanged();
        } else {
          certInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder getCertInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCertInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder getCertInfoOrBuilder() {
        if (certInfoBuilder_ != null) {
          return certInfoBuilder_.getMessageOrBuilder();
        } else {
          return certInfo_;
        }
      }
      /**
       * <code>optional .ct.CertInfo cert_info = 4;</code>
       *
       * <pre>
       * For V2 all entries use the CertInfo field and the above fields are
       * not set
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder> 
          getCertInfoFieldBuilder() {
        if (certInfoBuilder_ == null) {
          certInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.CertInfo, org.certificatetransparency.ctlog.proto.Ct.CertInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.CertInfoOrBuilder>(
                  getCertInfo(),
                  getParentForChildren(),
                  isClean());
          certInfo_ = null;
        }
        return certInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.SignedEntry)
    }

    static {
      defaultInstance = new SignedEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SignedEntry)
  }

  public interface TimestampedEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.TimestampedEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 1;</code>
     */
    long getTimestamp();

    /**
     * <code>optional .ct.LogEntryType entry_type = 2;</code>
     */
    boolean hasEntryType();
    /**
     * <code>optional .ct.LogEntryType entry_type = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogEntryType getEntryType();

    /**
     * <code>optional .ct.SignedEntry signed_entry = 3;</code>
     */
    boolean hasSignedEntry();
    /**
     * <code>optional .ct.SignedEntry signed_entry = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SignedEntry getSignedEntry();
    /**
     * <code>optional .ct.SignedEntry signed_entry = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder getSignedEntryOrBuilder();

    /**
     * <code>optional bytes extensions = 4;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    boolean hasExtensions();
    /**
     * <code>optional bytes extensions = 4;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    com.google.protobuf.ByteString getExtensions();

    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> 
        getSctExtensionList();
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.SctExtension getSctExtension(int index);
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    int getSctExtensionCount();
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
        getSctExtensionOrBuilderList();
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder getSctExtensionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ct.TimestampedEntry}
   */
  public static final class TimestampedEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.TimestampedEntry)
      TimestampedEntryOrBuilder {
    // Use TimestampedEntry.newBuilder() to construct.
    private TimestampedEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TimestampedEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TimestampedEntry defaultInstance;
    public static TimestampedEntry getDefaultInstance() {
      return defaultInstance;
    }

    public TimestampedEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TimestampedEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.LogEntryType value = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                entryType_ = value;
              }
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = signedEntry_.toBuilder();
              }
              signedEntry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SignedEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signedEntry_);
                signedEntry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              extensions_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                sctExtension_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SctExtension>();
                mutable_bitField0_ |= 0x00000010;
              }
              sctExtension_.add(input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SctExtension.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          sctExtension_ = java.util.Collections.unmodifiableList(sctExtension_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_TimestampedEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_TimestampedEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.class, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<TimestampedEntry> PARSER =
        new com.google.protobuf.AbstractParser<TimestampedEntry>() {
      public TimestampedEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimestampedEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TimestampedEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int ENTRY_TYPE_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.LogEntryType entryType_;
    /**
     * <code>optional .ct.LogEntryType entry_type = 2;</code>
     */
    public boolean hasEntryType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.LogEntryType entry_type = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogEntryType getEntryType() {
      return entryType_;
    }

    public static final int SIGNED_ENTRY_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.SignedEntry signedEntry_;
    /**
     * <code>optional .ct.SignedEntry signed_entry = 3;</code>
     */
    public boolean hasSignedEntry() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ct.SignedEntry signed_entry = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SignedEntry getSignedEntry() {
      return signedEntry_;
    }
    /**
     * <code>optional .ct.SignedEntry signed_entry = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder getSignedEntryOrBuilder() {
      return signedEntry_;
    }

    public static final int EXTENSIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString extensions_;
    /**
     * <code>optional bytes extensions = 4;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    public boolean hasExtensions() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes extensions = 4;</code>
     *
     * <pre>
     * V1 extensions
     * </pre>
     */
    public com.google.protobuf.ByteString getExtensions() {
      return extensions_;
    }

    public static final int SCT_EXTENSION_FIELD_NUMBER = 5;
    private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> sctExtension_;
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> getSctExtensionList() {
      return sctExtension_;
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
        getSctExtensionOrBuilderList() {
      return sctExtension_;
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public int getSctExtensionCount() {
      return sctExtension_.size();
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SctExtension getSctExtension(int index) {
      return sctExtension_.get(index);
    }
    /**
     * <code>repeated .ct.SctExtension sct_extension = 5;</code>
     *
     * <pre>
     * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder getSctExtensionOrBuilder(
        int index) {
      return sctExtension_.get(index);
    }

    private void initFields() {
      timestamp_ = 0L;
      entryType_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.X509_ENTRY;
      signedEntry_ = org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance();
      extensions_ = com.google.protobuf.ByteString.EMPTY;
      sctExtension_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, entryType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, signedEntry_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, extensions_);
      }
      for (int i = 0; i < sctExtension_.size(); i++) {
        output.writeMessage(5, sctExtension_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, entryType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, signedEntry_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, extensions_);
      }
      for (int i = 0; i < sctExtension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sctExtension_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.TimestampedEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.TimestampedEntry)
        org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_TimestampedEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_TimestampedEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.class, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignedEntryFieldBuilder();
          getSctExtensionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        entryType_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.X509_ENTRY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (signedEntryBuilder_ == null) {
          signedEntry_ = org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance();
        } else {
          signedEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        extensions_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sctExtensionBuilder_ == null) {
          sctExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          sctExtensionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_TimestampedEntry_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry build() {
        org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry result = new org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entryType_ = entryType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (signedEntryBuilder_ == null) {
          result.signedEntry_ = signedEntry_;
        } else {
          result.signedEntry_ = signedEntryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.extensions_ = extensions_;
        if (sctExtensionBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            sctExtension_ = java.util.Collections.unmodifiableList(sctExtension_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.sctExtension_ = sctExtension_;
        } else {
          result.sctExtension_ = sctExtensionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasEntryType()) {
          setEntryType(other.getEntryType());
        }
        if (other.hasSignedEntry()) {
          mergeSignedEntry(other.getSignedEntry());
        }
        if (other.hasExtensions()) {
          setExtensions(other.getExtensions());
        }
        if (sctExtensionBuilder_ == null) {
          if (!other.sctExtension_.isEmpty()) {
            if (sctExtension_.isEmpty()) {
              sctExtension_ = other.sctExtension_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSctExtensionIsMutable();
              sctExtension_.addAll(other.sctExtension_);
            }
            onChanged();
          }
        } else {
          if (!other.sctExtension_.isEmpty()) {
            if (sctExtensionBuilder_.isEmpty()) {
              sctExtensionBuilder_.dispose();
              sctExtensionBuilder_ = null;
              sctExtension_ = other.sctExtension_;
              bitField0_ = (bitField0_ & ~0x00000010);
              sctExtensionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSctExtensionFieldBuilder() : null;
            } else {
              sctExtensionBuilder_.addAllMessages(other.sctExtension_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.LogEntryType entryType_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.X509_ENTRY;
      /**
       * <code>optional .ct.LogEntryType entry_type = 2;</code>
       */
      public boolean hasEntryType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.LogEntryType entry_type = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntryType getEntryType() {
        return entryType_;
      }
      /**
       * <code>optional .ct.LogEntryType entry_type = 2;</code>
       */
      public Builder setEntryType(org.certificatetransparency.ctlog.proto.Ct.LogEntryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        entryType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.LogEntryType entry_type = 2;</code>
       */
      public Builder clearEntryType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entryType_ = org.certificatetransparency.ctlog.proto.Ct.LogEntryType.X509_ENTRY;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.SignedEntry signedEntry_ = org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SignedEntry, org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder> signedEntryBuilder_;
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public boolean hasSignedEntry() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedEntry getSignedEntry() {
        if (signedEntryBuilder_ == null) {
          return signedEntry_;
        } else {
          return signedEntryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public Builder setSignedEntry(org.certificatetransparency.ctlog.proto.Ct.SignedEntry value) {
        if (signedEntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signedEntry_ = value;
          onChanged();
        } else {
          signedEntryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public Builder setSignedEntry(
          org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder builderForValue) {
        if (signedEntryBuilder_ == null) {
          signedEntry_ = builderForValue.build();
          onChanged();
        } else {
          signedEntryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public Builder mergeSignedEntry(org.certificatetransparency.ctlog.proto.Ct.SignedEntry value) {
        if (signedEntryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              signedEntry_ != org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance()) {
            signedEntry_ =
              org.certificatetransparency.ctlog.proto.Ct.SignedEntry.newBuilder(signedEntry_).mergeFrom(value).buildPartial();
          } else {
            signedEntry_ = value;
          }
          onChanged();
        } else {
          signedEntryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public Builder clearSignedEntry() {
        if (signedEntryBuilder_ == null) {
          signedEntry_ = org.certificatetransparency.ctlog.proto.Ct.SignedEntry.getDefaultInstance();
          onChanged();
        } else {
          signedEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder getSignedEntryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSignedEntryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder getSignedEntryOrBuilder() {
        if (signedEntryBuilder_ != null) {
          return signedEntryBuilder_.getMessageOrBuilder();
        } else {
          return signedEntry_;
        }
      }
      /**
       * <code>optional .ct.SignedEntry signed_entry = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SignedEntry, org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder> 
          getSignedEntryFieldBuilder() {
        if (signedEntryBuilder_ == null) {
          signedEntryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SignedEntry, org.certificatetransparency.ctlog.proto.Ct.SignedEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedEntryOrBuilder>(
                  getSignedEntry(),
                  getParentForChildren(),
                  isClean());
          signedEntry_ = null;
        }
        return signedEntryBuilder_;
      }

      private com.google.protobuf.ByteString extensions_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes extensions = 4;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public boolean hasExtensions() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes extensions = 4;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public com.google.protobuf.ByteString getExtensions() {
        return extensions_;
      }
      /**
       * <code>optional bytes extensions = 4;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public Builder setExtensions(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        extensions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes extensions = 4;</code>
       *
       * <pre>
       * V1 extensions
       * </pre>
       */
      public Builder clearExtensions() {
        bitField0_ = (bitField0_ & ~0x00000008);
        extensions_ = getDefaultInstance().getExtensions();
        onChanged();
        return this;
      }

      private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> sctExtension_ =
        java.util.Collections.emptyList();
      private void ensureSctExtensionIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          sctExtension_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SctExtension>(sctExtension_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SctExtension, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> sctExtensionBuilder_;

      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension> getSctExtensionList() {
        if (sctExtensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sctExtension_);
        } else {
          return sctExtensionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public int getSctExtensionCount() {
        if (sctExtensionBuilder_ == null) {
          return sctExtension_.size();
        } else {
          return sctExtensionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension getSctExtension(int index) {
        if (sctExtensionBuilder_ == null) {
          return sctExtension_.get(index);
        } else {
          return sctExtensionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder setSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension value) {
        if (sctExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSctExtensionIsMutable();
          sctExtension_.set(index, value);
          onChanged();
        } else {
          sctExtensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder setSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder builderForValue) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.set(index, builderForValue.build());
          onChanged();
        } else {
          sctExtensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(org.certificatetransparency.ctlog.proto.Ct.SctExtension value) {
        if (sctExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSctExtensionIsMutable();
          sctExtension_.add(value);
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension value) {
        if (sctExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSctExtensionIsMutable();
          sctExtension_.add(index, value);
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(
          org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder builderForValue) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.add(builderForValue.build());
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addSctExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder builderForValue) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.add(index, builderForValue.build());
          onChanged();
        } else {
          sctExtensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder addAllSctExtension(
          java.lang.Iterable<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtension> values) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sctExtension_);
          onChanged();
        } else {
          sctExtensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder clearSctExtension() {
        if (sctExtensionBuilder_ == null) {
          sctExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          sctExtensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public Builder removeSctExtension(int index) {
        if (sctExtensionBuilder_ == null) {
          ensureSctExtensionIsMutable();
          sctExtension_.remove(index);
          onChanged();
        } else {
          sctExtensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder getSctExtensionBuilder(
          int index) {
        return getSctExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder getSctExtensionOrBuilder(
          int index) {
        if (sctExtensionBuilder_ == null) {
          return sctExtension_.get(index);  } else {
          return sctExtensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
           getSctExtensionOrBuilderList() {
        if (sctExtensionBuilder_ != null) {
          return sctExtensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sctExtension_);
        }
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder addSctExtensionBuilder() {
        return getSctExtensionFieldBuilder().addBuilder(
            org.certificatetransparency.ctlog.proto.Ct.SctExtension.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder addSctExtensionBuilder(
          int index) {
        return getSctExtensionFieldBuilder().addBuilder(
            index, org.certificatetransparency.ctlog.proto.Ct.SctExtension.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SctExtension sct_extension = 5;</code>
       *
       * <pre>
       * V2 extensions &lt;0..2^16-1&gt;. Must be ordered by type (lowest first)
       * </pre>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder> 
           getSctExtensionBuilderList() {
        return getSctExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SctExtension, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder> 
          getSctExtensionFieldBuilder() {
        if (sctExtensionBuilder_ == null) {
          sctExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SctExtension, org.certificatetransparency.ctlog.proto.Ct.SctExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SctExtensionOrBuilder>(
                  sctExtension_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          sctExtension_ = null;
        }
        return sctExtensionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.TimestampedEntry)
    }

    static {
      defaultInstance = new TimestampedEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.TimestampedEntry)
  }

  public interface MerkleTreeLeafOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.MerkleTreeLeaf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the corresponding SCT.
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the corresponding SCT.
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.Version getVersion();

    /**
     * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
     */
    boolean hasType();
    /**
     * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType getType();

    /**
     * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
     */
    boolean hasTimestampedEntry();
    /**
     * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry getTimestampedEntry();
    /**
     * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder getTimestampedEntryOrBuilder();
  }
  /**
   * Protobuf type {@code ct.MerkleTreeLeaf}
   *
   * <pre>
   * Stuff that's hashed into a Merkle leaf.
   * </pre>
   */
  public static final class MerkleTreeLeaf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.MerkleTreeLeaf)
      MerkleTreeLeafOrBuilder {
    // Use MerkleTreeLeaf.newBuilder() to construct.
    private MerkleTreeLeaf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MerkleTreeLeaf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MerkleTreeLeaf defaultInstance;
    public static MerkleTreeLeaf getDefaultInstance() {
      return defaultInstance;
    }

    public MerkleTreeLeaf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MerkleTreeLeaf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.Version value = org.certificatetransparency.ctlog.proto.Ct.Version.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                version_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType value = org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = timestampedEntry_.toBuilder();
              }
              timestampedEntry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestampedEntry_);
                timestampedEntry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleTreeLeaf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleTreeLeaf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.class, org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.Builder.class);
    }

    public static com.google.protobuf.Parser<MerkleTreeLeaf> PARSER =
        new com.google.protobuf.AbstractParser<MerkleTreeLeaf>() {
      public MerkleTreeLeaf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MerkleTreeLeaf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MerkleTreeLeaf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.Version version_;
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the corresponding SCT.
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the corresponding SCT.
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
      return version_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType type_;
    /**
     * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType getType() {
      return type_;
    }

    public static final int TIMESTAMPED_ENTRY_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry timestampedEntry_;
    /**
     * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
     */
    public boolean hasTimestampedEntry() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry getTimestampedEntry() {
      return timestampedEntry_;
    }
    /**
     * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder getTimestampedEntryOrBuilder() {
      return timestampedEntry_;
    }

    private void initFields() {
      version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      type_ = org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType.UNKNOWN_LEAF_TYPE;
      timestampedEntry_ = org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, timestampedEntry_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, timestampedEntry_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.MerkleTreeLeaf}
     *
     * <pre>
     * Stuff that's hashed into a Merkle leaf.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.MerkleTreeLeaf)
        org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeafOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleTreeLeaf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleTreeLeaf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.class, org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimestampedEntryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType.UNKNOWN_LEAF_TYPE;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (timestampedEntryBuilder_ == null) {
          timestampedEntry_ = org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance();
        } else {
          timestampedEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleTreeLeaf_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf build() {
        org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf result = new org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (timestampedEntryBuilder_ == null) {
          result.timestampedEntry_ = timestampedEntry_;
        } else {
          result.timestampedEntry_ = timestampedEntryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTimestampedEntry()) {
          mergeTimestampedEntry(other.getTimestampedEntry());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.MerkleTreeLeaf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.Version version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the corresponding SCT.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the corresponding SCT.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
        return version_;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the corresponding SCT.
       * </pre>
       */
      public Builder setVersion(org.certificatetransparency.ctlog.proto.Ct.Version value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the corresponding SCT.
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType type_ = org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType.UNKNOWN_LEAF_TYPE;
      /**
       * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType getType() {
        return type_;
      }
      /**
       * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
       */
      public Builder setType(org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.MerkleLeafType type = 2 [default = UNKNOWN_LEAF_TYPE];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = org.certificatetransparency.ctlog.proto.Ct.MerkleLeafType.UNKNOWN_LEAF_TYPE;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry timestampedEntry_ = org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder> timestampedEntryBuilder_;
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public boolean hasTimestampedEntry() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry getTimestampedEntry() {
        if (timestampedEntryBuilder_ == null) {
          return timestampedEntry_;
        } else {
          return timestampedEntryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public Builder setTimestampedEntry(org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry value) {
        if (timestampedEntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestampedEntry_ = value;
          onChanged();
        } else {
          timestampedEntryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public Builder setTimestampedEntry(
          org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder builderForValue) {
        if (timestampedEntryBuilder_ == null) {
          timestampedEntry_ = builderForValue.build();
          onChanged();
        } else {
          timestampedEntryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public Builder mergeTimestampedEntry(org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry value) {
        if (timestampedEntryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              timestampedEntry_ != org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance()) {
            timestampedEntry_ =
              org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.newBuilder(timestampedEntry_).mergeFrom(value).buildPartial();
          } else {
            timestampedEntry_ = value;
          }
          onChanged();
        } else {
          timestampedEntryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public Builder clearTimestampedEntry() {
        if (timestampedEntryBuilder_ == null) {
          timestampedEntry_ = org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.getDefaultInstance();
          onChanged();
        } else {
          timestampedEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder getTimestampedEntryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTimestampedEntryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder getTimestampedEntryOrBuilder() {
        if (timestampedEntryBuilder_ != null) {
          return timestampedEntryBuilder_.getMessageOrBuilder();
        } else {
          return timestampedEntry_;
        }
      }
      /**
       * <code>optional .ct.TimestampedEntry timestamped_entry = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder> 
          getTimestampedEntryFieldBuilder() {
        if (timestampedEntryBuilder_ == null) {
          timestampedEntryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.TimestampedEntryOrBuilder>(
                  getTimestampedEntry(),
                  getParentForChildren(),
                  isClean());
          timestampedEntry_ = null;
        }
        return timestampedEntryBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.MerkleTreeLeaf)
    }

    static {
      defaultInstance = new MerkleTreeLeaf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.MerkleTreeLeaf)
  }

  public interface MerkleAuditProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.MerkleAuditProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    boolean hasVersion();
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.Version getVersion();

    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogID getId();
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder();

    /**
     * <code>optional int64 tree_size = 3;</code>
     */
    boolean hasTreeSize();
    /**
     * <code>optional int64 tree_size = 3;</code>
     */
    long getTreeSize();

    /**
     * <code>optional uint64 timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 4;</code>
     */
    long getTimestamp();

    /**
     * <code>optional int64 leaf_index = 5;</code>
     */
    boolean hasLeafIndex();
    /**
     * <code>optional int64 leaf_index = 5;</code>
     */
    long getLeafIndex();

    /**
     * <code>repeated bytes path_node = 6;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getPathNodeList();
    /**
     * <code>repeated bytes path_node = 6;</code>
     */
    int getPathNodeCount();
    /**
     * <code>repeated bytes path_node = 6;</code>
     */
    com.google.protobuf.ByteString getPathNode(int index);

    /**
     * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
     */
    boolean hasTreeHeadSignature();
    /**
     * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getTreeHeadSignature();
    /**
     * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getTreeHeadSignatureOrBuilder();
  }
  /**
   * Protobuf type {@code ct.MerkleAuditProof}
   *
   * <pre>
   * TODO(benl): No longer needed?
   * Used by cpp/client/ct: it assembles the one from the I-D JSON
   * protocol.
   * Used by cpp/server/blob-server: it uses one to call a variant of
   * LogLookup::AuditProof.
   * </pre>
   */
  public static final class MerkleAuditProof extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.MerkleAuditProof)
      MerkleAuditProofOrBuilder {
    // Use MerkleAuditProof.newBuilder() to construct.
    private MerkleAuditProof(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MerkleAuditProof(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MerkleAuditProof defaultInstance;
    public static MerkleAuditProof getDefaultInstance() {
      return defaultInstance;
    }

    public MerkleAuditProof getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MerkleAuditProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.Version value = org.certificatetransparency.ctlog.proto.Ct.Version.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                version_ = value;
              }
              break;
            }
            case 18: {
              org.certificatetransparency.ctlog.proto.Ct.LogID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.LogID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              treeSize_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timestamp_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              leafIndex_ = input.readInt64();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                pathNode_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000020;
              }
              pathNode_.add(input.readBytes());
              break;
            }
            case 58: {
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = treeHeadSignature_.toBuilder();
              }
              treeHeadSignature_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(treeHeadSignature_);
                treeHeadSignature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          pathNode_ = java.util.Collections.unmodifiableList(pathNode_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleAuditProof_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleAuditProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.class, org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.Builder.class);
    }

    public static com.google.protobuf.Parser<MerkleAuditProof> PARSER =
        new com.google.protobuf.AbstractParser<MerkleAuditProof>() {
      public MerkleAuditProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MerkleAuditProof(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MerkleAuditProof> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.Version version_;
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
      return version_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.LogID id_;
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogID getId() {
      return id_;
    }
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder() {
      return id_;
    }

    public static final int TREE_SIZE_FIELD_NUMBER = 3;
    private long treeSize_;
    /**
     * <code>optional int64 tree_size = 3;</code>
     */
    public boolean hasTreeSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 tree_size = 3;</code>
     */
    public long getTreeSize() {
      return treeSize_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 timestamp = 4;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int LEAF_INDEX_FIELD_NUMBER = 5;
    private long leafIndex_;
    /**
     * <code>optional int64 leaf_index = 5;</code>
     */
    public boolean hasLeafIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 leaf_index = 5;</code>
     */
    public long getLeafIndex() {
      return leafIndex_;
    }

    public static final int PATH_NODE_FIELD_NUMBER = 6;
    private java.util.List<com.google.protobuf.ByteString> pathNode_;
    /**
     * <code>repeated bytes path_node = 6;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPathNodeList() {
      return pathNode_;
    }
    /**
     * <code>repeated bytes path_node = 6;</code>
     */
    public int getPathNodeCount() {
      return pathNode_.size();
    }
    /**
     * <code>repeated bytes path_node = 6;</code>
     */
    public com.google.protobuf.ByteString getPathNode(int index) {
      return pathNode_.get(index);
    }

    public static final int TREE_HEAD_SIGNATURE_FIELD_NUMBER = 7;
    private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned treeHeadSignature_;
    /**
     * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
     */
    public boolean hasTreeHeadSignature() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getTreeHeadSignature() {
      return treeHeadSignature_;
    }
    /**
     * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getTreeHeadSignatureOrBuilder() {
      return treeHeadSignature_;
    }

    private void initFields() {
      version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      treeSize_ = 0L;
      timestamp_ = 0L;
      leafIndex_ = 0L;
      pathNode_ = java.util.Collections.emptyList();
      treeHeadSignature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, treeSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, timestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, leafIndex_);
      }
      for (int i = 0; i < pathNode_.size(); i++) {
        output.writeBytes(6, pathNode_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, treeHeadSignature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, treeSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, timestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, leafIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pathNode_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(pathNode_.get(i));
        }
        size += dataSize;
        size += 1 * getPathNodeList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, treeHeadSignature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.MerkleAuditProof}
     *
     * <pre>
     * TODO(benl): No longer needed?
     * Used by cpp/client/ct: it assembles the one from the I-D JSON
     * protocol.
     * Used by cpp/server/blob-server: it uses one to call a variant of
     * LogLookup::AuditProof.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.MerkleAuditProof)
        org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleAuditProof_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleAuditProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.class, org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdFieldBuilder();
          getTreeHeadSignatureFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (idBuilder_ == null) {
          id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        treeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        leafIndex_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        pathNode_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        if (treeHeadSignatureBuilder_ == null) {
          treeHeadSignature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
        } else {
          treeHeadSignatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_MerkleAuditProof_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof build() {
        org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof result = new org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.treeSize_ = treeSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.leafIndex_ = leafIndex_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          pathNode_ = java.util.Collections.unmodifiableList(pathNode_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.pathNode_ = pathNode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (treeHeadSignatureBuilder_ == null) {
          result.treeHeadSignature_ = treeHeadSignature_;
        } else {
          result.treeHeadSignature_ = treeHeadSignatureBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasTreeSize()) {
          setTreeSize(other.getTreeSize());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLeafIndex()) {
          setLeafIndex(other.getLeafIndex());
        }
        if (!other.pathNode_.isEmpty()) {
          if (pathNode_.isEmpty()) {
            pathNode_ = other.pathNode_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePathNodeIsMutable();
            pathNode_.addAll(other.pathNode_);
          }
          onChanged();
        }
        if (other.hasTreeHeadSignature()) {
          mergeTreeHeadSignature(other.getTreeHeadSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.MerkleAuditProof) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.Version version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
        return version_;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public Builder setVersion(org.certificatetransparency.ctlog.proto.Ct.Version value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.LogID id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder> idBuilder_;
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogID getId() {
        if (idBuilder_ == null) {
          return id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder setId(org.certificatetransparency.ctlog.proto.Ct.LogID value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder setId(
          org.certificatetransparency.ctlog.proto.Ct.LogID.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder mergeId(org.certificatetransparency.ctlog.proto.Ct.LogID value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              id_ != org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance()) {
            id_ =
              org.certificatetransparency.ctlog.proto.Ct.LogID.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
          onChanged();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogID.Builder getIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_;
        }
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private long treeSize_ ;
      /**
       * <code>optional int64 tree_size = 3;</code>
       */
      public boolean hasTreeSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 tree_size = 3;</code>
       */
      public long getTreeSize() {
        return treeSize_;
      }
      /**
       * <code>optional int64 tree_size = 3;</code>
       */
      public Builder setTreeSize(long value) {
        bitField0_ |= 0x00000004;
        treeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tree_size = 3;</code>
       */
      public Builder clearTreeSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        treeSize_ = 0L;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 timestamp = 4;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 4;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long leafIndex_ ;
      /**
       * <code>optional int64 leaf_index = 5;</code>
       */
      public boolean hasLeafIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 leaf_index = 5;</code>
       */
      public long getLeafIndex() {
        return leafIndex_;
      }
      /**
       * <code>optional int64 leaf_index = 5;</code>
       */
      public Builder setLeafIndex(long value) {
        bitField0_ |= 0x00000010;
        leafIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 leaf_index = 5;</code>
       */
      public Builder clearLeafIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        leafIndex_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> pathNode_ = java.util.Collections.emptyList();
      private void ensurePathNodeIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          pathNode_ = new java.util.ArrayList<com.google.protobuf.ByteString>(pathNode_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPathNodeList() {
        return java.util.Collections.unmodifiableList(pathNode_);
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public int getPathNodeCount() {
        return pathNode_.size();
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public com.google.protobuf.ByteString getPathNode(int index) {
        return pathNode_.get(index);
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public Builder setPathNode(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePathNodeIsMutable();
        pathNode_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public Builder addPathNode(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePathNodeIsMutable();
        pathNode_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public Builder addAllPathNode(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensurePathNodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pathNode_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes path_node = 6;</code>
       */
      public Builder clearPathNode() {
        pathNode_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned treeHeadSignature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder> treeHeadSignatureBuilder_;
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public boolean hasTreeHeadSignature() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getTreeHeadSignature() {
        if (treeHeadSignatureBuilder_ == null) {
          return treeHeadSignature_;
        } else {
          return treeHeadSignatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public Builder setTreeHeadSignature(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned value) {
        if (treeHeadSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          treeHeadSignature_ = value;
          onChanged();
        } else {
          treeHeadSignatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public Builder setTreeHeadSignature(
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder builderForValue) {
        if (treeHeadSignatureBuilder_ == null) {
          treeHeadSignature_ = builderForValue.build();
          onChanged();
        } else {
          treeHeadSignatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public Builder mergeTreeHeadSignature(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned value) {
        if (treeHeadSignatureBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              treeHeadSignature_ != org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance()) {
            treeHeadSignature_ =
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.newBuilder(treeHeadSignature_).mergeFrom(value).buildPartial();
          } else {
            treeHeadSignature_ = value;
          }
          onChanged();
        } else {
          treeHeadSignatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public Builder clearTreeHeadSignature() {
        if (treeHeadSignatureBuilder_ == null) {
          treeHeadSignature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
          onChanged();
        } else {
          treeHeadSignatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder getTreeHeadSignatureBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTreeHeadSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getTreeHeadSignatureOrBuilder() {
        if (treeHeadSignatureBuilder_ != null) {
          return treeHeadSignatureBuilder_.getMessageOrBuilder();
        } else {
          return treeHeadSignature_;
        }
      }
      /**
       * <code>optional .ct.DigitallySigned tree_head_signature = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder> 
          getTreeHeadSignatureFieldBuilder() {
        if (treeHeadSignatureBuilder_ == null) {
          treeHeadSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder>(
                  getTreeHeadSignature(),
                  getParentForChildren(),
                  isClean());
          treeHeadSignature_ = null;
        }
        return treeHeadSignatureBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.MerkleAuditProof)
    }

    static {
      defaultInstance = new MerkleAuditProof(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.MerkleAuditProof)
  }

  public interface ShortMerkleAuditProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.ShortMerkleAuditProof)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 leaf_index = 1;</code>
     */
    boolean hasLeafIndex();
    /**
     * <code>required int64 leaf_index = 1;</code>
     */
    long getLeafIndex();

    /**
     * <code>repeated bytes path_node = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getPathNodeList();
    /**
     * <code>repeated bytes path_node = 2;</code>
     */
    int getPathNodeCount();
    /**
     * <code>repeated bytes path_node = 2;</code>
     */
    com.google.protobuf.ByteString getPathNode(int index);
  }
  /**
   * Protobuf type {@code ct.ShortMerkleAuditProof}
   */
  public static final class ShortMerkleAuditProof extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.ShortMerkleAuditProof)
      ShortMerkleAuditProofOrBuilder {
    // Use ShortMerkleAuditProof.newBuilder() to construct.
    private ShortMerkleAuditProof(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShortMerkleAuditProof(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShortMerkleAuditProof defaultInstance;
    public static ShortMerkleAuditProof getDefaultInstance() {
      return defaultInstance;
    }

    public ShortMerkleAuditProof getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShortMerkleAuditProof(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              leafIndex_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                pathNode_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              pathNode_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          pathNode_ = java.util.Collections.unmodifiableList(pathNode_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ShortMerkleAuditProof_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ShortMerkleAuditProof_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.class, org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.Builder.class);
    }

    public static com.google.protobuf.Parser<ShortMerkleAuditProof> PARSER =
        new com.google.protobuf.AbstractParser<ShortMerkleAuditProof>() {
      public ShortMerkleAuditProof parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShortMerkleAuditProof(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShortMerkleAuditProof> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LEAF_INDEX_FIELD_NUMBER = 1;
    private long leafIndex_;
    /**
     * <code>required int64 leaf_index = 1;</code>
     */
    public boolean hasLeafIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 leaf_index = 1;</code>
     */
    public long getLeafIndex() {
      return leafIndex_;
    }

    public static final int PATH_NODE_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> pathNode_;
    /**
     * <code>repeated bytes path_node = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPathNodeList() {
      return pathNode_;
    }
    /**
     * <code>repeated bytes path_node = 2;</code>
     */
    public int getPathNodeCount() {
      return pathNode_.size();
    }
    /**
     * <code>repeated bytes path_node = 2;</code>
     */
    public com.google.protobuf.ByteString getPathNode(int index) {
      return pathNode_.get(index);
    }

    private void initFields() {
      leafIndex_ = 0L;
      pathNode_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLeafIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, leafIndex_);
      }
      for (int i = 0; i < pathNode_.size(); i++) {
        output.writeBytes(2, pathNode_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, leafIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pathNode_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(pathNode_.get(i));
        }
        size += dataSize;
        size += 1 * getPathNodeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.ShortMerkleAuditProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.ShortMerkleAuditProof)
        org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProofOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ShortMerkleAuditProof_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ShortMerkleAuditProof_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.class, org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        leafIndex_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        pathNode_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ShortMerkleAuditProof_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof build() {
        org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof result = new org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leafIndex_ = leafIndex_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          pathNode_ = java.util.Collections.unmodifiableList(pathNode_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.pathNode_ = pathNode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof.getDefaultInstance()) return this;
        if (other.hasLeafIndex()) {
          setLeafIndex(other.getLeafIndex());
        }
        if (!other.pathNode_.isEmpty()) {
          if (pathNode_.isEmpty()) {
            pathNode_ = other.pathNode_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePathNodeIsMutable();
            pathNode_.addAll(other.pathNode_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLeafIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.ShortMerkleAuditProof) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long leafIndex_ ;
      /**
       * <code>required int64 leaf_index = 1;</code>
       */
      public boolean hasLeafIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 leaf_index = 1;</code>
       */
      public long getLeafIndex() {
        return leafIndex_;
      }
      /**
       * <code>required int64 leaf_index = 1;</code>
       */
      public Builder setLeafIndex(long value) {
        bitField0_ |= 0x00000001;
        leafIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 leaf_index = 1;</code>
       */
      public Builder clearLeafIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leafIndex_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> pathNode_ = java.util.Collections.emptyList();
      private void ensurePathNodeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          pathNode_ = new java.util.ArrayList<com.google.protobuf.ByteString>(pathNode_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPathNodeList() {
        return java.util.Collections.unmodifiableList(pathNode_);
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public int getPathNodeCount() {
        return pathNode_.size();
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public com.google.protobuf.ByteString getPathNode(int index) {
        return pathNode_.get(index);
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public Builder setPathNode(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePathNodeIsMutable();
        pathNode_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public Builder addPathNode(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePathNodeIsMutable();
        pathNode_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public Builder addAllPathNode(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensurePathNodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pathNode_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes path_node = 2;</code>
       */
      public Builder clearPathNode() {
        pathNode_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.ShortMerkleAuditProof)
    }

    static {
      defaultInstance = new ShortMerkleAuditProof(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.ShortMerkleAuditProof)
  }

  public interface LoggedEntryPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.LoggedEntryPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 sequence_number = 1;</code>
     */
    boolean hasSequenceNumber();
    /**
     * <code>optional int64 sequence_number = 1;</code>
     */
    long getSequenceNumber();

    /**
     * <code>optional bytes merkle_leaf_hash = 2;</code>
     */
    boolean hasMerkleLeafHash();
    /**
     * <code>optional bytes merkle_leaf_hash = 2;</code>
     */
    com.google.protobuf.ByteString getMerkleLeafHash();

    /**
     * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
     */
    boolean hasContents();
    /**
     * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents getContents();
    /**
     * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder getContentsOrBuilder();
  }
  /**
   * Protobuf type {@code ct.LoggedEntryPB}
   *
   * <pre>
   * TODO(alcutter): Come up with a better name :/
   * </pre>
   */
  public static final class LoggedEntryPB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.LoggedEntryPB)
      LoggedEntryPBOrBuilder {
    // Use LoggedEntryPB.newBuilder() to construct.
    private LoggedEntryPB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoggedEntryPB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoggedEntryPB defaultInstance;
    public static LoggedEntryPB getDefaultInstance() {
      return defaultInstance;
    }

    public LoggedEntryPB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoggedEntryPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceNumber_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              merkleLeafHash_ = input.readBytes();
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = contents_.toBuilder();
              }
              contents_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(contents_);
                contents_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.class, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Builder.class);
    }

    public static com.google.protobuf.Parser<LoggedEntryPB> PARSER =
        new com.google.protobuf.AbstractParser<LoggedEntryPB>() {
      public LoggedEntryPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoggedEntryPB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoggedEntryPB> getParserForType() {
      return PARSER;
    }

    public interface ContentsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ct.LoggedEntryPB.Contents)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       */
      boolean hasSct();
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       */
      org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getSct();
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       */
      org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder getSctOrBuilder();

      /**
       * <code>optional .ct.LogEntry entry = 2;</code>
       */
      boolean hasEntry();
      /**
       * <code>optional .ct.LogEntry entry = 2;</code>
       */
      org.certificatetransparency.ctlog.proto.Ct.LogEntry getEntry();
      /**
       * <code>optional .ct.LogEntry entry = 2;</code>
       */
      org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder getEntryOrBuilder();
    }
    /**
     * Protobuf type {@code ct.LoggedEntryPB.Contents}
     */
    public static final class Contents extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:ct.LoggedEntryPB.Contents)
        ContentsOrBuilder {
      // Use Contents.newBuilder() to construct.
      private Contents(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Contents(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Contents defaultInstance;
      public static Contents getDefaultInstance() {
        return defaultInstance;
      }

      public Contents getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Contents(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = sct_.toBuilder();
                }
                sct_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sct_);
                  sct_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = entry_.toBuilder();
                }
                entry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.LogEntry.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(entry_);
                  entry_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_Contents_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_Contents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.class, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder.class);
      }

      public static com.google.protobuf.Parser<Contents> PARSER =
          new com.google.protobuf.AbstractParser<Contents>() {
        public Contents parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Contents(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Contents> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SCT_FIELD_NUMBER = 1;
      private org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp sct_;
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       */
      public boolean hasSct() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getSct() {
        return sct_;
      }
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder getSctOrBuilder() {
        return sct_;
      }

      public static final int ENTRY_FIELD_NUMBER = 2;
      private org.certificatetransparency.ctlog.proto.Ct.LogEntry entry_;
      /**
       * <code>optional .ct.LogEntry entry = 2;</code>
       */
      public boolean hasEntry() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.LogEntry entry = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntry getEntry() {
        return entry_;
      }
      /**
       * <code>optional .ct.LogEntry entry = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder getEntryOrBuilder() {
        return entry_;
      }

      private void initFields() {
        sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
        entry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, sct_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, entry_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, sct_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, entry_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ct.LoggedEntryPB.Contents}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ct.LoggedEntryPB.Contents)
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_Contents_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_Contents_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.class, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder.class);
        }

        // Construct using org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSctFieldBuilder();
            getEntryFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (sctBuilder_ == null) {
            sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
          } else {
            sctBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (entryBuilder_ == null) {
            entry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
          } else {
            entryBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_Contents_descriptor;
        }

        public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents getDefaultInstanceForType() {
          return org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance();
        }

        public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents build() {
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents buildPartial() {
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents result = new org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (sctBuilder_ == null) {
            result.sct_ = sct_;
          } else {
            result.sct_ = sctBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (entryBuilder_ == null) {
            result.entry_ = entry_;
          } else {
            result.entry_ = entryBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents) {
            return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents other) {
          if (other == org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance()) return this;
          if (other.hasSct()) {
            mergeSct(other.getSct());
          }
          if (other.hasEntry()) {
            mergeEntry(other.getEntry());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder> sctBuilder_;
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public boolean hasSct() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getSct() {
          if (sctBuilder_ == null) {
            return sct_;
          } else {
            return sctBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public Builder setSct(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp value) {
          if (sctBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sct_ = value;
            onChanged();
          } else {
            sctBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public Builder setSct(
            org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder builderForValue) {
          if (sctBuilder_ == null) {
            sct_ = builderForValue.build();
            onChanged();
          } else {
            sctBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public Builder mergeSct(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp value) {
          if (sctBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                sct_ != org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance()) {
              sct_ =
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.newBuilder(sct_).mergeFrom(value).buildPartial();
            } else {
              sct_ = value;
            }
            onChanged();
          } else {
            sctBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public Builder clearSct() {
          if (sctBuilder_ == null) {
            sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
            onChanged();
          } else {
            sctBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder getSctBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getSctFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder getSctOrBuilder() {
          if (sctBuilder_ != null) {
            return sctBuilder_.getMessageOrBuilder();
          } else {
            return sct_;
          }
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder> 
            getSctFieldBuilder() {
          if (sctBuilder_ == null) {
            sctBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder>(
                    getSct(),
                    getParentForChildren(),
                    isClean());
            sct_ = null;
          }
          return sctBuilder_;
        }

        private org.certificatetransparency.ctlog.proto.Ct.LogEntry entry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.certificatetransparency.ctlog.proto.Ct.LogEntry, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder> entryBuilder_;
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public boolean hasEntry() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public org.certificatetransparency.ctlog.proto.Ct.LogEntry getEntry() {
          if (entryBuilder_ == null) {
            return entry_;
          } else {
            return entryBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public Builder setEntry(org.certificatetransparency.ctlog.proto.Ct.LogEntry value) {
          if (entryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            entry_ = value;
            onChanged();
          } else {
            entryBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public Builder setEntry(
            org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder builderForValue) {
          if (entryBuilder_ == null) {
            entry_ = builderForValue.build();
            onChanged();
          } else {
            entryBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public Builder mergeEntry(org.certificatetransparency.ctlog.proto.Ct.LogEntry value) {
          if (entryBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                entry_ != org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance()) {
              entry_ =
                org.certificatetransparency.ctlog.proto.Ct.LogEntry.newBuilder(entry_).mergeFrom(value).buildPartial();
            } else {
              entry_ = value;
            }
            onChanged();
          } else {
            entryBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public Builder clearEntry() {
          if (entryBuilder_ == null) {
            entry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
            onChanged();
          } else {
            entryBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder getEntryBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getEntryFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        public org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder getEntryOrBuilder() {
          if (entryBuilder_ != null) {
            return entryBuilder_.getMessageOrBuilder();
          } else {
            return entry_;
          }
        }
        /**
         * <code>optional .ct.LogEntry entry = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.certificatetransparency.ctlog.proto.Ct.LogEntry, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder> 
            getEntryFieldBuilder() {
          if (entryBuilder_ == null) {
            entryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.certificatetransparency.ctlog.proto.Ct.LogEntry, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder>(
                    getEntry(),
                    getParentForChildren(),
                    isClean());
            entry_ = null;
          }
          return entryBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:ct.LoggedEntryPB.Contents)
      }

      static {
        defaultInstance = new Contents(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ct.LoggedEntryPB.Contents)
    }

    private int bitField0_;
    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 1;
    private long sequenceNumber_;
    /**
     * <code>optional int64 sequence_number = 1;</code>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 sequence_number = 1;</code>
     */
    public long getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int MERKLE_LEAF_HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString merkleLeafHash_;
    /**
     * <code>optional bytes merkle_leaf_hash = 2;</code>
     */
    public boolean hasMerkleLeafHash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes merkle_leaf_hash = 2;</code>
     */
    public com.google.protobuf.ByteString getMerkleLeafHash() {
      return merkleLeafHash_;
    }

    public static final int CONTENTS_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents contents_;
    /**
     * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
     */
    public boolean hasContents() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents getContents() {
      return contents_;
    }
    /**
     * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder getContentsOrBuilder() {
      return contents_;
    }

    private void initFields() {
      sequenceNumber_ = 0L;
      merkleLeafHash_ = com.google.protobuf.ByteString.EMPTY;
      contents_ = org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasContents()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, merkleLeafHash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, contents_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, merkleLeafHash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, contents_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.LoggedEntryPB}
     *
     * <pre>
     * TODO(alcutter): Come up with a better name :/
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.LoggedEntryPB)
        org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.class, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getContentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceNumber_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        merkleLeafHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (contentsBuilder_ == null) {
          contents_ = org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance();
        } else {
          contentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_LoggedEntryPB_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB build() {
        org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB result = new org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.merkleLeafHash_ = merkleLeafHash_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (contentsBuilder_ == null) {
          result.contents_ = contents_;
        } else {
          result.contents_ = contentsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.getDefaultInstance()) return this;
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasMerkleLeafHash()) {
          setMerkleLeafHash(other.getMerkleLeafHash());
        }
        if (other.hasContents()) {
          mergeContents(other.getContents());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasContents()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long sequenceNumber_ ;
      /**
       * <code>optional int64 sequence_number = 1;</code>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 sequence_number = 1;</code>
       */
      public long getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>optional int64 sequence_number = 1;</code>
       */
      public Builder setSequenceNumber(long value) {
        bitField0_ |= 0x00000001;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sequence_number = 1;</code>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNumber_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString merkleLeafHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      public boolean hasMerkleLeafHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      public com.google.protobuf.ByteString getMerkleLeafHash() {
        return merkleLeafHash_;
      }
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      public Builder setMerkleLeafHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        merkleLeafHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      public Builder clearMerkleLeafHash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        merkleLeafHash_ = getDefaultInstance().getMerkleLeafHash();
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents contents_ = org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder> contentsBuilder_;
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public boolean hasContents() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents getContents() {
        if (contentsBuilder_ == null) {
          return contents_;
        } else {
          return contentsBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public Builder setContents(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents value) {
        if (contentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          contents_ = value;
          onChanged();
        } else {
          contentsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public Builder setContents(
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder builderForValue) {
        if (contentsBuilder_ == null) {
          contents_ = builderForValue.build();
          onChanged();
        } else {
          contentsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public Builder mergeContents(org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents value) {
        if (contentsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              contents_ != org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance()) {
            contents_ =
              org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.newBuilder(contents_).mergeFrom(value).buildPartial();
          } else {
            contents_ = value;
          }
          onChanged();
        } else {
          contentsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public Builder clearContents() {
        if (contentsBuilder_ == null) {
          contents_ = org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.getDefaultInstance();
          onChanged();
        } else {
          contentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder getContentsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getContentsFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder getContentsOrBuilder() {
        if (contentsBuilder_ != null) {
          return contentsBuilder_.getMessageOrBuilder();
        } else {
          return contents_;
        }
      }
      /**
       * <code>required .ct.LoggedEntryPB.Contents contents = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder> 
          getContentsFieldBuilder() {
        if (contentsBuilder_ == null) {
          contentsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.Contents.Builder, org.certificatetransparency.ctlog.proto.Ct.LoggedEntryPB.ContentsOrBuilder>(
                  getContents(),
                  getParentForChildren(),
                  isClean());
          contents_ = null;
        }
        return contentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.LoggedEntryPB)
    }

    static {
      defaultInstance = new LoggedEntryPB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.LoggedEntryPB)
  }

  public interface SthExtensionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SthExtension)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 sth_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    boolean hasSthExtensionType();
    /**
     * <code>optional uint32 sth_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    int getSthExtensionType();

    /**
     * <code>optional bytes sth_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    boolean hasSthExtensionData();
    /**
     * <code>optional bytes sth_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    com.google.protobuf.ByteString getSthExtensionData();
  }
  /**
   * Protobuf type {@code ct.SthExtension}
   */
  public static final class SthExtension extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SthExtension)
      SthExtensionOrBuilder {
    // Use SthExtension.newBuilder() to construct.
    private SthExtension(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SthExtension(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SthExtension defaultInstance;
    public static SthExtension getDefaultInstance() {
      return defaultInstance;
    }

    public SthExtension getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SthExtension(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sthExtensionType_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              sthExtensionData_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SthExtension_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SthExtension_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SthExtension.class, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder.class);
    }

    public static com.google.protobuf.Parser<SthExtension> PARSER =
        new com.google.protobuf.AbstractParser<SthExtension>() {
      public SthExtension parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SthExtension(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SthExtension> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STH_EXTENSION_TYPE_FIELD_NUMBER = 1;
    private int sthExtensionType_;
    /**
     * <code>optional uint32 sth_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    public boolean hasSthExtensionType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 sth_extension_type = 1;</code>
     *
     * <pre>
     * Valid range is 0-65534
     * </pre>
     */
    public int getSthExtensionType() {
      return sthExtensionType_;
    }

    public static final int STH_EXTENSION_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString sthExtensionData_;
    /**
     * <code>optional bytes sth_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    public boolean hasSthExtensionData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes sth_extension_data = 2;</code>
     *
     * <pre>
     * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
     * </pre>
     */
    public com.google.protobuf.ByteString getSthExtensionData() {
      return sthExtensionData_;
    }

    private void initFields() {
      sthExtensionType_ = 0;
      sthExtensionData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sthExtensionType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, sthExtensionData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sthExtensionType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, sthExtensionData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SthExtension parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SthExtension prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SthExtension}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SthExtension)
        org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SthExtension_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SthExtension_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SthExtension.class, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SthExtension.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sthExtensionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sthExtensionData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SthExtension_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SthExtension getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SthExtension.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SthExtension build() {
        org.certificatetransparency.ctlog.proto.Ct.SthExtension result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SthExtension buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SthExtension result = new org.certificatetransparency.ctlog.proto.Ct.SthExtension(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sthExtensionType_ = sthExtensionType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sthExtensionData_ = sthExtensionData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SthExtension) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SthExtension)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SthExtension other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SthExtension.getDefaultInstance()) return this;
        if (other.hasSthExtensionType()) {
          setSthExtensionType(other.getSthExtensionType());
        }
        if (other.hasSthExtensionData()) {
          setSthExtensionData(other.getSthExtensionData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SthExtension parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SthExtension) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sthExtensionType_ ;
      /**
       * <code>optional uint32 sth_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public boolean hasSthExtensionType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 sth_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public int getSthExtensionType() {
        return sthExtensionType_;
      }
      /**
       * <code>optional uint32 sth_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public Builder setSthExtensionType(int value) {
        bitField0_ |= 0x00000001;
        sthExtensionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sth_extension_type = 1;</code>
       *
       * <pre>
       * Valid range is 0-65534
       * </pre>
       */
      public Builder clearSthExtensionType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sthExtensionType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sthExtensionData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes sth_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public boolean hasSthExtensionData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes sth_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getSthExtensionData() {
        return sthExtensionData_;
      }
      /**
       * <code>optional bytes sth_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public Builder setSthExtensionData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sthExtensionData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes sth_extension_data = 2;</code>
       *
       * <pre>
       * Data is opaque and type specific &lt;0..2^16-1&gt; bytes
       * </pre>
       */
      public Builder clearSthExtensionData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sthExtensionData_ = getDefaultInstance().getSthExtensionData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.SthExtension)
    }

    static {
      defaultInstance = new SthExtension(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SthExtension)
  }

  public interface SignedTreeHeadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SignedTreeHead)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the tree head signature.
     * (Note that each leaf has its own version, so a V2 tree
     * can contain V1 leaves, too.
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the tree head signature.
     * (Note that each leaf has its own version, so a V2 tree
     * can contain V1 leaves, too.
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.Version getVersion();

    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogID getId();
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder();

    /**
     * <code>optional uint64 timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 3;</code>
     */
    long getTimestamp();

    /**
     * <code>optional int64 tree_size = 4;</code>
     */
    boolean hasTreeSize();
    /**
     * <code>optional int64 tree_size = 4;</code>
     */
    long getTreeSize();

    /**
     * <code>optional bytes sha256_root_hash = 5;</code>
     */
    boolean hasSha256RootHash();
    /**
     * <code>optional bytes sha256_root_hash = 5;</code>
     */
    com.google.protobuf.ByteString getSha256RootHash();

    /**
     * <code>optional .ct.DigitallySigned signature = 6;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional .ct.DigitallySigned signature = 6;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getSignature();
    /**
     * <code>optional .ct.DigitallySigned signature = 6;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getSignatureOrBuilder();

    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    java.util.List<org.certificatetransparency.ctlog.proto.Ct.SthExtension> 
        getSthExtensionList();
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.SthExtension getSthExtension(int index);
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    int getSthExtensionCount();
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder> 
        getSthExtensionOrBuilderList();
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder getSthExtensionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ct.SignedTreeHead}
   */
  public static final class SignedTreeHead extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SignedTreeHead)
      SignedTreeHeadOrBuilder {
    // Use SignedTreeHead.newBuilder() to construct.
    private SignedTreeHead(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignedTreeHead(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignedTreeHead defaultInstance;
    public static SignedTreeHead getDefaultInstance() {
      return defaultInstance;
    }

    public SignedTreeHead getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignedTreeHead(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.certificatetransparency.ctlog.proto.Ct.Version value = org.certificatetransparency.ctlog.proto.Ct.Version.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                version_ = value;
              }
              break;
            }
            case 18: {
              org.certificatetransparency.ctlog.proto.Ct.LogID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.LogID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              treeSize_ = input.readInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              sha256RootHash_ = input.readBytes();
              break;
            }
            case 50: {
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sthExtension_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SthExtension>();
                mutable_bitField0_ |= 0x00000040;
              }
              sthExtension_.add(input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SthExtension.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sthExtension_ = java.util.Collections.unmodifiableList(sthExtension_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedTreeHead_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedTreeHead_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.class, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder.class);
    }

    public static com.google.protobuf.Parser<SignedTreeHead> PARSER =
        new com.google.protobuf.AbstractParser<SignedTreeHead>() {
      public SignedTreeHead parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedTreeHead(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignedTreeHead> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.Version version_;
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the tree head signature.
     * (Note that each leaf has its own version, so a V2 tree
     * can contain V1 leaves, too.
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
     *
     * <pre>
     * The version of the tree head signature.
     * (Note that each leaf has its own version, so a V2 tree
     * can contain V1 leaves, too.
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
      return version_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private org.certificatetransparency.ctlog.proto.Ct.LogID id_;
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogID getId() {
      return id_;
    }
    /**
     * <code>optional .ct.LogID id = 2;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder() {
      return id_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    /**
     * <code>optional uint64 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 timestamp = 3;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int TREE_SIZE_FIELD_NUMBER = 4;
    private long treeSize_;
    /**
     * <code>optional int64 tree_size = 4;</code>
     */
    public boolean hasTreeSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 tree_size = 4;</code>
     */
    public long getTreeSize() {
      return treeSize_;
    }

    public static final int SHA256_ROOT_HASH_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString sha256RootHash_;
    /**
     * <code>optional bytes sha256_root_hash = 5;</code>
     */
    public boolean hasSha256RootHash() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes sha256_root_hash = 5;</code>
     */
    public com.google.protobuf.ByteString getSha256RootHash() {
      return sha256RootHash_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 6;
    private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned signature_;
    /**
     * <code>optional .ct.DigitallySigned signature = 6;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .ct.DigitallySigned signature = 6;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getSignature() {
      return signature_;
    }
    /**
     * <code>optional .ct.DigitallySigned signature = 6;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getSignatureOrBuilder() {
      return signature_;
    }

    public static final int STH_EXTENSION_FIELD_NUMBER = 7;
    private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SthExtension> sthExtension_;
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SthExtension> getSthExtensionList() {
      return sthExtension_;
    }
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder> 
        getSthExtensionOrBuilderList() {
      return sthExtension_;
    }
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    public int getSthExtensionCount() {
      return sthExtension_.size();
    }
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SthExtension getSthExtension(int index) {
      return sthExtension_.get(index);
    }
    /**
     * <code>repeated .ct.SthExtension sth_extension = 7;</code>
     *
     * <pre>
     * Only supported in V2. &lt;0..2^16-1&gt;
     * </pre>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder getSthExtensionOrBuilder(
        int index) {
      return sthExtension_.get(index);
    }

    private void initFields() {
      version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      timestamp_ = 0L;
      treeSize_ = 0L;
      sha256RootHash_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
      sthExtension_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, treeSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, sha256RootHash_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, signature_);
      }
      for (int i = 0; i < sthExtension_.size(); i++) {
        output.writeMessage(7, sthExtension_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, treeSize_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, sha256RootHash_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, signature_);
      }
      for (int i = 0; i < sthExtension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, sthExtension_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SignedTreeHead}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SignedTreeHead)
        org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedTreeHead_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedTreeHead_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.class, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdFieldBuilder();
          getSignatureFieldBuilder();
          getSthExtensionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (idBuilder_ == null) {
          id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        treeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        sha256RootHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (signatureBuilder_ == null) {
          signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (sthExtensionBuilder_ == null) {
          sthExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          sthExtensionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SignedTreeHead_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead build() {
        org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead result = new org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.treeSize_ = treeSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sha256RootHash_ = sha256RootHash_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (signatureBuilder_ == null) {
          result.signature_ = signature_;
        } else {
          result.signature_ = signatureBuilder_.build();
        }
        if (sthExtensionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            sthExtension_ = java.util.Collections.unmodifiableList(sthExtension_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.sthExtension_ = sthExtension_;
        } else {
          result.sthExtension_ = sthExtensionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasTreeSize()) {
          setTreeSize(other.getTreeSize());
        }
        if (other.hasSha256RootHash()) {
          setSha256RootHash(other.getSha256RootHash());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        if (sthExtensionBuilder_ == null) {
          if (!other.sthExtension_.isEmpty()) {
            if (sthExtension_.isEmpty()) {
              sthExtension_ = other.sthExtension_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureSthExtensionIsMutable();
              sthExtension_.addAll(other.sthExtension_);
            }
            onChanged();
          }
        } else {
          if (!other.sthExtension_.isEmpty()) {
            if (sthExtensionBuilder_.isEmpty()) {
              sthExtensionBuilder_.dispose();
              sthExtensionBuilder_ = null;
              sthExtension_ = other.sthExtension_;
              bitField0_ = (bitField0_ & ~0x00000040);
              sthExtensionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSthExtensionFieldBuilder() : null;
            } else {
              sthExtensionBuilder_.addAllMessages(other.sthExtension_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.Version version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the tree head signature.
       * (Note that each leaf has its own version, so a V2 tree
       * can contain V1 leaves, too.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the tree head signature.
       * (Note that each leaf has its own version, so a V2 tree
       * can contain V1 leaves, too.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.Version getVersion() {
        return version_;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the tree head signature.
       * (Note that each leaf has its own version, so a V2 tree
       * can contain V1 leaves, too.
       * </pre>
       */
      public Builder setVersion(org.certificatetransparency.ctlog.proto.Ct.Version value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ct.Version version = 1 [default = UNKNOWN_VERSION];</code>
       *
       * <pre>
       * The version of the tree head signature.
       * (Note that each leaf has its own version, so a V2 tree
       * can contain V1 leaves, too.
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = org.certificatetransparency.ctlog.proto.Ct.Version.UNKNOWN_VERSION;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.LogID id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder> idBuilder_;
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogID getId() {
        if (idBuilder_ == null) {
          return id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder setId(org.certificatetransparency.ctlog.proto.Ct.LogID value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder setId(
          org.certificatetransparency.ctlog.proto.Ct.LogID.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder mergeId(org.certificatetransparency.ctlog.proto.Ct.LogID value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              id_ != org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance()) {
            id_ =
              org.certificatetransparency.ctlog.proto.Ct.LogID.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = org.certificatetransparency.ctlog.proto.Ct.LogID.getDefaultInstance();
          onChanged();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogID.Builder getIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_;
        }
      }
      /**
       * <code>optional .ct.LogID id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.LogID, org.certificatetransparency.ctlog.proto.Ct.LogID.Builder, org.certificatetransparency.ctlog.proto.Ct.LogIDOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long treeSize_ ;
      /**
       * <code>optional int64 tree_size = 4;</code>
       */
      public boolean hasTreeSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 tree_size = 4;</code>
       */
      public long getTreeSize() {
        return treeSize_;
      }
      /**
       * <code>optional int64 tree_size = 4;</code>
       */
      public Builder setTreeSize(long value) {
        bitField0_ |= 0x00000008;
        treeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tree_size = 4;</code>
       */
      public Builder clearTreeSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        treeSize_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sha256RootHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes sha256_root_hash = 5;</code>
       */
      public boolean hasSha256RootHash() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes sha256_root_hash = 5;</code>
       */
      public com.google.protobuf.ByteString getSha256RootHash() {
        return sha256RootHash_;
      }
      /**
       * <code>optional bytes sha256_root_hash = 5;</code>
       */
      public Builder setSha256RootHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        sha256RootHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes sha256_root_hash = 5;</code>
       */
      public Builder clearSha256RootHash() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sha256RootHash_ = getDefaultInstance().getSha256RootHash();
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.DigitallySigned signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder> signatureBuilder_;
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned getSignature() {
        if (signatureBuilder_ == null) {
          return signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public Builder setSignature(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public Builder setSignature(
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public Builder mergeSignature(org.certificatetransparency.ctlog.proto.Ct.DigitallySigned value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              signature_ != org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance()) {
            signature_ =
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.getDefaultInstance();
          onChanged();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_;
        }
      }
      /**
       * <code>optional .ct.DigitallySigned signature = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.DigitallySigned, org.certificatetransparency.ctlog.proto.Ct.DigitallySigned.Builder, org.certificatetransparency.ctlog.proto.Ct.DigitallySignedOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SthExtension> sthExtension_ =
        java.util.Collections.emptyList();
      private void ensureSthExtensionIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sthExtension_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SthExtension>(sthExtension_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SthExtension, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder> sthExtensionBuilder_;

      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SthExtension> getSthExtensionList() {
        if (sthExtensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sthExtension_);
        } else {
          return sthExtensionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public int getSthExtensionCount() {
        if (sthExtensionBuilder_ == null) {
          return sthExtension_.size();
        } else {
          return sthExtensionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SthExtension getSthExtension(int index) {
        if (sthExtensionBuilder_ == null) {
          return sthExtension_.get(index);
        } else {
          return sthExtensionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder setSthExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SthExtension value) {
        if (sthExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSthExtensionIsMutable();
          sthExtension_.set(index, value);
          onChanged();
        } else {
          sthExtensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder setSthExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder builderForValue) {
        if (sthExtensionBuilder_ == null) {
          ensureSthExtensionIsMutable();
          sthExtension_.set(index, builderForValue.build());
          onChanged();
        } else {
          sthExtensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder addSthExtension(org.certificatetransparency.ctlog.proto.Ct.SthExtension value) {
        if (sthExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSthExtensionIsMutable();
          sthExtension_.add(value);
          onChanged();
        } else {
          sthExtensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder addSthExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SthExtension value) {
        if (sthExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSthExtensionIsMutable();
          sthExtension_.add(index, value);
          onChanged();
        } else {
          sthExtensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder addSthExtension(
          org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder builderForValue) {
        if (sthExtensionBuilder_ == null) {
          ensureSthExtensionIsMutable();
          sthExtension_.add(builderForValue.build());
          onChanged();
        } else {
          sthExtensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder addSthExtension(
          int index, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder builderForValue) {
        if (sthExtensionBuilder_ == null) {
          ensureSthExtensionIsMutable();
          sthExtension_.add(index, builderForValue.build());
          onChanged();
        } else {
          sthExtensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder addAllSthExtension(
          java.lang.Iterable<? extends org.certificatetransparency.ctlog.proto.Ct.SthExtension> values) {
        if (sthExtensionBuilder_ == null) {
          ensureSthExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sthExtension_);
          onChanged();
        } else {
          sthExtensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder clearSthExtension() {
        if (sthExtensionBuilder_ == null) {
          sthExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          sthExtensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public Builder removeSthExtension(int index) {
        if (sthExtensionBuilder_ == null) {
          ensureSthExtensionIsMutable();
          sthExtension_.remove(index);
          onChanged();
        } else {
          sthExtensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder getSthExtensionBuilder(
          int index) {
        return getSthExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder getSthExtensionOrBuilder(
          int index) {
        if (sthExtensionBuilder_ == null) {
          return sthExtension_.get(index);  } else {
          return sthExtensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder> 
           getSthExtensionOrBuilderList() {
        if (sthExtensionBuilder_ != null) {
          return sthExtensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sthExtension_);
        }
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder addSthExtensionBuilder() {
        return getSthExtensionFieldBuilder().addBuilder(
            org.certificatetransparency.ctlog.proto.Ct.SthExtension.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder addSthExtensionBuilder(
          int index) {
        return getSthExtensionFieldBuilder().addBuilder(
            index, org.certificatetransparency.ctlog.proto.Ct.SthExtension.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SthExtension sth_extension = 7;</code>
       *
       * <pre>
       * Only supported in V2. &lt;0..2^16-1&gt;
       * </pre>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder> 
           getSthExtensionBuilderList() {
        return getSthExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SthExtension, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder> 
          getSthExtensionFieldBuilder() {
        if (sthExtensionBuilder_ == null) {
          sthExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SthExtension, org.certificatetransparency.ctlog.proto.Ct.SthExtension.Builder, org.certificatetransparency.ctlog.proto.Ct.SthExtensionOrBuilder>(
                  sthExtension_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          sthExtension_ = null;
        }
        return sthExtensionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.SignedTreeHead)
    }

    static {
      defaultInstance = new SignedTreeHead(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SignedTreeHead)
  }

  public interface SSLClientCTDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SSLClientCTData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
     */
    boolean hasReconstructedEntry();
    /**
     * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogEntry getReconstructedEntry();
    /**
     * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder getReconstructedEntryOrBuilder();

    /**
     * <code>optional bytes certificate_sha256_hash = 2;</code>
     */
    boolean hasCertificateSha256Hash();
    /**
     * <code>optional bytes certificate_sha256_hash = 2;</code>
     */
    com.google.protobuf.ByteString getCertificateSha256Hash();

    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    java.util.List<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo> 
        getAttachedSctInfoList();
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo getAttachedSctInfo(int index);
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    int getAttachedSctInfoCount();
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder> 
        getAttachedSctInfoOrBuilderList();
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder getAttachedSctInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ct.SSLClientCTData}
   *
   * <pre>
   * Stuff the SSL client spits out from a connection.
   * </pre>
   */
  public static final class SSLClientCTData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SSLClientCTData)
      SSLClientCTDataOrBuilder {
    // Use SSLClientCTData.newBuilder() to construct.
    private SSLClientCTData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSLClientCTData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSLClientCTData defaultInstance;
    public static SSLClientCTData getDefaultInstance() {
      return defaultInstance;
    }

    public SSLClientCTData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSLClientCTData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = reconstructedEntry_.toBuilder();
              }
              reconstructedEntry_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.LogEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reconstructedEntry_);
                reconstructedEntry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              certificateSha256Hash_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                attachedSctInfo_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              attachedSctInfo_.add(input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          attachedSctInfo_ = java.util.Collections.unmodifiableList(attachedSctInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.class, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.Builder.class);
    }

    public static com.google.protobuf.Parser<SSLClientCTData> PARSER =
        new com.google.protobuf.AbstractParser<SSLClientCTData>() {
      public SSLClientCTData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSLClientCTData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSLClientCTData> getParserForType() {
      return PARSER;
    }

    public interface SCTInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ct.SSLClientCTData.SCTInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       *
       * <pre>
       * There is an entry + sct -&gt; leaf hash mapping.
       * </pre>
       */
      boolean hasSct();
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       *
       * <pre>
       * There is an entry + sct -&gt; leaf hash mapping.
       * </pre>
       */
      org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getSct();
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       *
       * <pre>
       * There is an entry + sct -&gt; leaf hash mapping.
       * </pre>
       */
      org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder getSctOrBuilder();

      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      boolean hasMerkleLeafHash();
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      com.google.protobuf.ByteString getMerkleLeafHash();
    }
    /**
     * Protobuf type {@code ct.SSLClientCTData.SCTInfo}
     */
    public static final class SCTInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:ct.SSLClientCTData.SCTInfo)
        SCTInfoOrBuilder {
      // Use SCTInfo.newBuilder() to construct.
      private SCTInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SCTInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SCTInfo defaultInstance;
      public static SCTInfo getDefaultInstance() {
        return defaultInstance;
      }

      public SCTInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SCTInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = sct_.toBuilder();
                }
                sct_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sct_);
                  sct_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                merkleLeafHash_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_SCTInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_SCTInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.class, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<SCTInfo> PARSER =
          new com.google.protobuf.AbstractParser<SCTInfo>() {
        public SCTInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SCTInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SCTInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SCT_FIELD_NUMBER = 1;
      private org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp sct_;
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       *
       * <pre>
       * There is an entry + sct -&gt; leaf hash mapping.
       * </pre>
       */
      public boolean hasSct() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       *
       * <pre>
       * There is an entry + sct -&gt; leaf hash mapping.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getSct() {
        return sct_;
      }
      /**
       * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
       *
       * <pre>
       * There is an entry + sct -&gt; leaf hash mapping.
       * </pre>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder getSctOrBuilder() {
        return sct_;
      }

      public static final int MERKLE_LEAF_HASH_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString merkleLeafHash_;
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      public boolean hasMerkleLeafHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes merkle_leaf_hash = 2;</code>
       */
      public com.google.protobuf.ByteString getMerkleLeafHash() {
        return merkleLeafHash_;
      }

      private void initFields() {
        sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
        merkleLeafHash_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, sct_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, merkleLeafHash_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, sct_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, merkleLeafHash_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ct.SSLClientCTData.SCTInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ct.SSLClientCTData.SCTInfo)
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_SCTInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_SCTInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.class, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder.class);
        }

        // Construct using org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSctFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (sctBuilder_ == null) {
            sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
          } else {
            sctBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          merkleLeafHash_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_SCTInfo_descriptor;
        }

        public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo getDefaultInstanceForType() {
          return org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.getDefaultInstance();
        }

        public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo build() {
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo buildPartial() {
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo result = new org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (sctBuilder_ == null) {
            result.sct_ = sct_;
          } else {
            result.sct_ = sctBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.merkleLeafHash_ = merkleLeafHash_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo) {
            return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo other) {
          if (other == org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.getDefaultInstance()) return this;
          if (other.hasSct()) {
            mergeSct(other.getSct());
          }
          if (other.hasMerkleLeafHash()) {
            setMerkleLeafHash(other.getMerkleLeafHash());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder> sctBuilder_;
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public boolean hasSct() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp getSct() {
          if (sctBuilder_ == null) {
            return sct_;
          } else {
            return sctBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public Builder setSct(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp value) {
          if (sctBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sct_ = value;
            onChanged();
          } else {
            sctBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public Builder setSct(
            org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder builderForValue) {
          if (sctBuilder_ == null) {
            sct_ = builderForValue.build();
            onChanged();
          } else {
            sctBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public Builder mergeSct(org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp value) {
          if (sctBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                sct_ != org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance()) {
              sct_ =
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.newBuilder(sct_).mergeFrom(value).buildPartial();
            } else {
              sct_ = value;
            }
            onChanged();
          } else {
            sctBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public Builder clearSct() {
          if (sctBuilder_ == null) {
            sct_ = org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.getDefaultInstance();
            onChanged();
          } else {
            sctBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder getSctBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getSctFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        public org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder getSctOrBuilder() {
          if (sctBuilder_ != null) {
            return sctBuilder_.getMessageOrBuilder();
          } else {
            return sct_;
          }
        }
        /**
         * <code>optional .ct.SignedCertificateTimestamp sct = 1;</code>
         *
         * <pre>
         * There is an entry + sct -&gt; leaf hash mapping.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder> 
            getSctFieldBuilder() {
          if (sctBuilder_ == null) {
            sctBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestamp.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedCertificateTimestampOrBuilder>(
                    getSct(),
                    getParentForChildren(),
                    isClean());
            sct_ = null;
          }
          return sctBuilder_;
        }

        private com.google.protobuf.ByteString merkleLeafHash_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes merkle_leaf_hash = 2;</code>
         */
        public boolean hasMerkleLeafHash() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes merkle_leaf_hash = 2;</code>
         */
        public com.google.protobuf.ByteString getMerkleLeafHash() {
          return merkleLeafHash_;
        }
        /**
         * <code>optional bytes merkle_leaf_hash = 2;</code>
         */
        public Builder setMerkleLeafHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          merkleLeafHash_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes merkle_leaf_hash = 2;</code>
         */
        public Builder clearMerkleLeafHash() {
          bitField0_ = (bitField0_ & ~0x00000002);
          merkleLeafHash_ = getDefaultInstance().getMerkleLeafHash();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ct.SSLClientCTData.SCTInfo)
      }

      static {
        defaultInstance = new SCTInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ct.SSLClientCTData.SCTInfo)
    }

    private int bitField0_;
    public static final int RECONSTRUCTED_ENTRY_FIELD_NUMBER = 1;
    private org.certificatetransparency.ctlog.proto.Ct.LogEntry reconstructedEntry_;
    /**
     * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
     */
    public boolean hasReconstructedEntry() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogEntry getReconstructedEntry() {
      return reconstructedEntry_;
    }
    /**
     * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder getReconstructedEntryOrBuilder() {
      return reconstructedEntry_;
    }

    public static final int CERTIFICATE_SHA256_HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString certificateSha256Hash_;
    /**
     * <code>optional bytes certificate_sha256_hash = 2;</code>
     */
    public boolean hasCertificateSha256Hash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes certificate_sha256_hash = 2;</code>
     */
    public com.google.protobuf.ByteString getCertificateSha256Hash() {
      return certificateSha256Hash_;
    }

    public static final int ATTACHED_SCT_INFO_FIELD_NUMBER = 3;
    private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo> attachedSctInfo_;
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo> getAttachedSctInfoList() {
      return attachedSctInfo_;
    }
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder> 
        getAttachedSctInfoOrBuilderList() {
      return attachedSctInfo_;
    }
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    public int getAttachedSctInfoCount() {
      return attachedSctInfo_.size();
    }
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo getAttachedSctInfo(int index) {
      return attachedSctInfo_.get(index);
    }
    /**
     * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder getAttachedSctInfoOrBuilder(
        int index) {
      return attachedSctInfo_.get(index);
    }

    private void initFields() {
      reconstructedEntry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
      certificateSha256Hash_ = com.google.protobuf.ByteString.EMPTY;
      attachedSctInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, reconstructedEntry_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, certificateSha256Hash_);
      }
      for (int i = 0; i < attachedSctInfo_.size(); i++) {
        output.writeMessage(3, attachedSctInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, reconstructedEntry_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, certificateSha256Hash_);
      }
      for (int i = 0; i < attachedSctInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, attachedSctInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SSLClientCTData}
     *
     * <pre>
     * Stuff the SSL client spits out from a connection.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SSLClientCTData)
        org.certificatetransparency.ctlog.proto.Ct.SSLClientCTDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.class, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReconstructedEntryFieldBuilder();
          getAttachedSctInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (reconstructedEntryBuilder_ == null) {
          reconstructedEntry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
        } else {
          reconstructedEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        certificateSha256Hash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (attachedSctInfoBuilder_ == null) {
          attachedSctInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          attachedSctInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SSLClientCTData_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData build() {
        org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData result = new org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (reconstructedEntryBuilder_ == null) {
          result.reconstructedEntry_ = reconstructedEntry_;
        } else {
          result.reconstructedEntry_ = reconstructedEntryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.certificateSha256Hash_ = certificateSha256Hash_;
        if (attachedSctInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            attachedSctInfo_ = java.util.Collections.unmodifiableList(attachedSctInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.attachedSctInfo_ = attachedSctInfo_;
        } else {
          result.attachedSctInfo_ = attachedSctInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.getDefaultInstance()) return this;
        if (other.hasReconstructedEntry()) {
          mergeReconstructedEntry(other.getReconstructedEntry());
        }
        if (other.hasCertificateSha256Hash()) {
          setCertificateSha256Hash(other.getCertificateSha256Hash());
        }
        if (attachedSctInfoBuilder_ == null) {
          if (!other.attachedSctInfo_.isEmpty()) {
            if (attachedSctInfo_.isEmpty()) {
              attachedSctInfo_ = other.attachedSctInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAttachedSctInfoIsMutable();
              attachedSctInfo_.addAll(other.attachedSctInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.attachedSctInfo_.isEmpty()) {
            if (attachedSctInfoBuilder_.isEmpty()) {
              attachedSctInfoBuilder_.dispose();
              attachedSctInfoBuilder_ = null;
              attachedSctInfo_ = other.attachedSctInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              attachedSctInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttachedSctInfoFieldBuilder() : null;
            } else {
              attachedSctInfoBuilder_.addAllMessages(other.attachedSctInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.certificatetransparency.ctlog.proto.Ct.LogEntry reconstructedEntry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogEntry, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder> reconstructedEntryBuilder_;
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public boolean hasReconstructedEntry() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntry getReconstructedEntry() {
        if (reconstructedEntryBuilder_ == null) {
          return reconstructedEntry_;
        } else {
          return reconstructedEntryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public Builder setReconstructedEntry(org.certificatetransparency.ctlog.proto.Ct.LogEntry value) {
        if (reconstructedEntryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reconstructedEntry_ = value;
          onChanged();
        } else {
          reconstructedEntryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public Builder setReconstructedEntry(
          org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder builderForValue) {
        if (reconstructedEntryBuilder_ == null) {
          reconstructedEntry_ = builderForValue.build();
          onChanged();
        } else {
          reconstructedEntryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public Builder mergeReconstructedEntry(org.certificatetransparency.ctlog.proto.Ct.LogEntry value) {
        if (reconstructedEntryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              reconstructedEntry_ != org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance()) {
            reconstructedEntry_ =
              org.certificatetransparency.ctlog.proto.Ct.LogEntry.newBuilder(reconstructedEntry_).mergeFrom(value).buildPartial();
          } else {
            reconstructedEntry_ = value;
          }
          onChanged();
        } else {
          reconstructedEntryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public Builder clearReconstructedEntry() {
        if (reconstructedEntryBuilder_ == null) {
          reconstructedEntry_ = org.certificatetransparency.ctlog.proto.Ct.LogEntry.getDefaultInstance();
          onChanged();
        } else {
          reconstructedEntryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder getReconstructedEntryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getReconstructedEntryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder getReconstructedEntryOrBuilder() {
        if (reconstructedEntryBuilder_ != null) {
          return reconstructedEntryBuilder_.getMessageOrBuilder();
        } else {
          return reconstructedEntry_;
        }
      }
      /**
       * <code>optional .ct.LogEntry reconstructed_entry = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.LogEntry, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder> 
          getReconstructedEntryFieldBuilder() {
        if (reconstructedEntryBuilder_ == null) {
          reconstructedEntryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.LogEntry, org.certificatetransparency.ctlog.proto.Ct.LogEntry.Builder, org.certificatetransparency.ctlog.proto.Ct.LogEntryOrBuilder>(
                  getReconstructedEntry(),
                  getParentForChildren(),
                  isClean());
          reconstructedEntry_ = null;
        }
        return reconstructedEntryBuilder_;
      }

      private com.google.protobuf.ByteString certificateSha256Hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes certificate_sha256_hash = 2;</code>
       */
      public boolean hasCertificateSha256Hash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes certificate_sha256_hash = 2;</code>
       */
      public com.google.protobuf.ByteString getCertificateSha256Hash() {
        return certificateSha256Hash_;
      }
      /**
       * <code>optional bytes certificate_sha256_hash = 2;</code>
       */
      public Builder setCertificateSha256Hash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        certificateSha256Hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes certificate_sha256_hash = 2;</code>
       */
      public Builder clearCertificateSha256Hash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        certificateSha256Hash_ = getDefaultInstance().getCertificateSha256Hash();
        onChanged();
        return this;
      }

      private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo> attachedSctInfo_ =
        java.util.Collections.emptyList();
      private void ensureAttachedSctInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attachedSctInfo_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo>(attachedSctInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder> attachedSctInfoBuilder_;

      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo> getAttachedSctInfoList() {
        if (attachedSctInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attachedSctInfo_);
        } else {
          return attachedSctInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public int getAttachedSctInfoCount() {
        if (attachedSctInfoBuilder_ == null) {
          return attachedSctInfo_.size();
        } else {
          return attachedSctInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo getAttachedSctInfo(int index) {
        if (attachedSctInfoBuilder_ == null) {
          return attachedSctInfo_.get(index);
        } else {
          return attachedSctInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder setAttachedSctInfo(
          int index, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo value) {
        if (attachedSctInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.set(index, value);
          onChanged();
        } else {
          attachedSctInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder setAttachedSctInfo(
          int index, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder builderForValue) {
        if (attachedSctInfoBuilder_ == null) {
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          attachedSctInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder addAttachedSctInfo(org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo value) {
        if (attachedSctInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.add(value);
          onChanged();
        } else {
          attachedSctInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder addAttachedSctInfo(
          int index, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo value) {
        if (attachedSctInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.add(index, value);
          onChanged();
        } else {
          attachedSctInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder addAttachedSctInfo(
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder builderForValue) {
        if (attachedSctInfoBuilder_ == null) {
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.add(builderForValue.build());
          onChanged();
        } else {
          attachedSctInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder addAttachedSctInfo(
          int index, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder builderForValue) {
        if (attachedSctInfoBuilder_ == null) {
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          attachedSctInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder addAllAttachedSctInfo(
          java.lang.Iterable<? extends org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo> values) {
        if (attachedSctInfoBuilder_ == null) {
          ensureAttachedSctInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, attachedSctInfo_);
          onChanged();
        } else {
          attachedSctInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder clearAttachedSctInfo() {
        if (attachedSctInfoBuilder_ == null) {
          attachedSctInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          attachedSctInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public Builder removeAttachedSctInfo(int index) {
        if (attachedSctInfoBuilder_ == null) {
          ensureAttachedSctInfoIsMutable();
          attachedSctInfo_.remove(index);
          onChanged();
        } else {
          attachedSctInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder getAttachedSctInfoBuilder(
          int index) {
        return getAttachedSctInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder getAttachedSctInfoOrBuilder(
          int index) {
        if (attachedSctInfoBuilder_ == null) {
          return attachedSctInfo_.get(index);  } else {
          return attachedSctInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder> 
           getAttachedSctInfoOrBuilderList() {
        if (attachedSctInfoBuilder_ != null) {
          return attachedSctInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attachedSctInfo_);
        }
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder addAttachedSctInfoBuilder() {
        return getAttachedSctInfoFieldBuilder().addBuilder(
            org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder addAttachedSctInfoBuilder(
          int index) {
        return getAttachedSctInfoFieldBuilder().addBuilder(
            index, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SSLClientCTData.SCTInfo attached_sct_info = 3;</code>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder> 
           getAttachedSctInfoBuilderList() {
        return getAttachedSctInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder> 
          getAttachedSctInfoFieldBuilder() {
        if (attachedSctInfoBuilder_ == null) {
          attachedSctInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfo.Builder, org.certificatetransparency.ctlog.proto.Ct.SSLClientCTData.SCTInfoOrBuilder>(
                  attachedSctInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          attachedSctInfo_ = null;
        }
        return attachedSctInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.SSLClientCTData)
    }

    static {
      defaultInstance = new SSLClientCTData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SSLClientCTData)
  }

  public interface ClusterNodeStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.ClusterNodeState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string node_id = 1;</code>
     */
    boolean hasNodeId();
    /**
     * <code>optional string node_id = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <code>optional string node_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasContiguousTreeSize();
    /**
     * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated long getContiguousTreeSize();

    /**
     * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
     */
    boolean hasNewestSth();
    /**
     * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getNewestSth();
    /**
     * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder getNewestSthOrBuilder();

    /**
     * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
     */
    boolean hasCurrentServingSth();
    /**
     * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getCurrentServingSth();
    /**
     * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder getCurrentServingSthOrBuilder();

    /**
     * <code>optional string hostname = 5;</code>
     *
     * <pre>
     * The following host_name/log_port pair are used to allow a log node to
     * contact other nodes in the cluster, primarily for the purposes of
     * replication.
     * hostname/ip which can be used to contact [just] this log node
     * </pre>
     */
    boolean hasHostname();
    /**
     * <code>optional string hostname = 5;</code>
     *
     * <pre>
     * The following host_name/log_port pair are used to allow a log node to
     * contact other nodes in the cluster, primarily for the purposes of
     * replication.
     * hostname/ip which can be used to contact [just] this log node
     * </pre>
     */
    java.lang.String getHostname();
    /**
     * <code>optional string hostname = 5;</code>
     *
     * <pre>
     * The following host_name/log_port pair are used to allow a log node to
     * contact other nodes in the cluster, primarily for the purposes of
     * replication.
     * hostname/ip which can be used to contact [just] this log node
     * </pre>
     */
    com.google.protobuf.ByteString
        getHostnameBytes();

    /**
     * <code>optional int32 log_port = 6;</code>
     *
     * <pre>
     * port on which this log node is listening.
     * </pre>
     */
    boolean hasLogPort();
    /**
     * <code>optional int32 log_port = 6;</code>
     *
     * <pre>
     * port on which this log node is listening.
     * </pre>
     */
    int getLogPort();
  }
  /**
   * Protobuf type {@code ct.ClusterNodeState}
   */
  public static final class ClusterNodeState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.ClusterNodeState)
      ClusterNodeStateOrBuilder {
    // Use ClusterNodeState.newBuilder() to construct.
    private ClusterNodeState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClusterNodeState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClusterNodeState defaultInstance;
    public static ClusterNodeState getDefaultInstance() {
      return defaultInstance;
    }

    public ClusterNodeState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterNodeState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              nodeId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              contiguousTreeSize_ = input.readInt64();
              break;
            }
            case 26: {
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = newestSth_.toBuilder();
              }
              newestSth_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newestSth_);
                newestSth_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = currentServingSth_.toBuilder();
              }
              currentServingSth_ = input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentServingSth_);
                currentServingSth_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              hostname_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              logPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterNodeState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterNodeState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.class, org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.Builder.class);
    }

    public static com.google.protobuf.Parser<ClusterNodeState> PARSER =
        new com.google.protobuf.AbstractParser<ClusterNodeState>() {
      public ClusterNodeState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterNodeState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterNodeState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private java.lang.Object nodeId_;
    /**
     * <code>optional string node_id = 1;</code>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string node_id = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nodeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string node_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTIGUOUS_TREE_SIZE_FIELD_NUMBER = 2;
    private long contiguousTreeSize_;
    /**
     * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasContiguousTreeSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public long getContiguousTreeSize() {
      return contiguousTreeSize_;
    }

    public static final int NEWEST_STH_FIELD_NUMBER = 3;
    private org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead newestSth_;
    /**
     * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
     */
    public boolean hasNewestSth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getNewestSth() {
      return newestSth_;
    }
    /**
     * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder getNewestSthOrBuilder() {
      return newestSth_;
    }

    public static final int CURRENT_SERVING_STH_FIELD_NUMBER = 4;
    private org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead currentServingSth_;
    /**
     * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
     */
    public boolean hasCurrentServingSth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getCurrentServingSth() {
      return currentServingSth_;
    }
    /**
     * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder getCurrentServingSthOrBuilder() {
      return currentServingSth_;
    }

    public static final int HOSTNAME_FIELD_NUMBER = 5;
    private java.lang.Object hostname_;
    /**
     * <code>optional string hostname = 5;</code>
     *
     * <pre>
     * The following host_name/log_port pair are used to allow a log node to
     * contact other nodes in the cluster, primarily for the purposes of
     * replication.
     * hostname/ip which can be used to contact [just] this log node
     * </pre>
     */
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string hostname = 5;</code>
     *
     * <pre>
     * The following host_name/log_port pair are used to allow a log node to
     * contact other nodes in the cluster, primarily for the purposes of
     * replication.
     * hostname/ip which can be used to contact [just] this log node
     * </pre>
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hostname = 5;</code>
     *
     * <pre>
     * The following host_name/log_port pair are used to allow a log node to
     * contact other nodes in the cluster, primarily for the purposes of
     * replication.
     * hostname/ip which can be used to contact [just] this log node
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOG_PORT_FIELD_NUMBER = 6;
    private int logPort_;
    /**
     * <code>optional int32 log_port = 6;</code>
     *
     * <pre>
     * port on which this log node is listening.
     * </pre>
     */
    public boolean hasLogPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 log_port = 6;</code>
     *
     * <pre>
     * port on which this log node is listening.
     * </pre>
     */
    public int getLogPort() {
      return logPort_;
    }

    private void initFields() {
      nodeId_ = "";
      contiguousTreeSize_ = 0L;
      newestSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
      currentServingSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
      hostname_ = "";
      logPort_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNodeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, contiguousTreeSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, newestSth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, currentServingSth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, logPort_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNodeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, contiguousTreeSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, newestSth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, currentServingSth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, logPort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.ClusterNodeState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.ClusterNodeState)
        org.certificatetransparency.ctlog.proto.Ct.ClusterNodeStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterNodeState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterNodeState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.class, org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewestSthFieldBuilder();
          getCurrentServingSthFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nodeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        contiguousTreeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (newestSthBuilder_ == null) {
          newestSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
        } else {
          newestSthBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (currentServingSthBuilder_ == null) {
          currentServingSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
        } else {
          currentServingSthBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        hostname_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        logPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterNodeState_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState build() {
        org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState result = new org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.contiguousTreeSize_ = contiguousTreeSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (newestSthBuilder_ == null) {
          result.newestSth_ = newestSth_;
        } else {
          result.newestSth_ = newestSthBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (currentServingSthBuilder_ == null) {
          result.currentServingSth_ = currentServingSth_;
        } else {
          result.currentServingSth_ = currentServingSthBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hostname_ = hostname_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.logPort_ = logPort_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          bitField0_ |= 0x00000001;
          nodeId_ = other.nodeId_;
          onChanged();
        }
        if (other.hasContiguousTreeSize()) {
          setContiguousTreeSize(other.getContiguousTreeSize());
        }
        if (other.hasNewestSth()) {
          mergeNewestSth(other.getNewestSth());
        }
        if (other.hasCurrentServingSth()) {
          mergeCurrentServingSth(other.getCurrentServingSth());
        }
        if (other.hasHostname()) {
          bitField0_ |= 0x00000010;
          hostname_ = other.hostname_;
          onChanged();
        }
        if (other.hasLogPort()) {
          setLogPort(other.getLogPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.ClusterNodeState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object nodeId_ = "";
      /**
       * <code>optional string node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string node_id = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nodeId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string node_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string node_id = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string node_id = 1;</code>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string node_id = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nodeId_ = value;
        onChanged();
        return this;
      }

      private long contiguousTreeSize_ ;
      /**
       * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasContiguousTreeSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public long getContiguousTreeSize() {
        return contiguousTreeSize_;
      }
      /**
       * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setContiguousTreeSize(long value) {
        bitField0_ |= 0x00000002;
        contiguousTreeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 contiguous_tree_size = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearContiguousTreeSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        contiguousTreeSize_ = 0L;
        onChanged();
        return this;
      }

      private org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead newestSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder> newestSthBuilder_;
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public boolean hasNewestSth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getNewestSth() {
        if (newestSthBuilder_ == null) {
          return newestSth_;
        } else {
          return newestSthBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public Builder setNewestSth(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead value) {
        if (newestSthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newestSth_ = value;
          onChanged();
        } else {
          newestSthBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public Builder setNewestSth(
          org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder builderForValue) {
        if (newestSthBuilder_ == null) {
          newestSth_ = builderForValue.build();
          onChanged();
        } else {
          newestSthBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public Builder mergeNewestSth(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead value) {
        if (newestSthBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              newestSth_ != org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance()) {
            newestSth_ =
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.newBuilder(newestSth_).mergeFrom(value).buildPartial();
          } else {
            newestSth_ = value;
          }
          onChanged();
        } else {
          newestSthBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public Builder clearNewestSth() {
        if (newestSthBuilder_ == null) {
          newestSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
          onChanged();
        } else {
          newestSthBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder getNewestSthBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNewestSthFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder getNewestSthOrBuilder() {
        if (newestSthBuilder_ != null) {
          return newestSthBuilder_.getMessageOrBuilder();
        } else {
          return newestSth_;
        }
      }
      /**
       * <code>optional .ct.SignedTreeHead newest_sth = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder> 
          getNewestSthFieldBuilder() {
        if (newestSthBuilder_ == null) {
          newestSthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder>(
                  getNewestSth(),
                  getParentForChildren(),
                  isClean());
          newestSth_ = null;
        }
        return newestSthBuilder_;
      }

      private org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead currentServingSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder> currentServingSthBuilder_;
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public boolean hasCurrentServingSth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead getCurrentServingSth() {
        if (currentServingSthBuilder_ == null) {
          return currentServingSth_;
        } else {
          return currentServingSthBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public Builder setCurrentServingSth(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead value) {
        if (currentServingSthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentServingSth_ = value;
          onChanged();
        } else {
          currentServingSthBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public Builder setCurrentServingSth(
          org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder builderForValue) {
        if (currentServingSthBuilder_ == null) {
          currentServingSth_ = builderForValue.build();
          onChanged();
        } else {
          currentServingSthBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public Builder mergeCurrentServingSth(org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead value) {
        if (currentServingSthBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              currentServingSth_ != org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance()) {
            currentServingSth_ =
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.newBuilder(currentServingSth_).mergeFrom(value).buildPartial();
          } else {
            currentServingSth_ = value;
          }
          onChanged();
        } else {
          currentServingSthBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public Builder clearCurrentServingSth() {
        if (currentServingSthBuilder_ == null) {
          currentServingSth_ = org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.getDefaultInstance();
          onChanged();
        } else {
          currentServingSthBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder getCurrentServingSthBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCurrentServingSthFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder getCurrentServingSthOrBuilder() {
        if (currentServingSthBuilder_ != null) {
          return currentServingSthBuilder_.getMessageOrBuilder();
        } else {
          return currentServingSth_;
        }
      }
      /**
       * <code>optional .ct.SignedTreeHead current_serving_sth = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder> 
          getCurrentServingSthFieldBuilder() {
        if (currentServingSthBuilder_ == null) {
          currentServingSthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHead.Builder, org.certificatetransparency.ctlog.proto.Ct.SignedTreeHeadOrBuilder>(
                  getCurrentServingSth(),
                  getParentForChildren(),
                  isClean());
          currentServingSth_ = null;
        }
        return currentServingSthBuilder_;
      }

      private java.lang.Object hostname_ = "";
      /**
       * <code>optional string hostname = 5;</code>
       *
       * <pre>
       * The following host_name/log_port pair are used to allow a log node to
       * contact other nodes in the cluster, primarily for the purposes of
       * replication.
       * hostname/ip which can be used to contact [just] this log node
       * </pre>
       */
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string hostname = 5;</code>
       *
       * <pre>
       * The following host_name/log_port pair are used to allow a log node to
       * contact other nodes in the cluster, primarily for the purposes of
       * replication.
       * hostname/ip which can be used to contact [just] this log node
       * </pre>
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hostname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hostname = 5;</code>
       *
       * <pre>
       * The following host_name/log_port pair are used to allow a log node to
       * contact other nodes in the cluster, primarily for the purposes of
       * replication.
       * hostname/ip which can be used to contact [just] this log node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hostname = 5;</code>
       *
       * <pre>
       * The following host_name/log_port pair are used to allow a log node to
       * contact other nodes in the cluster, primarily for the purposes of
       * replication.
       * hostname/ip which can be used to contact [just] this log node
       * </pre>
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        hostname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostname = 5;</code>
       *
       * <pre>
       * The following host_name/log_port pair are used to allow a log node to
       * contact other nodes in the cluster, primarily for the purposes of
       * replication.
       * hostname/ip which can be used to contact [just] this log node
       * </pre>
       */
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostname = 5;</code>
       *
       * <pre>
       * The following host_name/log_port pair are used to allow a log node to
       * contact other nodes in the cluster, primarily for the purposes of
       * replication.
       * hostname/ip which can be used to contact [just] this log node
       * </pre>
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        hostname_ = value;
        onChanged();
        return this;
      }

      private int logPort_ ;
      /**
       * <code>optional int32 log_port = 6;</code>
       *
       * <pre>
       * port on which this log node is listening.
       * </pre>
       */
      public boolean hasLogPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 log_port = 6;</code>
       *
       * <pre>
       * port on which this log node is listening.
       * </pre>
       */
      public int getLogPort() {
        return logPort_;
      }
      /**
       * <code>optional int32 log_port = 6;</code>
       *
       * <pre>
       * port on which this log node is listening.
       * </pre>
       */
      public Builder setLogPort(int value) {
        bitField0_ |= 0x00000020;
        logPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 log_port = 6;</code>
       *
       * <pre>
       * port on which this log node is listening.
       * </pre>
       */
      public Builder clearLogPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        logPort_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.ClusterNodeState)
    }

    static {
      defaultInstance = new ClusterNodeState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.ClusterNodeState)
  }

  public interface ClusterControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.ClusterControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool accept_new_entries = 1 [default = true];</code>
     */
    boolean hasAcceptNewEntries();
    /**
     * <code>optional bool accept_new_entries = 1 [default = true];</code>
     */
    boolean getAcceptNewEntries();
  }
  /**
   * Protobuf type {@code ct.ClusterControl}
   */
  public static final class ClusterControl extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.ClusterControl)
      ClusterControlOrBuilder {
    // Use ClusterControl.newBuilder() to construct.
    private ClusterControl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClusterControl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClusterControl defaultInstance;
    public static ClusterControl getDefaultInstance() {
      return defaultInstance;
    }

    public ClusterControl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              acceptNewEntries_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterControl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.ClusterControl.class, org.certificatetransparency.ctlog.proto.Ct.ClusterControl.Builder.class);
    }

    public static com.google.protobuf.Parser<ClusterControl> PARSER =
        new com.google.protobuf.AbstractParser<ClusterControl>() {
      public ClusterControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterControl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterControl> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCEPT_NEW_ENTRIES_FIELD_NUMBER = 1;
    private boolean acceptNewEntries_;
    /**
     * <code>optional bool accept_new_entries = 1 [default = true];</code>
     */
    public boolean hasAcceptNewEntries() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool accept_new_entries = 1 [default = true];</code>
     */
    public boolean getAcceptNewEntries() {
      return acceptNewEntries_;
    }

    private void initFields() {
      acceptNewEntries_ = true;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, acceptNewEntries_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, acceptNewEntries_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.ClusterControl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.ClusterControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.ClusterControl)
        org.certificatetransparency.ctlog.proto.Ct.ClusterControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterControl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.ClusterControl.class, org.certificatetransparency.ctlog.proto.Ct.ClusterControl.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.ClusterControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        acceptNewEntries_ = true;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterControl_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterControl getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.ClusterControl.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterControl build() {
        org.certificatetransparency.ctlog.proto.Ct.ClusterControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterControl buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.ClusterControl result = new org.certificatetransparency.ctlog.proto.Ct.ClusterControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.acceptNewEntries_ = acceptNewEntries_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.ClusterControl) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.ClusterControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.ClusterControl other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.ClusterControl.getDefaultInstance()) return this;
        if (other.hasAcceptNewEntries()) {
          setAcceptNewEntries(other.getAcceptNewEntries());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.ClusterControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.ClusterControl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean acceptNewEntries_ = true;
      /**
       * <code>optional bool accept_new_entries = 1 [default = true];</code>
       */
      public boolean hasAcceptNewEntries() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool accept_new_entries = 1 [default = true];</code>
       */
      public boolean getAcceptNewEntries() {
        return acceptNewEntries_;
      }
      /**
       * <code>optional bool accept_new_entries = 1 [default = true];</code>
       */
      public Builder setAcceptNewEntries(boolean value) {
        bitField0_ |= 0x00000001;
        acceptNewEntries_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool accept_new_entries = 1 [default = true];</code>
       */
      public Builder clearAcceptNewEntries() {
        bitField0_ = (bitField0_ & ~0x00000001);
        acceptNewEntries_ = true;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.ClusterControl)
    }

    static {
      defaultInstance = new ClusterControl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.ClusterControl)
  }

  public interface ClusterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.ClusterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 minimum_serving_nodes = 1;</code>
     *
     * <pre>
     * The minimum number of nodes which must be able to serve a given STH.
     * This setting allows you to configure the level of cluster resiliency
     * against data (in the form of node/node database) loss.
     * i.e.: Once an STH has been created, it must have been replicated to
     * at least this many nodes before being considered as a candidate for
     * the overall cluster serving STH.
     * </pre>
     */
    boolean hasMinimumServingNodes();
    /**
     * <code>optional int32 minimum_serving_nodes = 1;</code>
     *
     * <pre>
     * The minimum number of nodes which must be able to serve a given STH.
     * This setting allows you to configure the level of cluster resiliency
     * against data (in the form of node/node database) loss.
     * i.e.: Once an STH has been created, it must have been replicated to
     * at least this many nodes before being considered as a candidate for
     * the overall cluster serving STH.
     * </pre>
     */
    int getMinimumServingNodes();

    /**
     * <code>optional double minimum_serving_fraction = 2;</code>
     *
     * <pre>
     * The minimum fraction of nodes which must be able to serve a given STH.
     * This setting allows you to configure the serving capacity redundancy of
     * your cluster.
     * e.g. you determine you need 3 nodes to serve your expected peak traffic
     * levels, but want to be over-provisioned by 25% to ensure the cluster will
     * continue to be able to handle the traffic in the case of a single node
     * failure, you might set this to 0.75 to ensure that any cluster-wide
     * serving STH candidate must be servable from at least 3 of your 4 nodes.
     * </pre>
     */
    boolean hasMinimumServingFraction();
    /**
     * <code>optional double minimum_serving_fraction = 2;</code>
     *
     * <pre>
     * The minimum fraction of nodes which must be able to serve a given STH.
     * This setting allows you to configure the serving capacity redundancy of
     * your cluster.
     * e.g. you determine you need 3 nodes to serve your expected peak traffic
     * levels, but want to be over-provisioned by 25% to ensure the cluster will
     * continue to be able to handle the traffic in the case of a single node
     * failure, you might set this to 0.75 to ensure that any cluster-wide
     * serving STH candidate must be servable from at least 3 of your 4 nodes.
     * </pre>
     */
    double getMinimumServingFraction();

    /**
     * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
     *
     * <pre>
     * When the number of entries in the EtcedConsistentStore exceeds this value,
     * the log server will reject all calls to add-[pre-]chain to protect itself
     * and etcd.
     * </pre>
     */
    boolean hasEtcdRejectAddPendingThreshold();
    /**
     * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
     *
     * <pre>
     * When the number of entries in the EtcedConsistentStore exceeds this value,
     * the log server will reject all calls to add-[pre-]chain to protect itself
     * and etcd.
     * </pre>
     */
    double getEtcdRejectAddPendingThreshold();
  }
  /**
   * Protobuf type {@code ct.ClusterConfig}
   *
   * <pre>
   *&#47;//////////////////////////////
   * This section of the config affects the selection of the cluster's current
   * serving STH.
   * The cluster will always attempt to determine the newest (and
   * largest) possible STH which meets the constraints defined below from the
   * set of STHs available at the individual cluster nodes.
   * (Note that nodes with newer/larger STHs can, of course, serve
   * earlier/smaller STHs.)
   * </pre>
   */
  public static final class ClusterConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.ClusterConfig)
      ClusterConfigOrBuilder {
    // Use ClusterConfig.newBuilder() to construct.
    private ClusterConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClusterConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClusterConfig defaultInstance;
    public static ClusterConfig getDefaultInstance() {
      return defaultInstance;
    }

    public ClusterConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              minimumServingNodes_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              minimumServingFraction_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              etcdRejectAddPendingThreshold_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.class, org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<ClusterConfig> PARSER =
        new com.google.protobuf.AbstractParser<ClusterConfig>() {
      public ClusterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MINIMUM_SERVING_NODES_FIELD_NUMBER = 1;
    private int minimumServingNodes_;
    /**
     * <code>optional int32 minimum_serving_nodes = 1;</code>
     *
     * <pre>
     * The minimum number of nodes which must be able to serve a given STH.
     * This setting allows you to configure the level of cluster resiliency
     * against data (in the form of node/node database) loss.
     * i.e.: Once an STH has been created, it must have been replicated to
     * at least this many nodes before being considered as a candidate for
     * the overall cluster serving STH.
     * </pre>
     */
    public boolean hasMinimumServingNodes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 minimum_serving_nodes = 1;</code>
     *
     * <pre>
     * The minimum number of nodes which must be able to serve a given STH.
     * This setting allows you to configure the level of cluster resiliency
     * against data (in the form of node/node database) loss.
     * i.e.: Once an STH has been created, it must have been replicated to
     * at least this many nodes before being considered as a candidate for
     * the overall cluster serving STH.
     * </pre>
     */
    public int getMinimumServingNodes() {
      return minimumServingNodes_;
    }

    public static final int MINIMUM_SERVING_FRACTION_FIELD_NUMBER = 2;
    private double minimumServingFraction_;
    /**
     * <code>optional double minimum_serving_fraction = 2;</code>
     *
     * <pre>
     * The minimum fraction of nodes which must be able to serve a given STH.
     * This setting allows you to configure the serving capacity redundancy of
     * your cluster.
     * e.g. you determine you need 3 nodes to serve your expected peak traffic
     * levels, but want to be over-provisioned by 25% to ensure the cluster will
     * continue to be able to handle the traffic in the case of a single node
     * failure, you might set this to 0.75 to ensure that any cluster-wide
     * serving STH candidate must be servable from at least 3 of your 4 nodes.
     * </pre>
     */
    public boolean hasMinimumServingFraction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double minimum_serving_fraction = 2;</code>
     *
     * <pre>
     * The minimum fraction of nodes which must be able to serve a given STH.
     * This setting allows you to configure the serving capacity redundancy of
     * your cluster.
     * e.g. you determine you need 3 nodes to serve your expected peak traffic
     * levels, but want to be over-provisioned by 25% to ensure the cluster will
     * continue to be able to handle the traffic in the case of a single node
     * failure, you might set this to 0.75 to ensure that any cluster-wide
     * serving STH candidate must be servable from at least 3 of your 4 nodes.
     * </pre>
     */
    public double getMinimumServingFraction() {
      return minimumServingFraction_;
    }

    public static final int ETCD_REJECT_ADD_PENDING_THRESHOLD_FIELD_NUMBER = 3;
    private double etcdRejectAddPendingThreshold_;
    /**
     * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
     *
     * <pre>
     * When the number of entries in the EtcedConsistentStore exceeds this value,
     * the log server will reject all calls to add-[pre-]chain to protect itself
     * and etcd.
     * </pre>
     */
    public boolean hasEtcdRejectAddPendingThreshold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
     *
     * <pre>
     * When the number of entries in the EtcedConsistentStore exceeds this value,
     * the log server will reject all calls to add-[pre-]chain to protect itself
     * and etcd.
     * </pre>
     */
    public double getEtcdRejectAddPendingThreshold() {
      return etcdRejectAddPendingThreshold_;
    }

    private void initFields() {
      minimumServingNodes_ = 0;
      minimumServingFraction_ = 0D;
      etcdRejectAddPendingThreshold_ = 30000D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, minimumServingNodes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, minimumServingFraction_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, etcdRejectAddPendingThreshold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, minimumServingNodes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, minimumServingFraction_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, etcdRejectAddPendingThreshold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.ClusterConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.ClusterConfig}
     *
     * <pre>
     *&#47;//////////////////////////////
     * This section of the config affects the selection of the cluster's current
     * serving STH.
     * The cluster will always attempt to determine the newest (and
     * largest) possible STH which meets the constraints defined below from the
     * set of STHs available at the individual cluster nodes.
     * (Note that nodes with newer/larger STHs can, of course, serve
     * earlier/smaller STHs.)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.ClusterConfig)
        org.certificatetransparency.ctlog.proto.Ct.ClusterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.class, org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        minimumServingNodes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minimumServingFraction_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        etcdRejectAddPendingThreshold_ = 30000D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_ClusterConfig_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterConfig getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterConfig build() {
        org.certificatetransparency.ctlog.proto.Ct.ClusterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.ClusterConfig buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.ClusterConfig result = new org.certificatetransparency.ctlog.proto.Ct.ClusterConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minimumServingNodes_ = minimumServingNodes_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minimumServingFraction_ = minimumServingFraction_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.etcdRejectAddPendingThreshold_ = etcdRejectAddPendingThreshold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.ClusterConfig) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.ClusterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.ClusterConfig other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.ClusterConfig.getDefaultInstance()) return this;
        if (other.hasMinimumServingNodes()) {
          setMinimumServingNodes(other.getMinimumServingNodes());
        }
        if (other.hasMinimumServingFraction()) {
          setMinimumServingFraction(other.getMinimumServingFraction());
        }
        if (other.hasEtcdRejectAddPendingThreshold()) {
          setEtcdRejectAddPendingThreshold(other.getEtcdRejectAddPendingThreshold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.ClusterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.ClusterConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int minimumServingNodes_ ;
      /**
       * <code>optional int32 minimum_serving_nodes = 1;</code>
       *
       * <pre>
       * The minimum number of nodes which must be able to serve a given STH.
       * This setting allows you to configure the level of cluster resiliency
       * against data (in the form of node/node database) loss.
       * i.e.: Once an STH has been created, it must have been replicated to
       * at least this many nodes before being considered as a candidate for
       * the overall cluster serving STH.
       * </pre>
       */
      public boolean hasMinimumServingNodes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 minimum_serving_nodes = 1;</code>
       *
       * <pre>
       * The minimum number of nodes which must be able to serve a given STH.
       * This setting allows you to configure the level of cluster resiliency
       * against data (in the form of node/node database) loss.
       * i.e.: Once an STH has been created, it must have been replicated to
       * at least this many nodes before being considered as a candidate for
       * the overall cluster serving STH.
       * </pre>
       */
      public int getMinimumServingNodes() {
        return minimumServingNodes_;
      }
      /**
       * <code>optional int32 minimum_serving_nodes = 1;</code>
       *
       * <pre>
       * The minimum number of nodes which must be able to serve a given STH.
       * This setting allows you to configure the level of cluster resiliency
       * against data (in the form of node/node database) loss.
       * i.e.: Once an STH has been created, it must have been replicated to
       * at least this many nodes before being considered as a candidate for
       * the overall cluster serving STH.
       * </pre>
       */
      public Builder setMinimumServingNodes(int value) {
        bitField0_ |= 0x00000001;
        minimumServingNodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minimum_serving_nodes = 1;</code>
       *
       * <pre>
       * The minimum number of nodes which must be able to serve a given STH.
       * This setting allows you to configure the level of cluster resiliency
       * against data (in the form of node/node database) loss.
       * i.e.: Once an STH has been created, it must have been replicated to
       * at least this many nodes before being considered as a candidate for
       * the overall cluster serving STH.
       * </pre>
       */
      public Builder clearMinimumServingNodes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minimumServingNodes_ = 0;
        onChanged();
        return this;
      }

      private double minimumServingFraction_ ;
      /**
       * <code>optional double minimum_serving_fraction = 2;</code>
       *
       * <pre>
       * The minimum fraction of nodes which must be able to serve a given STH.
       * This setting allows you to configure the serving capacity redundancy of
       * your cluster.
       * e.g. you determine you need 3 nodes to serve your expected peak traffic
       * levels, but want to be over-provisioned by 25% to ensure the cluster will
       * continue to be able to handle the traffic in the case of a single node
       * failure, you might set this to 0.75 to ensure that any cluster-wide
       * serving STH candidate must be servable from at least 3 of your 4 nodes.
       * </pre>
       */
      public boolean hasMinimumServingFraction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double minimum_serving_fraction = 2;</code>
       *
       * <pre>
       * The minimum fraction of nodes which must be able to serve a given STH.
       * This setting allows you to configure the serving capacity redundancy of
       * your cluster.
       * e.g. you determine you need 3 nodes to serve your expected peak traffic
       * levels, but want to be over-provisioned by 25% to ensure the cluster will
       * continue to be able to handle the traffic in the case of a single node
       * failure, you might set this to 0.75 to ensure that any cluster-wide
       * serving STH candidate must be servable from at least 3 of your 4 nodes.
       * </pre>
       */
      public double getMinimumServingFraction() {
        return minimumServingFraction_;
      }
      /**
       * <code>optional double minimum_serving_fraction = 2;</code>
       *
       * <pre>
       * The minimum fraction of nodes which must be able to serve a given STH.
       * This setting allows you to configure the serving capacity redundancy of
       * your cluster.
       * e.g. you determine you need 3 nodes to serve your expected peak traffic
       * levels, but want to be over-provisioned by 25% to ensure the cluster will
       * continue to be able to handle the traffic in the case of a single node
       * failure, you might set this to 0.75 to ensure that any cluster-wide
       * serving STH candidate must be servable from at least 3 of your 4 nodes.
       * </pre>
       */
      public Builder setMinimumServingFraction(double value) {
        bitField0_ |= 0x00000002;
        minimumServingFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double minimum_serving_fraction = 2;</code>
       *
       * <pre>
       * The minimum fraction of nodes which must be able to serve a given STH.
       * This setting allows you to configure the serving capacity redundancy of
       * your cluster.
       * e.g. you determine you need 3 nodes to serve your expected peak traffic
       * levels, but want to be over-provisioned by 25% to ensure the cluster will
       * continue to be able to handle the traffic in the case of a single node
       * failure, you might set this to 0.75 to ensure that any cluster-wide
       * serving STH candidate must be servable from at least 3 of your 4 nodes.
       * </pre>
       */
      public Builder clearMinimumServingFraction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minimumServingFraction_ = 0D;
        onChanged();
        return this;
      }

      private double etcdRejectAddPendingThreshold_ = 30000D;
      /**
       * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
       *
       * <pre>
       * When the number of entries in the EtcedConsistentStore exceeds this value,
       * the log server will reject all calls to add-[pre-]chain to protect itself
       * and etcd.
       * </pre>
       */
      public boolean hasEtcdRejectAddPendingThreshold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
       *
       * <pre>
       * When the number of entries in the EtcedConsistentStore exceeds this value,
       * the log server will reject all calls to add-[pre-]chain to protect itself
       * and etcd.
       * </pre>
       */
      public double getEtcdRejectAddPendingThreshold() {
        return etcdRejectAddPendingThreshold_;
      }
      /**
       * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
       *
       * <pre>
       * When the number of entries in the EtcedConsistentStore exceeds this value,
       * the log server will reject all calls to add-[pre-]chain to protect itself
       * and etcd.
       * </pre>
       */
      public Builder setEtcdRejectAddPendingThreshold(double value) {
        bitField0_ |= 0x00000004;
        etcdRejectAddPendingThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double etcd_reject_add_pending_threshold = 3 [default = 30000];</code>
       *
       * <pre>
       * When the number of entries in the EtcedConsistentStore exceeds this value,
       * the log server will reject all calls to add-[pre-]chain to protect itself
       * and etcd.
       * </pre>
       */
      public Builder clearEtcdRejectAddPendingThreshold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        etcdRejectAddPendingThreshold_ = 30000D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ct.ClusterConfig)
    }

    static {
      defaultInstance = new ClusterConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.ClusterConfig)
  }

  public interface SequenceMappingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ct.SequenceMapping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    java.util.List<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping> 
        getMappingList();
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping getMapping(int index);
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    int getMappingCount();
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder> 
        getMappingOrBuilderList();
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder getMappingOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ct.SequenceMapping}
   */
  public static final class SequenceMapping extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ct.SequenceMapping)
      SequenceMappingOrBuilder {
    // Use SequenceMapping.newBuilder() to construct.
    private SequenceMapping(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SequenceMapping(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SequenceMapping defaultInstance;
    public static SequenceMapping getDefaultInstance() {
      return defaultInstance;
    }

    public SequenceMapping getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SequenceMapping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                mapping_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping>();
                mutable_bitField0_ |= 0x00000001;
              }
              mapping_.add(input.readMessage(org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          mapping_ = java.util.Collections.unmodifiableList(mapping_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.class, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Builder.class);
    }

    public static com.google.protobuf.Parser<SequenceMapping> PARSER =
        new com.google.protobuf.AbstractParser<SequenceMapping>() {
      public SequenceMapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SequenceMapping(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SequenceMapping> getParserForType() {
      return PARSER;
    }

    public interface MappingOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ct.SequenceMapping.Mapping)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bytes entry_hash = 1;</code>
       */
      boolean hasEntryHash();
      /**
       * <code>optional bytes entry_hash = 1;</code>
       */
      com.google.protobuf.ByteString getEntryHash();

      /**
       * <code>optional int64 sequence_number = 2;</code>
       */
      boolean hasSequenceNumber();
      /**
       * <code>optional int64 sequence_number = 2;</code>
       */
      long getSequenceNumber();
    }
    /**
     * Protobuf type {@code ct.SequenceMapping.Mapping}
     */
    public static final class Mapping extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:ct.SequenceMapping.Mapping)
        MappingOrBuilder {
      // Use Mapping.newBuilder() to construct.
      private Mapping(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Mapping(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Mapping defaultInstance;
      public static Mapping getDefaultInstance() {
        return defaultInstance;
      }

      public Mapping getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Mapping(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                entryHash_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                sequenceNumber_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_Mapping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_Mapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.class, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder.class);
      }

      public static com.google.protobuf.Parser<Mapping> PARSER =
          new com.google.protobuf.AbstractParser<Mapping>() {
        public Mapping parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Mapping(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Mapping> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ENTRY_HASH_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString entryHash_;
      /**
       * <code>optional bytes entry_hash = 1;</code>
       */
      public boolean hasEntryHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes entry_hash = 1;</code>
       */
      public com.google.protobuf.ByteString getEntryHash() {
        return entryHash_;
      }

      public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 2;
      private long sequenceNumber_;
      /**
       * <code>optional int64 sequence_number = 2;</code>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 sequence_number = 2;</code>
       */
      public long getSequenceNumber() {
        return sequenceNumber_;
      }

      private void initFields() {
        entryHash_ = com.google.protobuf.ByteString.EMPTY;
        sequenceNumber_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, entryHash_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, sequenceNumber_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, entryHash_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, sequenceNumber_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ct.SequenceMapping.Mapping}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ct.SequenceMapping.Mapping)
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_Mapping_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_Mapping_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.class, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder.class);
        }

        // Construct using org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          entryHash_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          sequenceNumber_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_Mapping_descriptor;
        }

        public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping getDefaultInstanceForType() {
          return org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.getDefaultInstance();
        }

        public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping build() {
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping buildPartial() {
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping result = new org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.entryHash_ = entryHash_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.sequenceNumber_ = sequenceNumber_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping) {
            return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping other) {
          if (other == org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.getDefaultInstance()) return this;
          if (other.hasEntryHash()) {
            setEntryHash(other.getEntryHash());
          }
          if (other.hasSequenceNumber()) {
            setSequenceNumber(other.getSequenceNumber());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString entryHash_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes entry_hash = 1;</code>
         */
        public boolean hasEntryHash() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bytes entry_hash = 1;</code>
         */
        public com.google.protobuf.ByteString getEntryHash() {
          return entryHash_;
        }
        /**
         * <code>optional bytes entry_hash = 1;</code>
         */
        public Builder setEntryHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          entryHash_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes entry_hash = 1;</code>
         */
        public Builder clearEntryHash() {
          bitField0_ = (bitField0_ & ~0x00000001);
          entryHash_ = getDefaultInstance().getEntryHash();
          onChanged();
          return this;
        }

        private long sequenceNumber_ ;
        /**
         * <code>optional int64 sequence_number = 2;</code>
         */
        public boolean hasSequenceNumber() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int64 sequence_number = 2;</code>
         */
        public long getSequenceNumber() {
          return sequenceNumber_;
        }
        /**
         * <code>optional int64 sequence_number = 2;</code>
         */
        public Builder setSequenceNumber(long value) {
          bitField0_ |= 0x00000002;
          sequenceNumber_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 sequence_number = 2;</code>
         */
        public Builder clearSequenceNumber() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sequenceNumber_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ct.SequenceMapping.Mapping)
      }

      static {
        defaultInstance = new Mapping(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ct.SequenceMapping.Mapping)
    }

    public static final int MAPPING_FIELD_NUMBER = 1;
    private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping> mapping_;
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping> getMappingList() {
      return mapping_;
    }
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder> 
        getMappingOrBuilderList() {
      return mapping_;
    }
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    public int getMappingCount() {
      return mapping_.size();
    }
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping getMapping(int index) {
      return mapping_.get(index);
    }
    /**
     * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
     */
    public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder getMappingOrBuilder(
        int index) {
      return mapping_.get(index);
    }

    private void initFields() {
      mapping_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < mapping_.size(); i++) {
        output.writeMessage(1, mapping_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mapping_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.certificatetransparency.ctlog.proto.Ct.SequenceMapping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ct.SequenceMapping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ct.SequenceMapping)
        org.certificatetransparency.ctlog.proto.Ct.SequenceMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.class, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Builder.class);
      }

      // Construct using org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMappingFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (mappingBuilder_ == null) {
          mapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          mappingBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.certificatetransparency.ctlog.proto.Ct.internal_static_ct_SequenceMapping_descriptor;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping getDefaultInstanceForType() {
        return org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.getDefaultInstance();
      }

      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping build() {
        org.certificatetransparency.ctlog.proto.Ct.SequenceMapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping buildPartial() {
        org.certificatetransparency.ctlog.proto.Ct.SequenceMapping result = new org.certificatetransparency.ctlog.proto.Ct.SequenceMapping(this);
        int from_bitField0_ = bitField0_;
        if (mappingBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            mapping_ = java.util.Collections.unmodifiableList(mapping_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mapping_ = mapping_;
        } else {
          result.mapping_ = mappingBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.certificatetransparency.ctlog.proto.Ct.SequenceMapping) {
          return mergeFrom((org.certificatetransparency.ctlog.proto.Ct.SequenceMapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.certificatetransparency.ctlog.proto.Ct.SequenceMapping other) {
        if (other == org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.getDefaultInstance()) return this;
        if (mappingBuilder_ == null) {
          if (!other.mapping_.isEmpty()) {
            if (mapping_.isEmpty()) {
              mapping_ = other.mapping_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMappingIsMutable();
              mapping_.addAll(other.mapping_);
            }
            onChanged();
          }
        } else {
          if (!other.mapping_.isEmpty()) {
            if (mappingBuilder_.isEmpty()) {
              mappingBuilder_.dispose();
              mappingBuilder_ = null;
              mapping_ = other.mapping_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mappingBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMappingFieldBuilder() : null;
            } else {
              mappingBuilder_.addAllMessages(other.mapping_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.certificatetransparency.ctlog.proto.Ct.SequenceMapping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.certificatetransparency.ctlog.proto.Ct.SequenceMapping) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping> mapping_ =
        java.util.Collections.emptyList();
      private void ensureMappingIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          mapping_ = new java.util.ArrayList<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping>(mapping_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder> mappingBuilder_;

      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping> getMappingList() {
        if (mappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mapping_);
        } else {
          return mappingBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public int getMappingCount() {
        if (mappingBuilder_ == null) {
          return mapping_.size();
        } else {
          return mappingBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping getMapping(int index) {
        if (mappingBuilder_ == null) {
          return mapping_.get(index);
        } else {
          return mappingBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder setMapping(
          int index, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.set(index, value);
          onChanged();
        } else {
          mappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder setMapping(
          int index, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder addMapping(org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.add(value);
          onChanged();
        } else {
          mappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder addMapping(
          int index, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.add(index, value);
          onChanged();
        } else {
          mappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder addMapping(
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.add(builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder addMapping(
          int index, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder addAllMapping(
          java.lang.Iterable<? extends org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping> values) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mapping_);
          onChanged();
        } else {
          mappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder clearMapping() {
        if (mappingBuilder_ == null) {
          mapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public Builder removeMapping(int index) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.remove(index);
          onChanged();
        } else {
          mappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder getMappingBuilder(
          int index) {
        return getMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder getMappingOrBuilder(
          int index) {
        if (mappingBuilder_ == null) {
          return mapping_.get(index);  } else {
          return mappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public java.util.List<? extends org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder> 
           getMappingOrBuilderList() {
        if (mappingBuilder_ != null) {
          return mappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mapping_);
        }
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder addMappingBuilder() {
        return getMappingFieldBuilder().addBuilder(
            org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder addMappingBuilder(
          int index) {
        return getMappingFieldBuilder().addBuilder(
            index, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.getDefaultInstance());
      }
      /**
       * <code>repeated .ct.SequenceMapping.Mapping mapping = 1;</code>
       */
      public java.util.List<org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder> 
           getMappingBuilderList() {
        return getMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder> 
          getMappingFieldBuilder() {
        if (mappingBuilder_ == null) {
          mappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.Mapping.Builder, org.certificatetransparency.ctlog.proto.Ct.SequenceMapping.MappingOrBuilder>(
                  mapping_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          mapping_ = null;
        }
        return mappingBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ct.SequenceMapping)
    }

    static {
      defaultInstance = new SequenceMapping(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ct.SequenceMapping)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_DigitallySigned_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_DigitallySigned_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_X509ChainEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_X509ChainEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_PreCert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_PreCert_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_CertInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_CertInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_PrecertChainEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_PrecertChainEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_XJSONEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_XJSONEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_LogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_LogEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_LogID_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_LogID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SctExtension_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SctExtension_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SignedCertificateTimestamp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SignedCertificateTimestamp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SignedCertificateTimestampList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SignedCertificateTimestampList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SignedEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SignedEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_TimestampedEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_TimestampedEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_MerkleTreeLeaf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_MerkleTreeLeaf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_MerkleAuditProof_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_MerkleAuditProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_ShortMerkleAuditProof_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_ShortMerkleAuditProof_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_LoggedEntryPB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_LoggedEntryPB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_LoggedEntryPB_Contents_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_LoggedEntryPB_Contents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SthExtension_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SthExtension_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SignedTreeHead_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SignedTreeHead_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SSLClientCTData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SSLClientCTData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SSLClientCTData_SCTInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SSLClientCTData_SCTInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_ClusterNodeState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_ClusterNodeState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_ClusterControl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_ClusterControl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_ClusterConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_ClusterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SequenceMapping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SequenceMapping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ct_SequenceMapping_Mapping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ct_SequenceMapping_Mapping_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010ct.proto\022\002ct\"\317\002\n\017DigitallySigned\022?\n\016ha" +
      "sh_algorithm\030\001 \001(\0162!.ct.DigitallySigned." +
      "HashAlgorithm:\004NONE\022H\n\rsig_algorithm\030\002 \001" +
      "(\0162&.ct.DigitallySigned.SignatureAlgorit" +
      "hm:\tANONYMOUS\022\021\n\tsignature\030\003 \001(\014\"\\\n\rHash" +
      "Algorithm\022\010\n\004NONE\020\000\022\007\n\003MD5\020\001\022\010\n\004SHA1\020\002\022\n" +
      "\n\006SHA224\020\003\022\n\n\006SHA256\020\004\022\n\n\006SHA384\020\005\022\n\n\006SH" +
      "A512\020\006\"@\n\022SignatureAlgorithm\022\r\n\tANONYMOU" +
      "S\020\000\022\007\n\003RSA\020\001\022\007\n\003DSA\020\002\022\t\n\005ECDSA\020\003\"f\n\016X509" +
      "ChainEntry\022\030\n\020leaf_certificate\030\001 \001(\014\022\037\n\t",
      "cert_info\030\003 \001(\0132\014.ct.CertInfo\022\031\n\021certifi" +
      "cate_chain\030\002 \003(\014\";\n\007PreCert\022\027\n\017issuer_ke" +
      "y_hash\030\001 \001(\014\022\027\n\017tbs_certificate\030\002 \001(\014\"<\n" +
      "\010CertInfo\022\027\n\017issuer_key_hash\030\001 \001(\014\022\027\n\017tb" +
      "s_certificate\030\002 \001(\014\"\212\001\n\021PrecertChainEntr" +
      "y\022\027\n\017pre_certificate\030\001 \001(\014\022\034\n\024precertifi" +
      "cate_chain\030\002 \003(\014\022\035\n\010pre_cert\030\003 \001(\0132\013.ct." +
      "PreCert\022\037\n\tcert_info\030\004 \001(\0132\014.ct.CertInfo" +
      "\"\032\n\nXJSONEntry\022\014\n\004json\030\001 \001(\t\"\272\001\n\010LogEntr" +
      "y\0222\n\004type\030\001 \001(\0162\020.ct.LogEntryType:\022UNKNO",
      "WN_ENTRY_TYPE\022&\n\nx509_entry\030\002 \001(\0132\022.ct.X" +
      "509ChainEntry\022,\n\rprecert_entry\030\003 \001(\0132\025.c" +
      "t.PrecertChainEntry\022$\n\014x_json_entry\030\004 \001(" +
      "\0132\016.ct.XJSONEntry\"\027\n\005LogID\022\016\n\006key_id\030\001 \001" +
      "(\014\"F\n\014SctExtension\022\032\n\022sct_extension_type" +
      "\030\001 \001(\r\022\032\n\022sct_extension_data\030\002 \001(\014\"\332\001\n\032S" +
      "ignedCertificateTimestamp\022-\n\007version\030\001 \001" +
      "(\0162\013.ct.Version:\017UNKNOWN_VERSION\022\025\n\002id\030\002" +
      " \001(\0132\t.ct.LogID\022\021\n\ttimestamp\030\003 \001(\004\022&\n\tsi" +
      "gnature\030\004 \001(\0132\023.ct.DigitallySigned\022\022\n\nex",
      "tensions\030\005 \001(\014\022\'\n\rsct_extension\030\006 \003(\0132\020." +
      "ct.SctExtension\"2\n\036SignedCertificateTime" +
      "stampList\022\020\n\010sct_list\030\001 \003(\014\"h\n\013SignedEnt" +
      "ry\022\014\n\004x509\030\001 \001(\014\022\034\n\007precert\030\002 \001(\0132\013.ct.P" +
      "reCert\022\014\n\004json\030\003 \001(\014\022\037\n\tcert_info\030\004 \001(\0132" +
      "\014.ct.CertInfo\"\257\001\n\020TimestampedEntry\022\021\n\tti" +
      "mestamp\030\001 \001(\004\022$\n\nentry_type\030\002 \001(\0162\020.ct.L" +
      "ogEntryType\022%\n\014signed_entry\030\003 \001(\0132\017.ct.S" +
      "ignedEntry\022\022\n\nextensions\030\004 \001(\014\022\'\n\rsct_ex" +
      "tension\030\005 \003(\0132\020.ct.SctExtension\"\245\001\n\016Merk",
      "leTreeLeaf\022-\n\007version\030\001 \001(\0162\013.ct.Version" +
      ":\017UNKNOWN_VERSION\0223\n\004type\030\002 \001(\0162\022.ct.Mer" +
      "kleLeafType:\021UNKNOWN_LEAF_TYPE\022/\n\021timest" +
      "amped_entry\030\003 \001(\0132\024.ct.TimestampedEntry\"" +
      "\327\001\n\020MerkleAuditProof\022-\n\007version\030\001 \001(\0162\013." +
      "ct.Version:\017UNKNOWN_VERSION\022\025\n\002id\030\002 \001(\0132" +
      "\t.ct.LogID\022\021\n\ttree_size\030\003 \001(\003\022\021\n\ttimesta" +
      "mp\030\004 \001(\004\022\022\n\nleaf_index\030\005 \001(\003\022\021\n\tpath_nod" +
      "e\030\006 \003(\014\0220\n\023tree_head_signature\030\007 \001(\0132\023.c" +
      "t.DigitallySigned\">\n\025ShortMerkleAuditPro",
      "of\022\022\n\nleaf_index\030\001 \002(\003\022\021\n\tpath_node\030\002 \003(" +
      "\014\"\306\001\n\rLoggedEntryPB\022\027\n\017sequence_number\030\001" +
      " \001(\003\022\030\n\020merkle_leaf_hash\030\002 \001(\014\022,\n\010conten" +
      "ts\030\003 \002(\0132\032.ct.LoggedEntryPB.Contents\032T\n\010" +
      "Contents\022+\n\003sct\030\001 \001(\0132\036.ct.SignedCertifi" +
      "cateTimestamp\022\033\n\005entry\030\002 \001(\0132\014.ct.LogEnt" +
      "ry\"F\n\014SthExtension\022\032\n\022sth_extension_type" +
      "\030\001 \001(\r\022\032\n\022sth_extension_data\030\002 \001(\014\"\347\001\n\016S" +
      "ignedTreeHead\022-\n\007version\030\001 \001(\0162\013.ct.Vers" +
      "ion:\017UNKNOWN_VERSION\022\025\n\002id\030\002 \001(\0132\t.ct.Lo",
      "gID\022\021\n\ttimestamp\030\003 \001(\004\022\021\n\ttree_size\030\004 \001(" +
      "\003\022\030\n\020sha256_root_hash\030\005 \001(\014\022&\n\tsignature" +
      "\030\006 \001(\0132\023.ct.DigitallySigned\022\'\n\rsth_exten" +
      "sion\030\007 \003(\0132\020.ct.SthExtension\"\347\001\n\017SSLClie" +
      "ntCTData\022)\n\023reconstructed_entry\030\001 \001(\0132\014." +
      "ct.LogEntry\022\037\n\027certificate_sha256_hash\030\002" +
      " \001(\014\0226\n\021attached_sct_info\030\003 \003(\0132\033.ct.SSL" +
      "ClientCTData.SCTInfo\032P\n\007SCTInfo\022+\n\003sct\030\001" +
      " \001(\0132\036.ct.SignedCertificateTimestamp\022\030\n\020" +
      "merkle_leaf_hash\030\002 \001(\014\"\302\001\n\020ClusterNodeSt",
      "ate\022\017\n\007node_id\030\001 \001(\t\022 \n\024contiguous_tree_" +
      "size\030\002 \001(\003B\002\030\001\022&\n\nnewest_sth\030\003 \001(\0132\022.ct." +
      "SignedTreeHead\022/\n\023current_serving_sth\030\004 " +
      "\001(\0132\022.ct.SignedTreeHead\022\020\n\010hostname\030\005 \001(" +
      "\t\022\020\n\010log_port\030\006 \001(\005\"2\n\016ClusterControl\022 \n" +
      "\022accept_new_entries\030\001 \001(\010:\004true\"\202\001\n\rClus" +
      "terConfig\022\035\n\025minimum_serving_nodes\030\001 \001(\005" +
      "\022 \n\030minimum_serving_fraction\030\002 \001(\001\0220\n!et" +
      "cd_reject_add_pending_threshold\030\003 \001(\001:\0053" +
      "0000\"w\n\017SequenceMapping\022,\n\007mapping\030\001 \003(\013",
      "2\033.ct.SequenceMapping.Mapping\0326\n\007Mapping" +
      "\022\022\n\nentry_hash\030\001 \001(\014\022\027\n\017sequence_number\030" +
      "\002 \001(\003*u\n\014LogEntryType\022\016\n\nX509_ENTRY\020\000\022\021\n" +
      "\rPRECERT_ENTRY\020\001\022\024\n\020PRECERT_ENTRY_V2\020\002\022\022" +
      "\n\014X_JSON_ENTRY\020\200\200\002\022\030\n\022UNKNOWN_ENTRY_TYPE" +
      "\020\200\200\004*9\n\rSignatureType\022\031\n\025CERTIFICATE_TIM" +
      "ESTAMP\020\000\022\r\n\tTREE_HEAD\020\001*/\n\007Version\022\006\n\002V1" +
      "\020\000\022\006\n\002V2\020\001\022\024\n\017UNKNOWN_VERSION\020\200\002*?\n\016Merk" +
      "leLeafType\022\025\n\021TIMESTAMPED_ENTRY\020\000\022\026\n\021UNK" +
      "NOWN_LEAF_TYPE\020\200\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ct_DigitallySigned_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ct_DigitallySigned_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_DigitallySigned_descriptor,
        new java.lang.String[] { "HashAlgorithm", "SigAlgorithm", "Signature", });
    internal_static_ct_X509ChainEntry_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ct_X509ChainEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_X509ChainEntry_descriptor,
        new java.lang.String[] { "LeafCertificate", "CertInfo", "CertificateChain", });
    internal_static_ct_PreCert_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ct_PreCert_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_PreCert_descriptor,
        new java.lang.String[] { "IssuerKeyHash", "TbsCertificate", });
    internal_static_ct_CertInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ct_CertInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_CertInfo_descriptor,
        new java.lang.String[] { "IssuerKeyHash", "TbsCertificate", });
    internal_static_ct_PrecertChainEntry_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ct_PrecertChainEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_PrecertChainEntry_descriptor,
        new java.lang.String[] { "PreCertificate", "PrecertificateChain", "PreCert", "CertInfo", });
    internal_static_ct_XJSONEntry_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ct_XJSONEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_XJSONEntry_descriptor,
        new java.lang.String[] { "Json", });
    internal_static_ct_LogEntry_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ct_LogEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_LogEntry_descriptor,
        new java.lang.String[] { "Type", "X509Entry", "PrecertEntry", "XJsonEntry", });
    internal_static_ct_LogID_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_ct_LogID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_LogID_descriptor,
        new java.lang.String[] { "KeyId", });
    internal_static_ct_SctExtension_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_ct_SctExtension_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SctExtension_descriptor,
        new java.lang.String[] { "SctExtensionType", "SctExtensionData", });
    internal_static_ct_SignedCertificateTimestamp_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_ct_SignedCertificateTimestamp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SignedCertificateTimestamp_descriptor,
        new java.lang.String[] { "Version", "Id", "Timestamp", "Signature", "Extensions", "SctExtension", });
    internal_static_ct_SignedCertificateTimestampList_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_ct_SignedCertificateTimestampList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SignedCertificateTimestampList_descriptor,
        new java.lang.String[] { "SctList", });
    internal_static_ct_SignedEntry_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_ct_SignedEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SignedEntry_descriptor,
        new java.lang.String[] { "X509", "Precert", "Json", "CertInfo", });
    internal_static_ct_TimestampedEntry_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_ct_TimestampedEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_TimestampedEntry_descriptor,
        new java.lang.String[] { "Timestamp", "EntryType", "SignedEntry", "Extensions", "SctExtension", });
    internal_static_ct_MerkleTreeLeaf_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_ct_MerkleTreeLeaf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_MerkleTreeLeaf_descriptor,
        new java.lang.String[] { "Version", "Type", "TimestampedEntry", });
    internal_static_ct_MerkleAuditProof_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_ct_MerkleAuditProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_MerkleAuditProof_descriptor,
        new java.lang.String[] { "Version", "Id", "TreeSize", "Timestamp", "LeafIndex", "PathNode", "TreeHeadSignature", });
    internal_static_ct_ShortMerkleAuditProof_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_ct_ShortMerkleAuditProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_ShortMerkleAuditProof_descriptor,
        new java.lang.String[] { "LeafIndex", "PathNode", });
    internal_static_ct_LoggedEntryPB_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_ct_LoggedEntryPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_LoggedEntryPB_descriptor,
        new java.lang.String[] { "SequenceNumber", "MerkleLeafHash", "Contents", });
    internal_static_ct_LoggedEntryPB_Contents_descriptor =
      internal_static_ct_LoggedEntryPB_descriptor.getNestedTypes().get(0);
    internal_static_ct_LoggedEntryPB_Contents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_LoggedEntryPB_Contents_descriptor,
        new java.lang.String[] { "Sct", "Entry", });
    internal_static_ct_SthExtension_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_ct_SthExtension_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SthExtension_descriptor,
        new java.lang.String[] { "SthExtensionType", "SthExtensionData", });
    internal_static_ct_SignedTreeHead_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_ct_SignedTreeHead_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SignedTreeHead_descriptor,
        new java.lang.String[] { "Version", "Id", "Timestamp", "TreeSize", "Sha256RootHash", "Signature", "SthExtension", });
    internal_static_ct_SSLClientCTData_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_ct_SSLClientCTData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SSLClientCTData_descriptor,
        new java.lang.String[] { "ReconstructedEntry", "CertificateSha256Hash", "AttachedSctInfo", });
    internal_static_ct_SSLClientCTData_SCTInfo_descriptor =
      internal_static_ct_SSLClientCTData_descriptor.getNestedTypes().get(0);
    internal_static_ct_SSLClientCTData_SCTInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SSLClientCTData_SCTInfo_descriptor,
        new java.lang.String[] { "Sct", "MerkleLeafHash", });
    internal_static_ct_ClusterNodeState_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_ct_ClusterNodeState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_ClusterNodeState_descriptor,
        new java.lang.String[] { "NodeId", "ContiguousTreeSize", "NewestSth", "CurrentServingSth", "Hostname", "LogPort", });
    internal_static_ct_ClusterControl_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_ct_ClusterControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_ClusterControl_descriptor,
        new java.lang.String[] { "AcceptNewEntries", });
    internal_static_ct_ClusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_ct_ClusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_ClusterConfig_descriptor,
        new java.lang.String[] { "MinimumServingNodes", "MinimumServingFraction", "EtcdRejectAddPendingThreshold", });
    internal_static_ct_SequenceMapping_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_ct_SequenceMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SequenceMapping_descriptor,
        new java.lang.String[] { "Mapping", });
    internal_static_ct_SequenceMapping_Mapping_descriptor =
      internal_static_ct_SequenceMapping_descriptor.getNestedTypes().get(0);
    internal_static_ct_SequenceMapping_Mapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ct_SequenceMapping_Mapping_descriptor,
        new java.lang.String[] { "EntryHash", "SequenceNumber", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
